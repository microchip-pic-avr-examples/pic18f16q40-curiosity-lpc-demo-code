

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Jun 16 14:25:39 2023

Microchip MPLAB XC8 C Compiler v2.41 (Pro license) build 20230208172133 Og9f 
     1                           	processor	18F16Q40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	plic
     5                           	psect	nvBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1,inline,group=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1,inline,group=1
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1,inline,group=1
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=3
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text64,global,reloc=2,class=CODE,delta=1
    77                           	psect	text65,global,reloc=2,class=CODE,delta=1
    78                           	psect	text66,global,reloc=2,class=CODE,delta=1
    79                           	psect	text67,global,reloc=2,class=CODE,delta=1
    80                           	psect	text68,global,reloc=2,class=CODE,delta=1
    81                           	psect	text69,global,reloc=2,class=CODE,delta=1
    82                           	psect	text70,global,reloc=2,class=CODE,delta=1
    83                           	psect	text71,global,reloc=2,class=CODE,delta=1
    84                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    85                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    86                           	psect	text72,global,reloc=2,class=CODE,delta=1
    87                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    88                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    89   000000                     
    90                           ; Generated 23/03/2023 GMT
    91                           ; 
    92                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    93                           ; All rights reserved.
    94                           ; 
    95                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    96                           ; 
    97                           ; Redistribution and use in source and binary forms, with or without modification, are
    98                           ; permitted provided that the following conditions are met:
    99                           ; 
   100                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   101                           ;        conditions and the following disclaimer.
   102                           ; 
   103                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   104                           ;        of conditions and the following disclaimer in the documentation and/or other
   105                           ;        materials provided with the distribution. Publication is not required when
   106                           ;        this file is used in an embedded application.
   107                           ; 
   108                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   109                           ;        software without specific prior written permission.
   110                           ; 
   111                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   112                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   113                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   114                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   115                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   116                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   117                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   118                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   119                           ; 
   120                           ; 
   121                           ; Code-generator required, PIC18F16Q40 Definitions
   122                           ; 
   123                           ; SFR Addresses
   124   000000                     
   125 ;; Function _PWM1_16BIT_Slice1Output1_DefaultInterruptHandler is unused but had its address taken
   126   000000                     
   127 ;; Function _PWM1_16BIT_Slice1Output2_DefaultInterruptHandler is unused but had its address taken
   128   000000                     
   129 ;; Function _PWM1_16BIT_Period_DefaultInterruptHandler is unused but had its address taken
   130   000000                     
   131 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   132   000000                     
   133 ;; Function _INT1_DefaultInterruptHandler is unused but had its address taken
   134   000000                     
   135 ;; Function _INT2_DefaultInterruptHandler is unused but had its address taken
   136   000000                     
   137 ;; Function _Timer1_Tasks is unused but had its address taken
   138   000000                     
   139 ;; Function _TMR2_PeriodCountSet is unused but had its address taken
   140   000000                     
   141 ;; Function _TMR2_Tasks is unused but had its address taken
   142   000000                     
   143 ;; Function _Timer0_Start is unused but had its address taken
   144   000000                     
   145 ;; Function _Timer0_Stop is unused but had its address taken
   146   000000                     
   147 ;; Function _Timer0_Reload is unused but had its address taken
   148   000000                     
   149 ;; Function _UART1_Deinitialize is unused but had its address taken
   150   000000                     
   151 ;; Function _UART1_TransmitEnable is unused but had its address taken
   152   000000                     
   153 ;; Function _UART1_TransmitDisable is unused but had its address taken
   154   000000                     
   155 ;; Function _UART1_AutoBaudSet is unused but had its address taken
   156   000000                     
   157 ;; Function _UART1_AutoBaudQuery is unused but had its address taken
   158   000000                     
   159 ;; Function _UART1_IsRxReady is unused but had its address taken
   160   000000                     
   161 ;; Function _UART1_IsTxDone is unused but had its address taken
   162   000000                     
   163 ;; Function _UART1_ErrorGet is unused but had its address taken
   164   000000                     
   165 ;; Function _UART1_Read is unused but had its address taken
   166   000000                     
   167 ;; Function _UART1_DefaultFramingErrorCallback is unused but had its address taken
   168   000000                     
   169 ;; Function _UART1_DefaultOverrunErrorCallback is unused but had its address taken
   170   000000                     
   171 ;; Function _UART1_DefaultParityErrorCallback is unused but had its address taken
   172   000000                     _T0CON0	set	794
   173   000000                     _T0CON1	set	795
   174   000000                     _TMR0L	set	792
   175   000000                     _TMR0H	set	793
   176   000000                     _T2CON	set	798
   177   000000                     _T2TMR	set	796
   178   000000                     _T2PR	set	797
   179   000000                     _T2HLT	set	799
   180   000000                     _T2CLKCON	set	800
   181   000000                     _T1CON	set	788
   182   000000                     _T1CLK	set	791
   183   000000                     _T1GATE	set	790
   184   000000                     _IOCBF	set	1039
   185   000000                     _IOCBN	set	1038
   186   000000                     _IOCBP	set	1037
   187   000000                     _IOCAF	set	1031
   188   000000                     _IOCAN	set	1030
   189   000000                     _IOCAP	set	1029
   190   000000                     _INLVLB	set	1036
   191   000000                     _INLVLA	set	1028
   192   000000                     _SLRCONB	set	1035
   193   000000                     _SLRCONA	set	1027
   194   000000                     _ODCONB	set	1034
   195   000000                     _ODCONA	set	1026
   196   000000                     _WPUB	set	1033
   197   000000                     _WPUA	set	1025
   198   000000                     _ANSELC	set	1040
   199   000000                     _ANSELB	set	1032
   200   000000                     _LATB	set	1215
   201   000000                     _OSCTUNE	set	176
   202   000000                     _OSCFRQ	set	177
   203   000000                     _OSCEN	set	179
   204   000000                     _PWM1CON	set	1129
   205   000000                     _PWM1S1CFG	set	1130
   206   000000                     _PWM1GIE	set	1128
   207   000000                     _PWM1GIR	set	1127
   208   000000                     _PWM1PIPOS	set	1126
   209   000000                     _PWM1CPRE	set	1125
   210   000000                     _PWM1PRH	set	1124
   211   000000                     _PWM1PRL	set	1123
   212   000000                     _PWM1LDS	set	1122
   213   000000                     _PWM1CLK	set	1121
   214   000000                     _NVMLOCK	set	66
   215   000000                     _NVMDATL	set	70
   216   000000                     _NVMDATH	set	71
   217   000000                     _NVMADRL	set	67
   218   000000                     _NVMADRH	set	68
   219   000000                     _NVMADRU	set	69
   220   000000                     _NVMCON1bits	set	65
   221   000000                     _ADERRL	set	989
   222   000000                     _ADERRH	set	990
   223   000000                     _ADPREVL	set	1000
   224   000000                     _ADPREVH	set	1001
   225   000000                     _ADFLTRL	set	993
   226   000000                     _ADFLTRH	set	994
   227   000000                     _ADACCL	set	995
   228   000000                     _ADACCH	set	996
   229   000000                     _ADCNT	set	998
   230   000000                     _PIR2bits	set	1205
   231   000000                     _ADCON0	set	1011
   232   000000                     _ADCON1	set	1012
   233   000000                     _ADPREH	set	1010
   234   000000                     _ADPREL	set	1009
   235   000000                     _ADCAP	set	1008
   236   000000                     _ADACQH	set	1007
   237   000000                     _ADRPT	set	999
   238   000000                     _ADACCU	set	997
   239   000000                     _ADSTPTH	set	992
   240   000000                     _ADSTPTL	set	991
   241   000000                     _ADUTHH	set	988
   242   000000                     _ADUTHL	set	987
   243   000000                     _ADLTHH	set	986
   244   000000                     _LATCbits	set	1216
   245                           
   246                           	psect	nvBANK5
   247   000588                     __pnvBANK5:
   248                           	callstack 0
   249   000588                     _Timer0_OverflowCallback:
   250                           	callstack 0
   251   000588                     	ds	2
   252   00058A                     _TMR2_OverflowCallback:
   253                           	callstack 0
   254   00058A                     	ds	2
   255   00058C                     _Timer1_OverflowCallback:
   256                           	callstack 0
   257   00058C                     	ds	2
   258   000000                     _U1FIFObits	set	688
   259   000000                     _U1ERRIRbits	set	690
   260   000000                     _U1UIRbits	set	689
   261   000000                     _U1CON0bits	set	683
   262   000000                     _T0CON0bits	set	794
   263   000000                     _PR2	set	797
   264   000000                     _T2CONbits	set	798
   265   000000                     _T1CONbits	set	788
   266   000000                     _ADRESL	set	1002
   267   000000                     _ADRESH	set	1003
   268   000000                     _ADCON0bits	set	1011
   269   000000                     _LATC	set	1216
   270   000000                     _PIE3bits	set	1195
   271   000000                     _PWM1CONbits	set	1129
   272   000000                     _PWM1GIRbits	set	1127
   273   000000                     _LATAbits	set	1214
   274   000000                     _ADRES	set	1002
   275   000000                     _NVMCON0bits	set	64
   276   000000                     _WDTCON0bits	set	120
   277   000000                     _RC5PPS	set	534
   278   000000                     _PIR3bits	set	1206
   279   000000                     _LATA	set	1214
   280   000000                     _TRISA	set	1222
   281   000000                     _INTCON0bits	set	1238
   282   000000                     _PIR6bits	set	1209
   283   000000                     _PIR4bits	set	1207
   284   000000                     _ADACQL	set	1006
   285   000000                     _ADPCH	set	1004
   286   000000                     _TMR0IE	set	9567
   287   000000                     _RC6PPS	set	535
   288   000000                     _U1RXPPS	set	626
   289   000000                     _RB6I2C	set	646
   290   000000                     _RB4I2C	set	647
   291   000000                     _ADLTHL	set	985
   292   000000                     _TABLAT	set	1269
   293   000000                     _TBLPTRL	set	1270
   294   000000                     _TBLPTRH	set	1271
   295   000000                     _TBLPTRU	set	1272
   296   000000                     _PIR0bits	set	1203
   297   000000                     _PIE4bits	set	1196
   298   000000                     _PIR1bits	set	1204
   299   000000                     _ACTCON	set	172
   300   000000                     _OSCCON1	set	173
   301   000000                     _ANSELA	set	1024
   302   000000                     _PWM1ERS	set	1120
   303   000000                     _ADCLK	set	1018
   304   000000                     _ADACT	set	1017
   305   000000                     _ADREF	set	1016
   306   000000                     _ADSTAT	set	1015
   307   000000                     _ADCON3	set	1014
   308   000000                     _ADCON2	set	1013
   309   000000                     _PIE0bits	set	1192
   310   000000                     _PWM1S1P2H	set	1134
   311   000000                     _PWM1S1P2L	set	1133
   312   000000                     _PWM1S1P1H	set	1132
   313   000000                     _PWM1S1P1L	set	1131
   314   000000                     _OSCCON3	set	175
   315   000000                     _PIR10bits	set	1213
   316   000000                     _PORTCbits	set	1232
   317   000000                     _TRISC	set	1224
   318   000000                     _TRISB	set	1223
   319   000000                     _IOCCF	set	1047
   320   000000                     _IOCCN	set	1046
   321   000000                     _IOCCP	set	1045
   322   000000                     _INLVLC	set	1044
   323   000000                     _SLRCONC	set	1043
   324   000000                     _ODCONC	set	1042
   325   000000                     _WPUC	set	1041
   326   000000                     _U1RXB	set	673
   327   000000                     _TMR1L	set	786
   328   000000                     _TMR1H	set	787
   329   000000                     _T1GCON	set	789
   330   000000                     _T2RST	set	801
   331   000000                     _U1ERRIE	set	691
   332   000000                     _U1ERRIR	set	690
   333   000000                     _U1UIR	set	689
   334   000000                     _U1FIFO	set	688
   335   000000                     _U1BRGH	set	687
   336   000000                     _U1BRGL	set	686
   337   000000                     _U1CON2	set	685
   338   000000                     _U1CON1	set	684
   339   000000                     _U1CON0	set	683
   340   000000                     _U1P3H	set	682
   341   000000                     _U1P3L	set	681
   342   000000                     _U1P2H	set	680
   343   000000                     _U1P2L	set	679
   344   000000                     _U1P1H	set	678
   345   000000                     _U1P1L	set	677
   346   000000                     _U1TXCHK	set	676
   347   000000                     _U1TXB	set	675
   348   000000                     _U1RXCHK	set	674
   349                           
   350                           	psect	smallconst
   351   001600                     __psmallconst:
   352                           	callstack 0
   353   001600  00                 	db	0
   354   001601                     STR_1:
   355   001601  41                 	db	65	;'A'
   356   001602  44                 	db	68	;'D'
   357   001603  43                 	db	67	;'C'
   358   001604  20                 	db	32
   359   001605  52                 	db	82	;'R'
   360   001606  65                 	db	101	;'e'
   361   001607  73                 	db	115	;'s'
   362   001608  75                 	db	117	;'u'
   363   001609  6C                 	db	108	;'l'
   364   00160A  74                 	db	116	;'t'
   365   00160B  3A                 	db	58	;':'
   366   00160C  20                 	db	32
   367   00160D  25                 	db	37
   368   00160E  64                 	db	100	;'d'
   369   00160F  0A                 	db	10
   370   001610  0D                 	db	13
   371   001611  00                 	db	0
   372   001612  00                 	db	0	; dummy byte at the end
   373   000000                     
   374                           ; #config settings
   375                           
   376                           	psect	cinit
   377   00223C                     __pcinit:
   378                           	callstack 0
   379   00223C                     start_initialization:
   380                           	callstack 0
   381   00223C                     __initialization:
   382                           	callstack 0
   383                           
   384                           ; Clear objects allocated to BANK5 (40 bytes)
   385   00223C  EE01  F160         	lfsr	0,__pbssBANK5
   386   002240  0E28               	movlw	40
   387   002242                     clear_0:
   388   002242  6AEE               	clrf	postinc0,c
   389   002244  06E8               	decf	wreg,f,c
   390   002246  E1FD               	bnz	clear_0
   391                           
   392                           ; Clear objects allocated to COMRAM (21 bytes)
   393   002248  EE01  F147         	lfsr	0,__pbssCOMRAM
   394   00224C  0E15               	movlw	21
   395   00224E                     clear_1:
   396   00224E  6AEE               	clrf	postinc0,c
   397   002250  06E8               	decf	wreg,f,c
   398   002252  E1FD               	bnz	clear_1
   399                           
   400                           ;
   401                           ; Setup IVTBASE
   402                           ;
   403   002254  0104               	movlb	4
   404   002256  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   405   002258  6F5D               	movwf	93,b
   406   00225A  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   407   00225C  6F5E               	movwf	94,b
   408   00225E  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   409   002260  6F5F               	movwf	95,b
   410   002262                     end_of_initialization:
   411                           	callstack 0
   412   002262                     __end_of__initialization:
   413                           	callstack 0
   414   002262  0100               	movlb	0
   415   002264  EF88  F00E         	goto	_main	;jump to C main() function
   416                           
   417                           	psect	bssCOMRAM
   418   000547                     __pbssCOMRAM:
   419                           	callstack 0
   420   000547                     _UART1_FramingErrorHandler:
   421                           	callstack 0
   422   000547                     	ds	2
   423   000549                     _timer1ReloadVal:
   424                           	callstack 0
   425   000549                     	ds	2
   426   00054B                     _adcResult@PWM$F336:
   427                           	callstack 0
   428   00054B                     	ds	2
   429   00054D                     _unlockKeyHigh:
   430                           	callstack 0
   431   00054D                     	ds	1
   432   00054E                     _unlockKeyLow:
   433                           	callstack 0
   434   00054E                     	ds	1
   435   00054F                     _ledDisplay:
   436                           	callstack 0
   437   00054F                     	ds	1
   438   000550                     _adcResult@EEPROM$F644:
   439                           	callstack 0
   440   000550                     	ds	1
   441   000551                     _rotateReg@Interrupt$F496:
   442                           	callstack 0
   443   000551                     	ds	1
   444   000552                     _rotateReg@Timer1$F381:
   445                           	callstack 0
   446   000552                     	ds	1
   447   000553                     _rotateReg@VSR$F279:
   448                           	callstack 0
   449   000553                     	ds	1
   450   000554                     _delay:
   451                           	callstack 0
   452   000554                     	ds	1
   453   000555                     _adcResult:
   454                           	callstack 0
   455   000555                     	ds	1
   456   000556                     _rotateReg:
   457                           	callstack 0
   458   000556                     	ds	1
   459   000557                     _flagCounter:
   460                           	callstack 0
   461   000557                     	ds	1
   462   000558                     _btnState:
   463                           	callstack 0
   464   000558                     	ds	1
   465   000559                     _labState:
   466                           	callstack 0
   467   000559                     	ds	1
   468   00055A                     _switchEvent:
   469                           	callstack 0
   470   00055A                     	ds	1
   471   00055B                     _labNumber:
   472                           	callstack 0
   473   00055B                     	ds	1
   474                           
   475                           	psect	bssBANK5
   476   000560                     __pbssBANK5:
   477                           	callstack 0
   478   000560                     _width:
   479                           	callstack 0
   480   000560                     	ds	2
   481   000562                     _prec:
   482                           	callstack 0
   483   000562                     	ds	2
   484   000564                     _UART1_OverrunErrorHandler:
   485                           	callstack 0
   486   000564                     	ds	2
   487   000566                     _uart1RxLastError:
   488                           	callstack 0
   489   000566                     	ds	2
   490   000568                     _dbuf:
   491                           	callstack 0
   492   000568                     	ds	32
   493                           
   494                           	psect	cstackBANK5
   495   00058E                     __pcstackBANK5:
   496                           	callstack 0
   497   00058E                     ??_VSR:
   498                           
   499                           ; 1 bytes @ 0x0
   500   00058E                     	ds	3
   501   000591                     ??_main:
   502                           
   503                           ; 1 bytes @ 0x3
   504   000591                     	ds	2
   505                           
   506                           	psect	cstackCOMRAM
   507   000501                     __pcstackCOMRAM:
   508                           	callstack 0
   509   000501                     ??_LAB_ISR:
   510   000501                     
   511                           ; 2 bytes @ 0x0
   512   000501                     	ds	1
   513   000502                     ??_INTERRUPT_InterruptManager:
   514                           
   515                           ; 1 bytes @ 0x1
   516   000502                     	ds	2
   517   000504                     ??_checkButtonS1:
   518   000504                     ??_Rotate:
   519   000504                     ?_ADCC_GetSingleConversion:
   520                           	callstack 0
   521   000504                     ?___awdiv:
   522                           	callstack 0
   523   000504                     ?___awmod:
   524                           	callstack 0
   525   000504                     _UART1_IsTxReady$2941:
   526                           	callstack 0
   527   000504                     UART1_Write@txData:
   528                           	callstack 0
   529   000504                     NVM_UnlockKeySet@unlockKey:
   530                           	callstack 0
   531   000504                     PWM1_16BIT_SetSlice1Output1DutyCycleRegister@registerValue:
   532                           	callstack 0
   533   000504                     PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler:
   534                           	callstack 0
   535   000504                     PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler:
   536                           	callstack 0
   537   000504                     PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler:
   538                           	callstack 0
   539   000504                     INT0_SetInterruptHandler@InterruptHandler:
   540                           	callstack 0
   541   000504                     INT1_SetInterruptHandler@InterruptHandler:
   542                           	callstack 0
   543   000504                     INT2_SetInterruptHandler@InterruptHandler:
   544                           	callstack 0
   545   000504                     Timer1_Write@timerVal:
   546                           	callstack 0
   547   000504                     Timer1_OverflowCallbackRegister@CallbackHandler:
   548                           	callstack 0
   549   000504                     TMR2_OverflowCallbackRegister@InterruptHandler:
   550                           	callstack 0
   551   000504                     Timer0_OverflowCallbackRegister@CallbackHandler:
   552                           	callstack 0
   553   000504                     UART1_FramingErrorCallbackRegister@callbackHandler:
   554                           	callstack 0
   555   000504                     UART1_OverrunErrorCallbackRegister@callbackHandler:
   556                           	callstack 0
   557   000504                     UART1_ParityErrorCallbackRegister@callbackHandler:
   558                           	callstack 0
   559   000504                     ___awdiv@dividend:
   560                           	callstack 0
   561   000504                     ___awmod@dividend:
   562                           	callstack 0
   563   000504                     EEPROM_Read@address:
   564                           	callstack 0
   565   000504                     EEPROM_Write@address:
   566                           	callstack 0
   567                           
   568                           ; 3 bytes @ 0x3
   569   000504                     	ds	1
   570   000505                     putch@txData:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x4
   574   000505                     	ds	1
   575   000506                     ??_ADCC_GetSingleConversion:
   576   000506                     ??_Timer1_Initialize:
   577   000506                     ??_Blink:
   578   000506                     ??_Timer1_Lab:
   579   000506                     ___awdiv@divisor:
   580                           	callstack 0
   581   000506                     ___awmod@divisor:
   582                           	callstack 0
   583   000506                     fputc@c:
   584                           	callstack 0
   585                           
   586                           ; 2 bytes @ 0x5
   587   000506                     	ds	1
   588   000507                     EEPROM_Write@data:
   589                           	callstack 0
   590                           
   591                           ; 1 bytes @ 0x6
   592   000507                     	ds	1
   593   000508                     ADCC_GetSingleConversion@channel:
   594                           	callstack 0
   595   000508                     EEPROM_Write@globalInterruptBitValue:
   596                           	callstack 0
   597   000508                     ___awdiv@counter:
   598                           	callstack 0
   599   000508                     ___awmod@counter:
   600                           	callstack 0
   601   000508                     fputc@fp:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0x7
   605   000508                     	ds	1
   606   000509                     ___awdiv@sign:
   607                           	callstack 0
   608   000509                     ___awmod@sign:
   609                           	callstack 0
   610                           
   611                           ; 1 bytes @ 0x8
   612   000509                     	ds	1
   613   00050A                     ??_fputc:
   614   00050A                     ?_abs:
   615                           	callstack 0
   616   00050A                     ___awdiv@quotient:
   617                           	callstack 0
   618   00050A                     abs@a:
   619                           	callstack 0
   620                           
   621                           ; 2 bytes @ 0x9
   622   00050A                     	ds	2
   623   00050C                     ??_abs:
   624                           
   625                           ; 1 bytes @ 0xB
   626   00050C                     	ds	3
   627   00050F                     fputs@s:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0xE
   631   00050F                     	ds	2
   632   000511                     fputs@fp:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x10
   636   000511                     	ds	2
   637   000513                     fputs@c:
   638                           	callstack 0
   639                           
   640                           ; 1 bytes @ 0x12
   641   000513                     	ds	1
   642   000514                     fputs@i:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x13
   646   000514                     	ds	2
   647   000516                     pad@fp:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x15
   651   000516                     	ds	2
   652   000518                     pad@buf:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x17
   656   000518                     	ds	2
   657   00051A                     pad@p:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x19
   661   00051A                     	ds	2
   662   00051C                     ??_pad:
   663                           
   664                           ; 1 bytes @ 0x1B
   665   00051C                     	ds	1
   666   00051D                     pad@i:
   667                           	callstack 0
   668                           
   669                           ; 2 bytes @ 0x1C
   670   00051D                     	ds	2
   671   00051F                     pad@w:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x1E
   675   00051F                     	ds	2
   676   000521                     dtoa@fp:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x20
   680   000521                     	ds	2
   681   000523                     dtoa@d:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x22
   685   000523                     	ds	2
   686   000525                     _dtoa$3558:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x24
   690   000525                     	ds	2
   691   000527                     dtoa@p:
   692                           	callstack 0
   693                           
   694                           ; 2 bytes @ 0x26
   695   000527                     	ds	2
   696   000529                     dtoa@w:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x28
   700   000529                     	ds	2
   701   00052B                     dtoa@i:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x2A
   705   00052B                     	ds	2
   706   00052D                     dtoa@s:
   707                           	callstack 0
   708                           
   709                           ; 1 bytes @ 0x2C
   710   00052D                     	ds	1
   711   00052E                     vfpfcnvrt@fp:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x2D
   715   00052E                     	ds	2
   716   000530                     vfpfcnvrt@fmt:
   717                           	callstack 0
   718                           
   719                           ; 2 bytes @ 0x2F
   720   000530                     	ds	2
   721   000532                     vfpfcnvrt@ap:
   722                           	callstack 0
   723                           
   724                           ; 2 bytes @ 0x31
   725   000532                     	ds	2
   726   000534                     ??_vfpfcnvrt:
   727                           
   728                           ; 1 bytes @ 0x33
   729   000534                     	ds	2
   730   000536                     vfpfcnvrt@convarg:
   731                           	callstack 0
   732                           
   733                           ; 4 bytes @ 0x35
   734   000536                     	ds	4
   735   00053A                     vfpfcnvrt@cp:
   736                           	callstack 0
   737                           
   738                           ; 1 bytes @ 0x39
   739   00053A                     	ds	1
   740   00053B                     ?_vfprintf:
   741                           	callstack 0
   742   00053B                     vfprintf@fp:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x3A
   746   00053B                     	ds	2
   747   00053D                     vfprintf@fmt:
   748                           	callstack 0
   749                           
   750                           ; 1 bytes @ 0x3C
   751   00053D                     	ds	1
   752   00053E                     vfprintf@ap:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x3D
   756   00053E                     	ds	2
   757   000540                     vfprintf@cfmt:
   758                           	callstack 0
   759                           
   760                           ; 1 bytes @ 0x3F
   761   000540                     	ds	1
   762   000541                     ?_printf:
   763                           	callstack 0
   764   000541                     printf@fmt:
   765                           	callstack 0
   766                           
   767                           ; 1 bytes @ 0x40
   768   000541                     	ds	3
   769   000544                     printf@ap:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x43
   773   000544                     	ds	2
   774   000546                     ??_ADC:
   775   000546                     ??_EEPROM:
   776                           
   777                           ; 1 bytes @ 0x45
   778   000546                     	ds	1
   779                           
   780 ;;
   781 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   782 ;;
   783 ;; *************** function _main *****************
   784 ;; Defined at:
   785 ;;		line 42 in file "main.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;                  2  1446[None  ] int 
   792 ;; Registers used:
   793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   801 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   802 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   803 ;;Total ram usage:        2 bytes
   804 ;; Hardware stack levels required when called: 13
   805 ;; This function calls:
   806 ;;		_ADC
   807 ;;		_Blink
   808 ;;		_EEPROM
   809 ;;		_HelloWorld
   810 ;;		_Interrupt
   811 ;;		_PWM
   812 ;;		_Rotate
   813 ;;		_SYSTEM_Initialize
   814 ;;		_SleepWakeUp
   815 ;;		_Timer1_Lab
   816 ;;		_VSR
   817 ;;		_checkButtonS1
   818 ;;		_nextLab
   819 ;; This function is called by:
   820 ;;		Startup code after reset
   821 ;; This function uses a non-reentrant model
   822 ;;
   823                           
   824                           	psect	text0
   825   001D10                     __ptext0:
   826                           	callstack 0
   827   001D10                     _main:
   828                           	callstack 114
   829                           
   830                           ;main.c: 45:     SYSTEM_Initialize();
   831                           
   832                           ;incstack = 0
   833   001D10  EC49  F011         	call	_SYSTEM_Initialize	;wreg free
   834                           
   835                           ; BSR set to: 5
   836   001D14  0102               	movlb	2	; () banked
   837   001D16  6B16               	clrf	22,b	;volatile
   838                           
   839                           ; BSR set to: 2
   840   001D18  9EAB               	bcf	1195,7,c	;volatile
   841   001D1A                     l3926:
   842                           
   843                           ;main.c: 54:         checkButtonS1();
   844   001D1A  EC34  F011         	call	_checkButtonS1	;wreg free
   845                           
   846                           ;main.c: 55:         switch (labNumber) {
   847   001D1E  D01E               	goto	l3950
   848   001D20                     l3928:
   849                           
   850                           ; BSR set to: 5
   851   001D20  ECE5  F011         	call	_HelloWorld	;wreg free
   852                           
   853                           ;main.c: 57:                 break;
   854   001D24  D036               	goto	l3952
   855   001D26                     l3930:
   856                           
   857                           ; BSR set to: 5
   858   001D26  EC39  F010         	call	_Blink	;wreg free
   859                           
   860                           ;main.c: 59:                 break;
   861   001D2A  D033               	goto	l3952
   862   001D2C                     l3932:
   863                           
   864                           ; BSR set to: 5
   865   001D2C  EC96  F00D         	call	_Rotate	;wreg free
   866                           
   867                           ;main.c: 61:                 break;
   868   001D30  D030               	goto	l3952
   869   001D32                     l3934:
   870                           
   871                           ; BSR set to: 5
   872   001D32  ECE9  F00D         	call	_ADC	;wreg free
   873                           
   874                           ;main.c: 63:                 break;
   875   001D36  D02D               	goto	l3952
   876   001D38                     l3936:
   877                           
   878                           ; BSR set to: 5
   879   001D38  EC66  F00C         	call	_VSR	;wreg free
   880                           
   881                           ;main.c: 65:                 break;
   882   001D3C  D02A               	goto	l3952
   883   001D3E                     l3938:
   884                           
   885                           ; BSR set to: 5
   886   001D3E  ECB0  F00F         	call	_PWM	;wreg free
   887                           
   888                           ;main.c: 67:                 break;
   889   001D42  D027               	goto	l3952
   890   001D44                     l3940:
   891                           
   892                           ; BSR set to: 5
   893   001D44  EC3F  F00D         	call	_Timer1_Lab	;wreg free
   894                           
   895                           ;main.c: 69:                 break;
   896   001D48  D024               	goto	l3952
   897   001D4A                     l3942:
   898                           
   899                           ; BSR set to: 5
   900   001D4A  ECD4  F010         	call	_Interrupt	;wreg free
   901                           
   902                           ;main.c: 71:                 break;
   903   001D4E  D021               	goto	l3952
   904   001D50                     l3944:
   905                           
   906                           ; BSR set to: 5
   907   001D50  ECBB  F010         	call	_SleepWakeUp	;wreg free
   908                           
   909                           ;main.c: 73:                 break;
   910   001D54  D01E               	goto	l3952
   911   001D56                     l3946:
   912                           
   913                           ; BSR set to: 5
   914   001D56  ECD5  F00C         	call	_EEPROM	;wreg free
   915                           
   916                           ;main.c: 75:                 break;
   917   001D5A  D01B               	goto	l3952
   918   001D5C                     l3950:
   919   001D5C  505B               	movf	_labNumber^(0+1280),w,c
   920   001D5E  0105               	movlb	5	; () banked
   921   001D60  6F91               	movwf	??_main& (0+255),b
   922   001D62  6B92               	clrf	(??_main+1)& (0+255),b
   923                           
   924                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   925                           ; Switch size 1, requested type "speed"
   926                           ; Number of cases is 1, Range of values is 0 to 0
   927                           ; switch strategies available:
   928                           ; Name         Instructions Cycles
   929                           ; simple_byte            4     3 (average)
   930                           ;	Chosen strategy is simple_byte
   931   001D64  5192               	movf	(??_main+1)& (0+255),w,b
   932   001D66  E115               	bnz	l3952
   933                           
   934                           ; BSR set to: 5
   935                           ; Switch size 1, requested type "speed"
   936                           ; Number of cases is 10, Range of values is 1 to 10
   937                           ; switch strategies available:
   938                           ; Name         Instructions Cycles
   939                           ; simple_byte           31    16 (average)
   940                           ;	Chosen strategy is simple_byte
   941   001D68  5191               	movf	??_main& (0+255),w,b
   942   001D6A  0A01               	xorlw	1	; case 1
   943   001D6C  E0D9               	bz	l3928
   944   001D6E  0A03               	xorlw	3	; case 2
   945   001D70  E0DA               	bz	l3930
   946   001D72  0A01               	xorlw	1	; case 3
   947   001D74  E0DB               	bz	l3932
   948   001D76  0A07               	xorlw	7	; case 4
   949   001D78  E0DC               	bz	l3934
   950   001D7A  0A01               	xorlw	1	; case 5
   951   001D7C  E0DD               	bz	l3936
   952   001D7E  0A03               	xorlw	3	; case 6
   953   001D80  E0DE               	bz	l3938
   954   001D82  0A01               	xorlw	1	; case 7
   955   001D84  E0DF               	bz	l3940
   956   001D86  0A0F               	xorlw	15	; case 8
   957   001D88  E0E0               	bz	l3942
   958   001D8A  0A01               	xorlw	1	; case 9
   959   001D8C  E0E1               	bz	l3944
   960   001D8E  0A03               	xorlw	3	; case 10
   961   001D90  E0E2               	bz	l3946
   962   001D92                     l3952:
   963                           
   964                           ;main.c: 78:         if (switchEvent) {
   965   001D92  505A               	movf	_switchEvent^(0+1280),w,c
   966   001D94  E0C2               	bz	l3926
   967                           
   968                           ;main.c: 79:             nextLab();
   969   001D96  EC23  F012         	call	_nextLab	;wreg free
   970   001D9A  D7BF               	goto	l3926
   971   001D9C                     __end_of_main:
   972                           	callstack 0
   973                           
   974 ;; *************** function _nextLab *****************
   975 ;; Defined at:
   976 ;;		line 97 in file "main.c"
   977 ;; Parameters:    Size  Location     Type
   978 ;;		None
   979 ;; Auto vars:     Size  Location     Type
   980 ;;		None
   981 ;; Return value:  Size  Location     Type
   982 ;;                  1    wreg      void 
   983 ;; Registers used:
   984 ;;		wreg, status,2, status,0
   985 ;; Tracked objects:
   986 ;;		On entry : 0/5
   987 ;;		On exit  : 0/0
   988 ;;		Unchanged: 0/0
   989 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   994 ;;Total ram usage:        0 bytes
   995 ;; Hardware stack levels used: 1
   996 ;; Hardware stack levels required when called: 3
   997 ;; This function calls:
   998 ;;		Nothing
   999 ;; This function is called by:
  1000 ;;		_main
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text1
  1005   002446                     __ptext1:
  1006                           	callstack 0
  1007   002446                     _nextLab:
  1008                           	callstack 123
  1009                           
  1010                           ;main.c: 98:     switchEvent = 0;
  1011                           
  1012                           ;incstack = 0
  1013   002446  6A5A               	clrf	_switchEvent^(0+1280),c
  1014                           
  1015                           ;main.c: 99:     labNumber++;
  1016   002448  2A5B               	incf	_labNumber^(0+1280),f,c
  1017                           
  1018                           ;main.c: 101:     if (labNumber > 10) {
  1019   00244A  0E0A               	movlw	10
  1020   00244C  645B               	cpfsgt	_labNumber^(0+1280),c
  1021   00244E  0C0A               	retlw	10
  1022                           
  1023                           ;main.c: 102:         labNumber = 1;
  1024   002450  0E01               	movlw	1
  1025   002452  6E5B               	movwf	_labNumber^(0+1280),c
  1026   002454  0C01               	retlw	1	;funcret
  1027   002456                     __end_of_nextLab:
  1028                           	callstack 0
  1029                           
  1030 ;; *************** function _checkButtonS1 *****************
  1031 ;; Defined at:
  1032 ;;		line 85 in file "main.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, status,2
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/2
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1048 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1049 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1050 ;;Total ram usage:        1 bytes
  1051 ;; Hardware stack levels used: 1
  1052 ;; Hardware stack levels required when called: 3
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_main
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           
  1060                           	psect	text2
  1061   002268                     __ptext2:
  1062                           	callstack 0
  1063   002268                     _checkButtonS1:
  1064                           	callstack 123
  1065                           
  1066                           ;main.c: 86:     if (btnState == 0) {
  1067                           
  1068                           ;incstack = 0
  1069   002268  5058               	movf	_btnState^(0+1280),w,c
  1070   00226A  E10D               	bnz	l1470
  1071                           
  1072                           ;main.c: 87:         if (PORTCbits.RC4 == 0) {
  1073   00226C  B8D0               	btfsc	208,4,c	;volatile
  1074   00226E  0012               	return	
  1075                           
  1076                           ;main.c: 88:             _delay((unsigned long)((100)*(500000/4000.0)));
  1077   002270  0E11               	movlw	17
  1078   002272  6E04               	movwf	??_checkButtonS1^(0+1280),c
  1079   002274  0E3A               	movlw	58
  1080   002276                     u2017:
  1081   002276  2EE8               	decfsz	wreg,f,c
  1082   002278  D7FE               	bra	u2017
  1083   00227A  2E04               	decfsz	??_checkButtonS1^(0+1280),f,c
  1084   00227C  D7FC               	bra	u2017
  1085   00227E  D000               	nop2	
  1086                           
  1087                           ;main.c: 89:             btnState = 1;
  1088   002280  0E01               	movlw	1
  1089   002282  6E58               	movwf	_btnState^(0+1280),c
  1090   002284  0C01               	retlw	1
  1091   002286                     l1470:
  1092   002286  A8D0               	btfss	208,4,c	;volatile
  1093   002288  0012               	return	
  1094                           
  1095                           ;main.c: 92:         btnState = 0;
  1096   00228A  6A58               	clrf	_btnState^(0+1280),c
  1097                           
  1098                           ;main.c: 93:         switchEvent = 1;
  1099   00228C  0E01               	movlw	1
  1100   00228E  6E5A               	movwf	_switchEvent^(0+1280),c
  1101   002290  0C01               	retlw	1	;funcret
  1102   002292                     __end_of_checkButtonS1:
  1103                           	callstack 0
  1104                           
  1105 ;; *************** function _VSR *****************
  1106 ;; Defined at:
  1107 ;;		line 56 in file "Labs/Lab05_VariableSpeedRotate/VSR.c"
  1108 ;; Parameters:    Size  Location     Type
  1109 ;;		None
  1110 ;; Auto vars:     Size  Location     Type
  1111 ;;		None
  1112 ;; Return value:  Size  Location     Type
  1113 ;;                  1    wreg      void 
  1114 ;; Registers used:
  1115 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1116 ;; Tracked objects:
  1117 ;;		On entry : 0/5
  1118 ;;		On exit  : 0/0
  1119 ;;		Unchanged: 0/0
  1120 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1123 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1124 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1125 ;;Total ram usage:        3 bytes
  1126 ;; Hardware stack levels used: 1
  1127 ;; Hardware stack levels required when called: 12
  1128 ;; This function calls:
  1129 ;;		_ADCC_GetSingleConversion
  1130 ;;		_printf
  1131 ;; This function is called by:
  1132 ;;		_main
  1133 ;; This function uses a non-reentrant model
  1134 ;;
  1135                           
  1136                           	psect	text3
  1137   0018CC                     __ptext3:
  1138                           	callstack 0
  1139   0018CC                     _VSR:
  1140                           	callstack 114
  1141                           
  1142                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 57:     if (labState == 0) {
  1143                           
  1144                           ;incstack = 0
  1145   0018CC  5059               	movf	_labState^(0+1280),w,c
  1146   0018CE  E105               	bnz	l3902
  1147                           
  1148                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 58:         do { LATA = 0; LATCbits.LATC5 = 0; } 
      +                          while(0);
  1149   0018D0  6ABE               	clrf	190,c	;volatile
  1150   0018D2  9AC0               	bcf	192,5,c	;volatile
  1151                           
  1152                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 61:         rotateReg = 1;
  1153   0018D4  0E01               	movlw	1
  1154   0018D6  6E53               	movwf	_rotateReg@VSR$F279^(0+1280),c
  1155                           
  1156                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 63:         labState = 1;
  1157   0018D8  6E59               	movwf	_labState^(0+1280),c
  1158   0018DA                     l3902:
  1159                           
  1160                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 66:     if (labState == 1) {
  1161   0018DA  0459               	decf	_labState^(0+1280),w,c
  1162   0018DC  E162               	bnz	l155
  1163                           
  1164                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 68:         delay = ADCC_GetSingleConversion(POT_
      +                          CHANNEL) >> 8;
  1165   0018DE  0E10               	movlw	16
  1166   0018E0  EC97  F011         	call	_ADCC_GetSingleConversion
  1167   0018E4  C505  F504         	movff	?_ADCC_GetSingleConversion+1,?_ADCC_GetSingleConversion
  1168   0018E8  6A05               	clrf	(?_ADCC_GetSingleConversion+1)^(0+1280),c
  1169   0018EA  5004               	movf	?_ADCC_GetSingleConversion^(0+1280),w,c
  1170   0018EC  6E54               	movwf	_delay^(0+1280),c
  1171                           
  1172                           ; BSR set to: 3
  1173                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 70:         printf("ADC Result: %d\n\r", ADRES >>
      +                           4);
  1174   0018EE  0E01               	movlw	low STR_1
  1175   0018F0  6E41               	movwf	printf@fmt^(0+1280),c
  1176   0018F2  C3EA F58E          	movff	1002,??_VSR	;volatile
  1177   0018F6  C3EB F58F          	movff	1003,??_VSR+1	;volatile
  1178   0018FA  0E04               	movlw	4
  1179   0018FC  0105               	movlb	5	; () banked
  1180   0018FE  6F90               	movwf	(??_VSR+2)& (0+255),b
  1181   001900                     u1965:
  1182   001900  90D8               	bcf	status,0,c
  1183   001902  338F               	rrcf	(??_VSR+1)& (0+255),f,b
  1184   001904  338E               	rrcf	??_VSR& (0+255),f,b
  1185   001906  2F90               	decfsz	(??_VSR+2)& (0+255),f,b
  1186   001908  D7FB               	goto	u1965
  1187   00190A  C58E  F542         	movff	??_VSR,?_printf+1
  1188   00190E  C58F  F543         	movff	??_VSR+1,?_printf+2
  1189   001912  ECD7  F011         	call	_printf	;wreg free
  1190   001916                     l3908:
  1191                           
  1192                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 71:         _delay((unsigned long)((2)*(500000/40
      +                          00.0)));
  1193   001916  0E53               	movlw	83
  1194   001918                     u2027:
  1195   001918  2EE8               	decfsz	wreg,f,c
  1196   00191A  D7FE               	bra	u2027
  1197   00191C  F000               	nop	
  1198                           
  1199                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 74:         while (delay-- != 0) {
  1200                           
  1201                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 74:         while (delay-- != 0) {
  1202   00191E  0654               	decf	_delay^(0+1280),f,c
  1203   001920  2854               	incf	_delay^(0+1280),w,c
  1204   001922  E1F9               	bnz	l3908
  1205                           
  1206                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 79:         LATAbits.LATA5 = rotateReg & 1;
  1207   001924  C553  F58E         	movff	_rotateReg@VSR$F279,??_VSR
  1208   001928  0E01               	movlw	1
  1209   00192A  0105               	movlb	5	; () banked
  1210   00192C  178E               	andwf	??_VSR& (0+255),f,b
  1211   00192E  3B8E               	swapf	??_VSR& (0+255),f,b
  1212   001930  478E               	rlncf	??_VSR& (0+255),f,b
  1213   001932  50BE               	movf	190,w,c	;volatile
  1214   001934  198E               	xorwf	??_VSR& (0+255),w,b
  1215   001936  0BDF               	andlw	-33
  1216   001938  198E               	xorwf	??_VSR& (0+255),w,b
  1217   00193A  6EBE               	movwf	190,c	;volatile
  1218                           
  1219                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 80:         LATAbits.LATA1 = (rotateReg & 2) >> 1
      +                          ;
  1220   00193C  C553  F58E         	movff	_rotateReg@VSR$F279,??_VSR
  1221   001940  90D8               	bcf	status,0,c
  1222   001942  338E               	rrcf	??_VSR& (0+255),f,b
  1223   001944  0E01               	movlw	1
  1224   001946  178E               	andwf	??_VSR& (0+255),f,b
  1225   001948  478E               	rlncf	??_VSR& (0+255),f,b
  1226   00194A  50BE               	movf	190,w,c	;volatile
  1227   00194C  198E               	xorwf	??_VSR& (0+255),w,b
  1228   00194E  0BFD               	andlw	-3
  1229   001950  198E               	xorwf	??_VSR& (0+255),w,b
  1230   001952  6EBE               	movwf	190,c	;volatile
  1231                           
  1232                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 81:         LATAbits.LATA2 = (rotateReg & 4) >> 2
      +                          ;
  1233   001954  C553  F58E         	movff	_rotateReg@VSR$F279,??_VSR
  1234   001958  90D8               	bcf	status,0,c
  1235   00195A  338E               	rrcf	??_VSR& (0+255),f,b
  1236   00195C  90D8               	bcf	status,0,c
  1237   00195E  338E               	rrcf	??_VSR& (0+255),f,b
  1238   001960  0E01               	movlw	1
  1239   001962  178E               	andwf	??_VSR& (0+255),f,b
  1240   001964  478E               	rlncf	??_VSR& (0+255),f,b
  1241   001966  478E               	rlncf	??_VSR& (0+255),f,b
  1242   001968  50BE               	movf	190,w,c	;volatile
  1243   00196A  198E               	xorwf	??_VSR& (0+255),w,b
  1244   00196C  0BFB               	andlw	-5
  1245   00196E  198E               	xorwf	??_VSR& (0+255),w,b
  1246   001970  6EBE               	movwf	190,c	;volatile
  1247                           
  1248                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 82:         LATCbits.LATC5 = (rotateReg & 8) >> 3
      +                          ;
  1249   001972  C553  F58E         	movff	_rotateReg@VSR$F279,??_VSR
  1250   001976  90D8               	bcf	status,0,c
  1251   001978  338E               	rrcf	??_VSR& (0+255),f,b
  1252   00197A  90D8               	bcf	status,0,c
  1253   00197C  338E               	rrcf	??_VSR& (0+255),f,b
  1254   00197E  90D8               	bcf	status,0,c
  1255   001980  338E               	rrcf	??_VSR& (0+255),f,b
  1256   001982  0E01               	movlw	1
  1257   001984  178E               	andwf	??_VSR& (0+255),f,b
  1258   001986  3B8E               	swapf	??_VSR& (0+255),f,b
  1259   001988  478E               	rlncf	??_VSR& (0+255),f,b
  1260   00198A  50C0               	movf	192,w,c	;volatile
  1261   00198C  198E               	xorwf	??_VSR& (0+255),w,b
  1262   00198E  0BDF               	andlw	-33
  1263   001990  198E               	xorwf	??_VSR& (0+255),w,b
  1264   001992  6EC0               	movwf	192,c	;volatile
  1265                           
  1266                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 84:         rotateReg = rotateReg << 1;
  1267   001994  90D8               	bcf	status,0,c
  1268   001996  3653               	rlcf	_rotateReg@VSR$F279^(0+1280),f,c
  1269                           
  1270                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 87:         if (rotateReg == 16) {
  1271   001998  0E10               	movlw	16
  1272   00199A  1853               	xorwf	_rotateReg@VSR$F279^(0+1280),w,c
  1273   00199C  E102               	bnz	l155
  1274                           
  1275                           ; BSR set to: 5
  1276                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 88:             rotateReg = 1;
  1277   00199E  0E01               	movlw	1
  1278   0019A0  6E53               	movwf	_rotateReg@VSR$F279^(0+1280),c
  1279   0019A2                     l155:
  1280                           
  1281                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 92:     if (switchEvent) {
  1282   0019A2  505A               	movf	_switchEvent^(0+1280),w,c
  1283   0019A4  A4D8               	btfss	status,2,c
  1284                           
  1285                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 93:         labState = 0;
  1286   0019A6  6A59               	clrf	_labState^(0+1280),c
  1287   0019A8  0012               	return		;funcret
  1288   0019AA                     __end_of_VSR:
  1289                           	callstack 0
  1290                           
  1291 ;; *************** function _Timer1_Lab *****************
  1292 ;; Defined at:
  1293 ;;		line 57 in file "Labs/Lab07_Timers/Timer1.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;		None
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;		None
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      void 
  1300 ;; Registers used:
  1301 ;;		wreg, status,2, status,0, cstack
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/5
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1309 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1310 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1311 ;;Total ram usage:        1 bytes
  1312 ;; Hardware stack levels used: 1
  1313 ;; Hardware stack levels required when called: 5
  1314 ;; This function calls:
  1315 ;;		_Timer1_Reload
  1316 ;;		_Timer1_Start
  1317 ;;		_Timer1_Stop
  1318 ;; This function is called by:
  1319 ;;		_main
  1320 ;; This function uses a non-reentrant model
  1321 ;;
  1322                           
  1323                           	psect	text4
  1324   001A7E                     __ptext4:
  1325                           	callstack 0
  1326   001A7E                     _Timer1_Lab:
  1327                           	callstack 121
  1328                           
  1329                           ;Labs/Lab07_Timers/Timer1.c: 58:     if (labState == 0) {
  1330                           
  1331                           ;incstack = 0
  1332   001A7E  5059               	movf	_labState^(0+1280),w,c
  1333   001A80  E109               	bnz	l3692
  1334                           
  1335                           ;Labs/Lab07_Timers/Timer1.c: 59:         do { LATA = 0; LATCbits.LATC5 = 0; } while(0);
  1336   001A82  6ABE               	clrf	190,c	;volatile
  1337   001A84  9AC0               	bcf	192,5,c	;volatile
  1338                           
  1339                           ;Labs/Lab07_Timers/Timer1.c: 60:         do { LATAbits.LATA5 = 1; } while(0);
  1340   001A86  8ABE               	bsf	190,5,c	;volatile
  1341                           
  1342                           ;Labs/Lab07_Timers/Timer1.c: 63:         rotateReg = 1;
  1343   001A88  0E01               	movlw	1
  1344   001A8A  6E52               	movwf	_rotateReg@Timer1$F381^(0+1280),c
  1345                           
  1346                           ;Labs/Lab07_Timers/Timer1.c: 65:         Timer1_Start();
  1347   001A8C  EC65  F012         	call	_Timer1_Start	;wreg free
  1348                           
  1349                           ; BSR set to: 3
  1350                           ;Labs/Lab07_Timers/Timer1.c: 67:         labState = 1;
  1351   001A90  0E01               	movlw	1
  1352   001A92  6E59               	movwf	_labState^(0+1280),c
  1353   001A94                     l3692:
  1354                           
  1355                           ;Labs/Lab07_Timers/Timer1.c: 70:     if (labState == 1) {
  1356   001A94  0459               	decf	_labState^(0+1280),w,c
  1357   001A96  E143               	bnz	l237
  1358   001A98                     u1680:
  1359   001A98  A8B6               	btfss	182,4,c	;volatile
  1360   001A9A  D7FE               	goto	u1680
  1361                           
  1362                           ;Labs/Lab07_Timers/Timer1.c: 72:         do { PIR3bits.TMR1IF = 0;} while (0);
  1363   001A9C  98B6               	bcf	182,4,c	;volatile
  1364                           
  1365                           ;Labs/Lab07_Timers/Timer1.c: 73:         Timer1_Reload();
  1366   001A9E  EC33  F012         	call	_Timer1_Reload	;wreg free
  1367                           
  1368                           ; BSR set to: 3
  1369                           ;Labs/Lab07_Timers/Timer1.c: 75:         rotateReg = rotateReg << 1;
  1370   001AA2  90D8               	bcf	status,0,c
  1371   001AA4  3652               	rlcf	_rotateReg@Timer1$F381^(0+1280),f,c
  1372                           
  1373                           ; BSR set to: 3
  1374                           ;Labs/Lab07_Timers/Timer1.c: 78:         if (rotateReg == 16) {
  1375   001AA6  0E10               	movlw	16
  1376   001AA8  1852               	xorwf	_rotateReg@Timer1$F381^(0+1280),w,c
  1377   001AAA  E102               	bnz	l3704
  1378                           
  1379                           ; BSR set to: 3
  1380                           ;Labs/Lab07_Timers/Timer1.c: 79:             rotateReg = 1;
  1381   001AAC  0E01               	movlw	1
  1382   001AAE  6E52               	movwf	_rotateReg@Timer1$F381^(0+1280),c
  1383   001AB0                     l3704:
  1384                           
  1385                           ; BSR set to: 3
  1386                           ;Labs/Lab07_Timers/Timer1.c: 83:         LATAbits.LATA5 = rotateReg & 1;
  1387   001AB0  C552  F506         	movff	_rotateReg@Timer1$F381,??_Timer1_Lab
  1388   001AB4  0E01               	movlw	1
  1389   001AB6  1606               	andwf	??_Timer1_Lab^(0+1280),f,c
  1390   001AB8  3A06               	swapf	??_Timer1_Lab^(0+1280),f,c
  1391   001ABA  4606               	rlncf	??_Timer1_Lab^(0+1280),f,c
  1392   001ABC  50BE               	movf	190,w,c	;volatile
  1393   001ABE  1806               	xorwf	??_Timer1_Lab^(0+1280),w,c
  1394   001AC0  0BDF               	andlw	-33
  1395   001AC2  1806               	xorwf	??_Timer1_Lab^(0+1280),w,c
  1396   001AC4  6EBE               	movwf	190,c	;volatile
  1397                           
  1398                           ; BSR set to: 3
  1399                           ;Labs/Lab07_Timers/Timer1.c: 84:         LATAbits.LATA1 = (rotateReg & 2) >> 1;
  1400   001AC6  C552  F506         	movff	_rotateReg@Timer1$F381,??_Timer1_Lab
  1401   001ACA  90D8               	bcf	status,0,c
  1402   001ACC  3206               	rrcf	??_Timer1_Lab^(0+1280),f,c
  1403   001ACE  0E01               	movlw	1
  1404   001AD0  1606               	andwf	??_Timer1_Lab^(0+1280),f,c
  1405   001AD2  4606               	rlncf	??_Timer1_Lab^(0+1280),f,c
  1406   001AD4  50BE               	movf	190,w,c	;volatile
  1407   001AD6  1806               	xorwf	??_Timer1_Lab^(0+1280),w,c
  1408   001AD8  0BFD               	andlw	-3
  1409   001ADA  1806               	xorwf	??_Timer1_Lab^(0+1280),w,c
  1410   001ADC  6EBE               	movwf	190,c	;volatile
  1411                           
  1412                           ; BSR set to: 3
  1413                           ;Labs/Lab07_Timers/Timer1.c: 85:         LATAbits.LATA2 = (rotateReg & 4) >> 2;
  1414   001ADE  C552  F506         	movff	_rotateReg@Timer1$F381,??_Timer1_Lab
  1415   001AE2  90D8               	bcf	status,0,c
  1416   001AE4  3206               	rrcf	??_Timer1_Lab^(0+1280),f,c
  1417   001AE6  90D8               	bcf	status,0,c
  1418   001AE8  3206               	rrcf	??_Timer1_Lab^(0+1280),f,c
  1419   001AEA  0E01               	movlw	1
  1420   001AEC  1606               	andwf	??_Timer1_Lab^(0+1280),f,c
  1421   001AEE  4606               	rlncf	??_Timer1_Lab^(0+1280),f,c
  1422   001AF0  4606               	rlncf	??_Timer1_Lab^(0+1280),f,c
  1423   001AF2  50BE               	movf	190,w,c	;volatile
  1424   001AF4  1806               	xorwf	??_Timer1_Lab^(0+1280),w,c
  1425   001AF6  0BFB               	andlw	-5
  1426   001AF8  1806               	xorwf	??_Timer1_Lab^(0+1280),w,c
  1427   001AFA  6EBE               	movwf	190,c	;volatile
  1428                           
  1429                           ; BSR set to: 3
  1430                           ;Labs/Lab07_Timers/Timer1.c: 86:         LATCbits.LATC5 = (rotateReg & 8) >> 3;
  1431   001AFC  C552  F506         	movff	_rotateReg@Timer1$F381,??_Timer1_Lab
  1432   001B00  90D8               	bcf	status,0,c
  1433   001B02  3206               	rrcf	??_Timer1_Lab^(0+1280),f,c
  1434   001B04  90D8               	bcf	status,0,c
  1435   001B06  3206               	rrcf	??_Timer1_Lab^(0+1280),f,c
  1436   001B08  90D8               	bcf	status,0,c
  1437   001B0A  3206               	rrcf	??_Timer1_Lab^(0+1280),f,c
  1438   001B0C  0E01               	movlw	1
  1439   001B0E  1606               	andwf	??_Timer1_Lab^(0+1280),f,c
  1440   001B10  3A06               	swapf	??_Timer1_Lab^(0+1280),f,c
  1441   001B12  4606               	rlncf	??_Timer1_Lab^(0+1280),f,c
  1442   001B14  50C0               	movf	192,w,c	;volatile
  1443   001B16  1806               	xorwf	??_Timer1_Lab^(0+1280),w,c
  1444   001B18  0BDF               	andlw	-33
  1445   001B1A  1806               	xorwf	??_Timer1_Lab^(0+1280),w,c
  1446   001B1C  6EC0               	movwf	192,c	;volatile
  1447   001B1E                     l237:
  1448                           
  1449                           ;Labs/Lab07_Timers/Timer1.c: 90:     if (switchEvent) {
  1450   001B1E  505A               	movf	_switchEvent^(0+1280),w,c
  1451   001B20  B4D8               	btfsc	status,2,c
  1452   001B22  0012               	return	
  1453                           
  1454                           ;Labs/Lab07_Timers/Timer1.c: 91:         Timer1_Stop();
  1455   001B24  EC62  F012         	call	_Timer1_Stop	;wreg free
  1456                           
  1457                           ; BSR set to: 3
  1458                           ;Labs/Lab07_Timers/Timer1.c: 92:         labState = 0;
  1459   001B28  6A59               	clrf	_labState^(0+1280),c
  1460   001B2A  0012               	return		;funcret
  1461   001B2C                     __end_of_Timer1_Lab:
  1462                           	callstack 0
  1463                           
  1464 ;; *************** function _SleepWakeUp *****************
  1465 ;; Defined at:
  1466 ;;		line 57 in file "Labs/Lab09_SleepWakeup/SleepWakeUp.c"
  1467 ;; Parameters:    Size  Location     Type
  1468 ;;		None
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;		None
  1471 ;; Return value:  Size  Location     Type
  1472 ;;                  1    wreg      void 
  1473 ;; Registers used:
  1474 ;;		wreg, status,2, status,0
  1475 ;; Tracked objects:
  1476 ;;		On entry : 0/5
  1477 ;;		On exit  : 0/0
  1478 ;;		Unchanged: 0/0
  1479 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1484 ;;Total ram usage:        0 bytes
  1485 ;; Hardware stack levels used: 1
  1486 ;; Hardware stack levels required when called: 3
  1487 ;; This function calls:
  1488 ;;		Nothing
  1489 ;; This function is called by:
  1490 ;;		_main
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           	psect	text5
  1495   002176                     __ptext5:
  1496                           	callstack 0
  1497   002176                     _SleepWakeUp:
  1498                           	callstack 123
  1499                           
  1500                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 59:     if (labState == 0) {
  1501                           
  1502                           ;incstack = 0
  1503   002176  5059               	movf	_labState^(0+1280),w,c
  1504   002178  E10B               	bnz	l2944
  1505                           
  1506                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 60:         LATAbits.LATA5 = LATAbits.LATA2 = 1;
  1507   00217A  84BE               	bsf	190,2,c	;volatile
  1508   00217C  8ABE               	bsf	190,5,c	;volatile
  1509                           
  1510                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 61:         LATAbits.LATA1 = LATCbits.LATC5 = 0;
  1511   00217E  9AC0               	bcf	192,5,c	;volatile
  1512   002180  92BE               	bcf	190,1,c	;volatile
  1513                           
  1514                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 62:         ( WDTCON0bits.SWDTEN = 1);
  1515   002182  0100               	movlb	0	; () banked
  1516   002184  8178               	bsf	120,0,b	;volatile
  1517   002186  0003               	sleep		;# 
  1518                           
  1519                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 65:         __nop();
  1520   002188  F000               	nop	
  1521                           
  1522                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 66:         __nop();
  1523   00218A  F000               	nop	
  1524                           
  1525                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 68:         labState = 1;
  1526   00218C  0E01               	movlw	1
  1527   00218E  6E59               	movwf	_labState^(0+1280),c
  1528   002190                     l2944:
  1529                           
  1530                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 71:     if (labState == 1) {
  1531   002190  0459               	decf	_labState^(0+1280),w,c
  1532   002192  E106               	bnz	l2948
  1533                           
  1534                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 74:         LATAbits.LATA5 = LATAbits.LATA2 = 0;
  1535   002194  94BE               	bcf	190,2,c	;volatile
  1536   002196  9ABE               	bcf	190,5,c	;volatile
  1537                           
  1538                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 75:         LATAbits.LATA1 = LATCbits.LATC5 = 1;
  1539   002198  8AC0               	bsf	192,5,c	;volatile
  1540   00219A  82BE               	bsf	190,1,c	;volatile
  1541                           
  1542                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 77:         (WDTCON0bits.SWDTEN = 0);
  1543   00219C  0100               	movlb	0	; () banked
  1544   00219E  9178               	bcf	120,0,b	;volatile
  1545   0021A0                     l2948:
  1546                           
  1547                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 80:     if (switchEvent) {
  1548   0021A0  505A               	movf	_switchEvent^(0+1280),w,c
  1549   0021A2  A4D8               	btfss	status,2,c
  1550                           
  1551                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 81:         labState = 0;
  1552   0021A4  6A59               	clrf	_labState^(0+1280),c
  1553   0021A6  0012               	return		;funcret
  1554   0021A8                     __end_of_SleepWakeUp:
  1555                           	callstack 0
  1556                           
  1557 ;; *************** function _SYSTEM_Initialize *****************
  1558 ;; Defined at:
  1559 ;;		line 37 in file "mcc_generated_files/system/src/system.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;		None
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;		None
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		wreg, status,2, status,0, cstack
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 3F/5
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1577 ;;Total ram usage:        0 bytes
  1578 ;; Hardware stack levels used: 1
  1579 ;; Hardware stack levels required when called: 5
  1580 ;; This function calls:
  1581 ;;		_ADCC_Initialize
  1582 ;;		_CLOCK_Initialize
  1583 ;;		_INTERRUPT_Initialize
  1584 ;;		_NVM_Initialize
  1585 ;;		_PIN_MANAGER_Initialize
  1586 ;;		_PWM1_16BIT_Initialize
  1587 ;;		_TMR2_Initialize
  1588 ;;		_Timer0_Initialize
  1589 ;;		_Timer1_Initialize
  1590 ;;		_UART1_Initialize
  1591 ;; This function is called by:
  1592 ;;		_main
  1593 ;; This function uses a non-reentrant model
  1594 ;;
  1595                           
  1596                           	psect	text6
  1597   002292                     __ptext6:
  1598                           	callstack 0
  1599   002292                     _SYSTEM_Initialize:
  1600                           	callstack 121
  1601                           
  1602                           ;mcc_generated_files/system/src/system.c: 39:     CLOCK_Initialize();
  1603                           
  1604                           ;incstack = 0
  1605   002292  ECFE  F011         	call	_CLOCK_Initialize	;wreg free
  1606                           
  1607                           ;mcc_generated_files/system/src/system.c: 40:     PIN_MANAGER_Initialize();
  1608   002296  EC48  F00F         	call	_PIN_MANAGER_Initialize	;wreg free
  1609                           
  1610                           ;mcc_generated_files/system/src/system.c: 41:     ADCC_Initialize();
  1611   00229A  EC9E  F010         	call	_ADCC_Initialize	;wreg free
  1612                           
  1613                           ; BSR set to: 3
  1614                           ;mcc_generated_files/system/src/system.c: 42:     NVM_Initialize();
  1615   00229E  EC68  F012         	call	_NVM_Initialize	;wreg free
  1616                           
  1617                           ; BSR set to: 0
  1618                           ;mcc_generated_files/system/src/system.c: 43:     PWM1_16BIT_Initialize();
  1619   0022A2  ECE1  F00F         	call	_PWM1_16BIT_Initialize	;wreg free
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;mcc_generated_files/system/src/system.c: 44:     Timer0_Initialize();
  1623   0022A6  EC85  F011         	call	_Timer0_Initialize	;wreg free
  1624                           
  1625                           ; BSR set to: 3
  1626                           ;mcc_generated_files/system/src/system.c: 45:     Timer1_Initialize();
  1627   0022AA  EC81  F010         	call	_Timer1_Initialize	;wreg free
  1628                           
  1629                           ; BSR set to: 3
  1630                           ;mcc_generated_files/system/src/system.c: 46:     TMR2_Initialize();
  1631   0022AE  ECA9  F011         	call	_TMR2_Initialize	;wreg free
  1632                           
  1633                           ; BSR set to: 3
  1634                           ;mcc_generated_files/system/src/system.c: 47:     UART1_Initialize();
  1635   0022B2  EC0E  F010         	call	_UART1_Initialize	;wreg free
  1636                           
  1637                           ; BSR set to: 5
  1638                           ;mcc_generated_files/system/src/system.c: 48:     INTERRUPT_Initialize();
  1639   0022B6  EF5D  F011         	goto	_INTERRUPT_Initialize	;wreg free
  1640   0022BA                     __end_of_SYSTEM_Initialize:
  1641                           	callstack 0
  1642                           
  1643 ;; *************** function _UART1_Initialize *****************
  1644 ;; Defined at:
  1645 ;;		line 95 in file "mcc_generated_files/uart/src/uart1.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;		None
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;		None
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  1    wreg      void 
  1652 ;; Registers used:
  1653 ;;		wreg, status,2, status,0, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : 3F/3
  1656 ;;		On exit  : 3F/5
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1663 ;;Total ram usage:        0 bytes
  1664 ;; Hardware stack levels used: 1
  1665 ;; Hardware stack levels required when called: 4
  1666 ;; This function calls:
  1667 ;;		_UART1_FramingErrorCallbackRegister
  1668 ;;		_UART1_OverrunErrorCallbackRegister
  1669 ;;		_UART1_ParityErrorCallbackRegister
  1670 ;; This function is called by:
  1671 ;;		_SYSTEM_Initialize
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           	psect	text7
  1676   00201C                     __ptext7:
  1677                           	callstack 0
  1678   00201C                     _UART1_Initialize:
  1679                           	callstack 121
  1680                           
  1681                           ; BSR set to: 3
  1682                           ;mcc_generated_files/uart/src/uart1.c: 101:     U1RXB = 0x0;
  1683                           
  1684                           ; BSR set to: 5
  1685                           ;incstack = 0
  1686   00201C  0102               	movlb	2	; () banked
  1687   00201E  6BA1               	clrf	161,b	;volatile
  1688                           
  1689                           ;mcc_generated_files/uart/src/uart1.c: 103:     U1RXCHK = 0x0;
  1690   002020  6BA2               	clrf	162,b	;volatile
  1691                           
  1692                           ;mcc_generated_files/uart/src/uart1.c: 105:     U1TXB = 0x0;
  1693   002022  6BA3               	clrf	163,b	;volatile
  1694                           
  1695                           ;mcc_generated_files/uart/src/uart1.c: 107:     U1TXCHK = 0x0;
  1696   002024  6BA4               	clrf	164,b	;volatile
  1697                           
  1698                           ;mcc_generated_files/uart/src/uart1.c: 109:     U1P1L = 0x0;
  1699   002026  6BA5               	clrf	165,b	;volatile
  1700                           
  1701                           ;mcc_generated_files/uart/src/uart1.c: 111:     U1P1H = 0x0;
  1702   002028  6BA6               	clrf	166,b	;volatile
  1703                           
  1704                           ;mcc_generated_files/uart/src/uart1.c: 113:     U1P2L = 0x0;
  1705   00202A  6BA7               	clrf	167,b	;volatile
  1706                           
  1707                           ;mcc_generated_files/uart/src/uart1.c: 115:     U1P2H = 0x0;
  1708   00202C  6BA8               	clrf	168,b	;volatile
  1709                           
  1710                           ;mcc_generated_files/uart/src/uart1.c: 117:     U1P3L = 0x0;
  1711   00202E  6BA9               	clrf	169,b	;volatile
  1712                           
  1713                           ;mcc_generated_files/uart/src/uart1.c: 119:     U1P3H = 0x0;
  1714   002030  6BAA               	clrf	170,b	;volatile
  1715                           
  1716                           ; BSR set to: 2
  1717                           ;mcc_generated_files/uart/src/uart1.c: 121:     U1CON0 = 0xB0;
  1718   002032  0EB0               	movlw	176
  1719   002034  6FAB               	movwf	171,b	;volatile
  1720                           
  1721                           ;mcc_generated_files/uart/src/uart1.c: 123:     U1CON1 = 0x80;
  1722   002036  0E80               	movlw	128
  1723   002038  6FAC               	movwf	172,b	;volatile
  1724                           
  1725                           ;mcc_generated_files/uart/src/uart1.c: 125:     U1CON2 = 0x8;
  1726   00203A  0E08               	movlw	8
  1727   00203C  6FAD               	movwf	173,b	;volatile
  1728                           
  1729                           ;mcc_generated_files/uart/src/uart1.c: 127:     U1BRGL = 0xC;
  1730   00203E  0E0C               	movlw	12
  1731   002040  6FAE               	movwf	174,b	;volatile
  1732                           
  1733                           ; BSR set to: 2
  1734                           ;mcc_generated_files/uart/src/uart1.c: 129:     U1BRGH = 0x0;
  1735   002042  6BAF               	clrf	175,b	;volatile
  1736                           
  1737                           ;mcc_generated_files/uart/src/uart1.c: 131:     U1FIFO = 0x20;
  1738   002044  0E20               	movlw	32
  1739   002046  6FB0               	movwf	176,b	;volatile
  1740                           
  1741                           ; BSR set to: 2
  1742                           ;mcc_generated_files/uart/src/uart1.c: 133:     U1UIR = 0x0;
  1743   002048  6BB1               	clrf	177,b	;volatile
  1744                           
  1745                           ;mcc_generated_files/uart/src/uart1.c: 135:     U1ERRIR = 0x80;
  1746   00204A  0E80               	movlw	128
  1747   00204C  6FB2               	movwf	178,b	;volatile
  1748                           
  1749                           ; BSR set to: 2
  1750                           ;mcc_generated_files/uart/src/uart1.c: 137:     U1ERRIE = 0x0;
  1751   00204E  6BB3               	clrf	179,b	;volatile
  1752                           
  1753                           ; BSR set to: 2
  1754                           ;mcc_generated_files/uart/src/uart1.c: 139:     UART1_FramingErrorCallbackRegister(UART1
      +                          _DefaultFramingErrorCallback);
  1755   002050  6A04               	clrf	UART1_FramingErrorCallbackRegister@callbackHandler^(0+1280),c
  1756   002052  6A05               	clrf	(UART1_FramingErrorCallbackRegister@callbackHandler+1)^(0+1280),c
  1757   002054  EC11  F012         	call	_UART1_FramingErrorCallbackRegister	;wreg free
  1758                           
  1759                           ; BSR set to: 2
  1760                           ;mcc_generated_files/uart/src/uart1.c: 140:     UART1_OverrunErrorCallbackRegister(UART1
      +                          _DefaultOverrunErrorCallback);
  1761   002058  6A04               	clrf	UART1_OverrunErrorCallbackRegister@callbackHandler^(0+1280),c
  1762   00205A  6A05               	clrf	(UART1_OverrunErrorCallbackRegister@callbackHandler+1)^(0+1280),c
  1763   00205C  EC08  F012         	call	_UART1_OverrunErrorCallbackRegister	;wreg free
  1764                           
  1765                           ; BSR set to: 2
  1766                           ;mcc_generated_files/uart/src/uart1.c: 141:     UART1_ParityErrorCallbackRegister(UART1_
      +                          DefaultParityErrorCallback);
  1767   002060  0E00               	movlw	0
  1768   002062  6A04               	clrf	UART1_ParityErrorCallbackRegister@callbackHandler^(0+1280),c
  1769   002064  6A05               	clrf	(UART1_ParityErrorCallbackRegister@callbackHandler+1)^(0+1280),c
  1770   002066  EC70  F012         	call	_UART1_ParityErrorCallbackRegister	;wreg free
  1771                           
  1772                           ; BSR set to: 2
  1773                           ;mcc_generated_files/uart/src/uart1.c: 143:     uart1RxLastError.status = 0;
  1774   00206A  0105               	movlb	5	; () banked
  1775   00206C  6B66               	clrf	_uart1RxLastError& (0+255),b	;volatile
  1776   00206E  6B67               	clrf	(_uart1RxLastError+1)& (0+255),b	;volatile
  1777                           
  1778                           ; BSR set to: 5
  1779   002070  0012               	return		;funcret
  1780   002072                     __end_of_UART1_Initialize:
  1781                           	callstack 0
  1782                           
  1783 ;; *************** function _UART1_ParityErrorCallbackRegister *****************
  1784 ;; Defined at:
  1785 ;;		line 340 in file "mcc_generated_files/uart/src/uart1.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  callbackHand    2    3[COMRAM] PTR FTN()void 
  1788 ;;		 -> UART1_DefaultParityErrorCallback(1), 
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;		None
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      void 
  1793 ;; Registers used:
  1794 ;;		wreg, status,2, status,0
  1795 ;; Tracked objects:
  1796 ;;		On entry : 3F/2
  1797 ;;		On exit  : 3F/2
  1798 ;;		Unchanged: 3F/0
  1799 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1803 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1804 ;;Total ram usage:        2 bytes
  1805 ;; Hardware stack levels used: 1
  1806 ;; Hardware stack levels required when called: 3
  1807 ;; This function calls:
  1808 ;;		Nothing
  1809 ;; This function is called by:
  1810 ;;		_UART1_Initialize
  1811 ;; This function uses a non-reentrant model
  1812 ;;
  1813                           
  1814                           	psect	text8
  1815   0024E0                     __ptext8:
  1816                           	callstack 0
  1817   0024E0                     _UART1_ParityErrorCallbackRegister:
  1818                           	callstack 121
  1819                           
  1820                           ; BSR set to: 2
  1821                           
  1822                           ; BSR set to: 2
  1823                           
  1824                           ; BSR set to: 5
  1825                           ;incstack = 0
  1826   0024E0  0012               	return		;funcret
  1827   0024E2                     __end_of_UART1_ParityErrorCallbackRegister:
  1828                           	callstack 0
  1829                           
  1830 ;; *************** function _UART1_OverrunErrorCallbackRegister *****************
  1831 ;; Defined at:
  1832 ;;		line 332 in file "mcc_generated_files/uart/src/uart1.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;  callbackHand    2    3[COMRAM] PTR FTN()void 
  1835 ;;		 -> UART1_DefaultOverrunErrorCallback(1), 
  1836 ;; Auto vars:     Size  Location     Type
  1837 ;;		None
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg, status,2, status,0
  1842 ;; Tracked objects:
  1843 ;;		On entry : 3F/2
  1844 ;;		On exit  : 3F/2
  1845 ;;		Unchanged: 3F/0
  1846 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1847 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1850 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1851 ;;Total ram usage:        2 bytes
  1852 ;; Hardware stack levels used: 1
  1853 ;; Hardware stack levels required when called: 3
  1854 ;; This function calls:
  1855 ;;		Nothing
  1856 ;; This function is called by:
  1857 ;;		_UART1_Initialize
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           	psect	text9
  1862   002410                     __ptext9:
  1863                           	callstack 0
  1864   002410                     _UART1_OverrunErrorCallbackRegister:
  1865                           	callstack 121
  1866                           
  1867                           ; BSR set to: 2
  1868                           ;mcc_generated_files/uart/src/uart1.c: 332: void UART1_OverrunErrorCallbackRegister(void
      +                           (* callbackHandler)(void));mcc_generated_files/uart/src/uart1.c: 333: {;mcc_generated_f
      +                          iles/uart/src/uart1.c: 334:     if(((void*)0) != callbackHandler)
  1869                           
  1870                           ; BSR set to: 2
  1871                           ;incstack = 0
  1872   002410  5004               	movf	UART1_OverrunErrorCallbackRegister@callbackHandler^(0+1280),w,c
  1873   002412  1005               	iorwf	(UART1_OverrunErrorCallbackRegister@callbackHandler+1)^(0+1280),w,c
  1874   002414  B4D8               	btfsc	status,2,c
  1875   002416  0012               	return	
  1876                           
  1877                           ; BSR set to: 2
  1878                           ;mcc_generated_files/uart/src/uart1.c: 335:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          336:         UART1_OverrunErrorHandler = callbackHandler;
  1879   002418  C504  F564         	movff	UART1_OverrunErrorCallbackRegister@callbackHandler,_UART1_OverrunErrorHandler
  1880   00241C  C505  F565         	movff	UART1_OverrunErrorCallbackRegister@callbackHandler+1,_UART1_OverrunErrorHandler+1
  1881                           
  1882                           ; BSR set to: 2
  1883   002420  0012               	return		;funcret
  1884   002422                     __end_of_UART1_OverrunErrorCallbackRegister:
  1885                           	callstack 0
  1886                           
  1887 ;; *************** function _UART1_FramingErrorCallbackRegister *****************
  1888 ;; Defined at:
  1889 ;;		line 324 in file "mcc_generated_files/uart/src/uart1.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;  callbackHand    2    3[COMRAM] PTR FTN()void 
  1892 ;;		 -> UART1_DefaultFramingErrorCallback(1), 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;		None
  1895 ;; Return value:  Size  Location     Type
  1896 ;;                  1    wreg      void 
  1897 ;; Registers used:
  1898 ;;		wreg, status,2, status,0
  1899 ;; Tracked objects:
  1900 ;;		On entry : 3F/2
  1901 ;;		On exit  : 3F/2
  1902 ;;		Unchanged: 3F/0
  1903 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1904 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;Total ram usage:        2 bytes
  1909 ;; Hardware stack levels used: 1
  1910 ;; Hardware stack levels required when called: 3
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_UART1_Initialize
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text10
  1919   002422                     __ptext10:
  1920                           	callstack 0
  1921   002422                     _UART1_FramingErrorCallbackRegister:
  1922                           	callstack 121
  1923                           
  1924                           ; BSR set to: 2
  1925                           ;mcc_generated_files/uart/src/uart1.c: 324: void UART1_FramingErrorCallbackRegister(void
      +                           (* callbackHandler)(void));mcc_generated_files/uart/src/uart1.c: 325: {;mcc_generated_f
      +                          iles/uart/src/uart1.c: 326:     if(((void*)0) != callbackHandler)
  1926                           
  1927                           ; BSR set to: 2
  1928                           ;incstack = 0
  1929   002422  5004               	movf	UART1_FramingErrorCallbackRegister@callbackHandler^(0+1280),w,c
  1930   002424  1005               	iorwf	(UART1_FramingErrorCallbackRegister@callbackHandler+1)^(0+1280),w,c
  1931   002426  B4D8               	btfsc	status,2,c
  1932   002428  0012               	return	
  1933                           
  1934                           ; BSR set to: 2
  1935                           ;mcc_generated_files/uart/src/uart1.c: 327:     {;mcc_generated_files/uart/src/uart1.c: 
      +                          328:         UART1_FramingErrorHandler = callbackHandler;
  1936   00242A  C504  F547         	movff	UART1_FramingErrorCallbackRegister@callbackHandler,_UART1_FramingErrorHandler
  1937   00242E  C505  F548         	movff	UART1_FramingErrorCallbackRegister@callbackHandler+1,_UART1_FramingErrorHandler+1
  1938                           
  1939                           ; BSR set to: 2
  1940   002432  0012               	return		;funcret
  1941   002434                     __end_of_UART1_FramingErrorCallbackRegister:
  1942                           	callstack 0
  1943                           
  1944 ;; *************** function _Timer1_Initialize *****************
  1945 ;; Defined at:
  1946 ;;		line 57 in file "mcc_generated_files/timer/src/tmr1.c"
  1947 ;; Parameters:    Size  Location     Type
  1948 ;;		None
  1949 ;; Auto vars:     Size  Location     Type
  1950 ;;		None
  1951 ;; Return value:  Size  Location     Type
  1952 ;;                  1    wreg      void 
  1953 ;; Registers used:
  1954 ;;		wreg, status,2, status,0, cstack
  1955 ;; Tracked objects:
  1956 ;;		On entry : 3F/3
  1957 ;;		On exit  : 3F/3
  1958 ;;		Unchanged: 0/0
  1959 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1962 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1963 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1964 ;;Total ram usage:        2 bytes
  1965 ;; Hardware stack levels used: 1
  1966 ;; Hardware stack levels required when called: 4
  1967 ;; This function calls:
  1968 ;;		_Timer1_OverflowCallbackRegister
  1969 ;; This function is called by:
  1970 ;;		_SYSTEM_Initialize
  1971 ;; This function uses a non-reentrant model
  1972 ;;
  1973                           
  1974                           	psect	text11
  1975   002102                     __ptext11:
  1976                           	callstack 0
  1977   002102                     _Timer1_Initialize:
  1978                           	callstack 121
  1979                           
  1980                           ; BSR set to: 3
  1981                           ;mcc_generated_files/timer/src/tmr1.c: 60:     T1GCON = 0x0;
  1982                           
  1983                           ; BSR set to: 2
  1984                           ;incstack = 0
  1985   002102  6B15               	clrf	21,b	;volatile
  1986                           
  1987                           ;mcc_generated_files/timer/src/tmr1.c: 62:     T1GATE = 0x0;
  1988   002104  6B16               	clrf	22,b	;volatile
  1989                           
  1990                           ; BSR set to: 3
  1991                           ;mcc_generated_files/timer/src/tmr1.c: 64:     T1CLK = 0x1;
  1992   002106  0E01               	movlw	1
  1993   002108  6F17               	movwf	23,b	;volatile
  1994                           
  1995                           ;mcc_generated_files/timer/src/tmr1.c: 66:     TMR1H = 0xB;
  1996   00210A  0E0B               	movlw	11
  1997   00210C  6F13               	movwf	19,b	;volatile
  1998                           
  1999                           ;mcc_generated_files/timer/src/tmr1.c: 68:     TMR1L = 0xDB;
  2000   00210E  0EDB               	movlw	219
  2001   002110  6F12               	movwf	18,b	;volatile
  2002                           
  2003                           ; BSR set to: 3
  2004                           ;mcc_generated_files/timer/src/tmr1.c: 71:     timer1ReloadVal=(uint16_t)((TMR1H << 8) |
      +                           TMR1L);
  2005   002112  5112               	movf	18,w,b	;volatile
  2006   002114  C313 F506          	movff	787,??_Timer1_Initialize	;volatile
  2007   002118  6A07               	clrf	(??_Timer1_Initialize+1)^(0+1280),c
  2008   00211A  C506  F507         	movff	??_Timer1_Initialize,??_Timer1_Initialize+1
  2009   00211E  6A06               	clrf	??_Timer1_Initialize^(0+1280),c
  2010   002120  1006               	iorwf	??_Timer1_Initialize^(0+1280),w,c
  2011   002122  6E49               	movwf	_timer1ReloadVal^(0+1280),c	;volatile
  2012   002124  5007               	movf	(??_Timer1_Initialize+1)^(0+1280),w,c
  2013   002126  6E4A               	movwf	(_timer1ReloadVal+1)^(0+1280),c	;volatile
  2014                           
  2015                           ; BSR set to: 3
  2016                           ;mcc_generated_files/timer/src/tmr1.c: 74:     Timer1_OverflowCallbackRegister(Timer1_De
      +                          faultOverflowCallback);
  2017   002128  0EF2               	movlw	low _Timer1_DefaultOverflowCallback
  2018   00212A  6E04               	movwf	Timer1_OverflowCallbackRegister@CallbackHandler^(0+1280),c
  2019   00212C  0E24               	movlw	high _Timer1_DefaultOverflowCallback
  2020   00212E  6E05               	movwf	(Timer1_OverflowCallbackRegister@CallbackHandler+1)^(0+1280),c
  2021   002130  EC39  F012         	call	_Timer1_OverflowCallbackRegister	;wreg free
  2022                           
  2023                           ; BSR set to: 3
  2024                           ;mcc_generated_files/timer/src/tmr1.c: 77:     PIR3bits.TMR1IF = 0;
  2025   002134  98B6               	bcf	182,4,c	;volatile
  2026                           
  2027                           ; BSR set to: 3
  2028                           ;mcc_generated_files/timer/src/tmr1.c: 78:     PIR3bits.TMR1GIF = 0;
  2029   002136  9AB6               	bcf	182,5,c	;volatile
  2030                           
  2031                           ; BSR set to: 3
  2032                           ;mcc_generated_files/timer/src/tmr1.c: 81:     T1CON = 0x0;
  2033   002138  6B14               	clrf	20,b	;volatile
  2034                           
  2035                           ; BSR set to: 3
  2036   00213A  0012               	return		;funcret
  2037   00213C                     __end_of_Timer1_Initialize:
  2038                           	callstack 0
  2039                           
  2040 ;; *************** function _Timer1_OverflowCallbackRegister *****************
  2041 ;; Defined at:
  2042 ;;		line 154 in file "mcc_generated_files/timer/src/tmr1.c"
  2043 ;; Parameters:    Size  Location     Type
  2044 ;;  CallbackHand    2    3[COMRAM] PTR FTN()void 
  2045 ;;		 -> Timer0_DefaultOverflowCallback(1), TMR2_DefaultOverflowCallback(1), Timer1_DefaultOverflowCallback(1), LAB_ISR(1
      +), 
  2046 ;; Auto vars:     Size  Location     Type
  2047 ;;		None
  2048 ;; Return value:  Size  Location     Type
  2049 ;;                  1    wreg      void 
  2050 ;; Registers used:
  2051 ;;		wreg, status,2, status,0
  2052 ;; Tracked objects:
  2053 ;;		On entry : 3F/3
  2054 ;;		On exit  : 3F/3
  2055 ;;		Unchanged: 3E/0
  2056 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2060 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2061 ;;Total ram usage:        2 bytes
  2062 ;; Hardware stack levels used: 1
  2063 ;; Hardware stack levels required when called: 3
  2064 ;; This function calls:
  2065 ;;		Nothing
  2066 ;; This function is called by:
  2067 ;;		_Timer1_Initialize
  2068 ;; This function uses a non-reentrant model
  2069 ;;
  2070                           
  2071                           	psect	text12
  2072   002472                     __ptext12:
  2073                           	callstack 0
  2074   002472                     _Timer1_OverflowCallbackRegister:
  2075                           	callstack 121
  2076                           
  2077                           ; BSR set to: 3
  2078                           ;mcc_generated_files/timer/src/tmr1.c: 154: void Timer1_OverflowCallbackRegister(void (*
      +                           CallbackHandler)(void));mcc_generated_files/timer/src/tmr1.c: 155: {;mcc_generated_file
      +                          s/timer/src/tmr1.c: 156:     Timer1_OverflowCallback = CallbackHandler;
  2079                           
  2080                           ; BSR set to: 3
  2081                           ;incstack = 0
  2082   002472  C504  F58C         	movff	Timer1_OverflowCallbackRegister@CallbackHandler,_Timer1_OverflowCallback
  2083   002476  C505  F58D         	movff	Timer1_OverflowCallbackRegister@CallbackHandler+1,_Timer1_OverflowCallback+1
  2084                           
  2085                           ; BSR set to: 3
  2086   00247A  0012               	return		;funcret
  2087   00247C                     __end_of_Timer1_OverflowCallbackRegister:
  2088                           	callstack 0
  2089                           
  2090 ;; *************** function _Timer0_Initialize *****************
  2091 ;; Defined at:
  2092 ;;		line 49 in file "mcc_generated_files/timer/src/tmr0.c"
  2093 ;; Parameters:    Size  Location     Type
  2094 ;;		None
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;		None
  2097 ;; Return value:  Size  Location     Type
  2098 ;;                  1    wreg      void 
  2099 ;; Registers used:
  2100 ;;		wreg, status,2, status,0, cstack
  2101 ;; Tracked objects:
  2102 ;;		On entry : 3F/0
  2103 ;;		On exit  : 3F/3
  2104 ;;		Unchanged: 0/0
  2105 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;Total ram usage:        0 bytes
  2111 ;; Hardware stack levels used: 1
  2112 ;; Hardware stack levels required when called: 4
  2113 ;; This function calls:
  2114 ;;		_Timer0_OverflowCallbackRegister
  2115 ;; This function is called by:
  2116 ;;		_SYSTEM_Initialize
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text13
  2121   00230A                     __ptext13:
  2122                           	callstack 0
  2123   00230A                     _Timer0_Initialize:
  2124                           	callstack 121
  2125                           
  2126                           ; BSR set to: 0
  2127                           ;mcc_generated_files/timer/src/tmr0.c: 52:     TMR0H = 0xF3;
  2128                           
  2129                           ; BSR set to: 3
  2130                           ;incstack = 0
  2131   00230A  0EF3               	movlw	243
  2132   00230C  0103               	movlb	3	; () banked
  2133   00230E  6F19               	movwf	25,b	;volatile
  2134                           
  2135                           ; BSR set to: 3
  2136                           ;mcc_generated_files/timer/src/tmr0.c: 55:     TMR0L = 0x0;
  2137   002310  6B18               	clrf	24,b	;volatile
  2138                           
  2139                           ;mcc_generated_files/timer/src/tmr0.c: 58:     T0CON1 = 0x48;
  2140   002312  0E48               	movlw	72
  2141   002314  6F1B               	movwf	27,b	;volatile
  2142                           
  2143                           ; BSR set to: 3
  2144                           ;mcc_generated_files/timer/src/tmr0.c: 62:     Timer0_OverflowCallbackRegister(Timer0_De
      +                          faultOverflowCallback);
  2145   002316  0EEE               	movlw	low _Timer0_DefaultOverflowCallback
  2146   002318  6E04               	movwf	Timer0_OverflowCallbackRegister@CallbackHandler^(0+1280),c
  2147   00231A  0E24               	movlw	high _Timer0_DefaultOverflowCallback
  2148   00231C  6E05               	movwf	(Timer0_OverflowCallbackRegister@CallbackHandler+1)^(0+1280),c
  2149   00231E  EC48  F012         	call	_Timer0_OverflowCallbackRegister	;wreg free
  2150                           
  2151                           ;mcc_generated_files/timer/src/tmr0.c: 65:     PIR3bits.TMR0IF = 0;
  2152   002322  9EB6               	bcf	182,7,c	;volatile
  2153                           
  2154                           ;mcc_generated_files/timer/src/tmr0.c: 68:     PIE3bits.TMR0IE = 1;
  2155   002324  8EAB               	bsf	171,7,c	;volatile
  2156                           
  2157                           ;mcc_generated_files/timer/src/tmr0.c: 71:     T0CON0 = 0x80;
  2158   002326  0E80               	movlw	128
  2159   002328  0103               	movlb	3	; () banked
  2160   00232A  6F1A               	movwf	26,b	;volatile
  2161                           
  2162                           ; BSR set to: 3
  2163   00232C  0C80               	retlw	128	;funcret
  2164   00232E                     __end_of_Timer0_Initialize:
  2165                           	callstack 0
  2166                           
  2167 ;; *************** function _TMR2_Initialize *****************
  2168 ;; Defined at:
  2169 ;;		line 57 in file "mcc_generated_files/timer/src/tmr2.c"
  2170 ;; Parameters:    Size  Location     Type
  2171 ;;		None
  2172 ;; Auto vars:     Size  Location     Type
  2173 ;;		None
  2174 ;; Return value:  Size  Location     Type
  2175 ;;                  1    wreg      void 
  2176 ;; Registers used:
  2177 ;;		wreg, status,2, status,0, cstack
  2178 ;; Tracked objects:
  2179 ;;		On entry : 3F/3
  2180 ;;		On exit  : 3F/3
  2181 ;;		Unchanged: 0/0
  2182 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2187 ;;Total ram usage:        0 bytes
  2188 ;; Hardware stack levels used: 1
  2189 ;; Hardware stack levels required when called: 4
  2190 ;; This function calls:
  2191 ;;		_TMR2_OverflowCallbackRegister
  2192 ;; This function is called by:
  2193 ;;		_SYSTEM_Initialize
  2194 ;; This function uses a non-reentrant model
  2195 ;;
  2196                           
  2197                           	psect	text14
  2198   002352                     __ptext14:
  2199                           	callstack 0
  2200   002352                     _TMR2_Initialize:
  2201                           	callstack 121
  2202                           
  2203                           ; BSR set to: 3
  2204                           ;mcc_generated_files/timer/src/tmr2.c: 61:     T2CLKCON = 0x1;
  2205                           
  2206                           ; BSR set to: 3
  2207                           ;incstack = 0
  2208   002352  0E01               	movlw	1
  2209   002354  6F20               	movwf	32,b	;volatile
  2210                           
  2211                           ; BSR set to: 3
  2212                           ;mcc_generated_files/timer/src/tmr2.c: 63:     T2HLT = 0x0;
  2213   002356  6B1F               	clrf	31,b	;volatile
  2214                           
  2215                           ; BSR set to: 3
  2216                           ;mcc_generated_files/timer/src/tmr2.c: 65:     T2RST = 0x0;
  2217   002358  6B21               	clrf	33,b	;volatile
  2218                           
  2219                           ; BSR set to: 3
  2220                           ;mcc_generated_files/timer/src/tmr2.c: 67:     T2PR = 0xFF;
  2221   00235A  691D               	setf	29,b	;volatile
  2222                           
  2223                           ; BSR set to: 3
  2224                           ;mcc_generated_files/timer/src/tmr2.c: 69:     T2TMR = 0x0;
  2225   00235C  6B1C               	clrf	28,b	;volatile
  2226                           
  2227                           ; BSR set to: 3
  2228                           ;mcc_generated_files/timer/src/tmr2.c: 72:     TMR2_OverflowCallbackRegister(TMR2_Defaul
      +                          tOverflowCallback);
  2229   00235E  0EF0               	movlw	low _TMR2_DefaultOverflowCallback
  2230   002360  6E04               	movwf	TMR2_OverflowCallbackRegister@InterruptHandler^(0+1280),c
  2231   002362  0E24               	movlw	high _TMR2_DefaultOverflowCallback
  2232   002364  6E05               	movwf	(TMR2_OverflowCallbackRegister@InterruptHandler+1)^(0+1280),c
  2233   002366  EC3E  F012         	call	_TMR2_OverflowCallbackRegister	;wreg free
  2234                           
  2235                           ; BSR set to: 3
  2236                           ;mcc_generated_files/timer/src/tmr2.c: 75:      PIR3bits.TMR2IF = 0;
  2237   00236A  96B6               	bcf	182,3,c	;volatile
  2238                           
  2239                           ; BSR set to: 3
  2240                           ;mcc_generated_files/timer/src/tmr2.c: 77:     T2CON = 0x80;
  2241   00236C  0E80               	movlw	128
  2242   00236E  6F1E               	movwf	30,b	;volatile
  2243                           
  2244                           ; BSR set to: 3
  2245   002370  0C80               	retlw	128	;funcret
  2246   002372                     __end_of_TMR2_Initialize:
  2247                           	callstack 0
  2248                           
  2249 ;; *************** function _TMR2_OverflowCallbackRegister *****************
  2250 ;; Defined at:
  2251 ;;		line 122 in file "mcc_generated_files/timer/src/tmr2.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  InterruptHan    2    3[COMRAM] PTR FTN()void 
  2254 ;;		 -> Timer0_DefaultOverflowCallback(1), TMR2_DefaultOverflowCallback(1), Timer1_DefaultOverflowCallback(1), LAB_ISR(1
      +), 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  1    wreg      void 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, status,0
  2261 ;; Tracked objects:
  2262 ;;		On entry : 3F/3
  2263 ;;		On exit  : 3F/3
  2264 ;;		Unchanged: 3E/0
  2265 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2266 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2269 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2270 ;;Total ram usage:        2 bytes
  2271 ;; Hardware stack levels used: 1
  2272 ;; Hardware stack levels required when called: 3
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_TMR2_Initialize
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text15
  2281   00247C                     __ptext15:
  2282                           	callstack 0
  2283   00247C                     _TMR2_OverflowCallbackRegister:
  2284                           	callstack 121
  2285                           
  2286                           ; BSR set to: 3
  2287                           ;mcc_generated_files/timer/src/tmr2.c: 123:     TMR2_OverflowCallback = InterruptHandler
      +                          ;
  2288                           
  2289                           ; BSR set to: 3
  2290                           ;incstack = 0
  2291   00247C  C504  F58A         	movff	TMR2_OverflowCallbackRegister@InterruptHandler,_TMR2_OverflowCallback
  2292   002480  C505  F58B         	movff	TMR2_OverflowCallbackRegister@InterruptHandler+1,_TMR2_OverflowCallback+1
  2293                           
  2294                           ; BSR set to: 3
  2295   002484  0012               	return		;funcret
  2296   002486                     __end_of_TMR2_OverflowCallbackRegister:
  2297                           	callstack 0
  2298                           
  2299 ;; *************** function _PWM1_16BIT_Initialize *****************
  2300 ;; Defined at:
  2301 ;;		line 50 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
  2302 ;; Parameters:    Size  Location     Type
  2303 ;;		None
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;		None
  2306 ;; Return value:  Size  Location     Type
  2307 ;;                  1    wreg      void 
  2308 ;; Registers used:
  2309 ;;		wreg, status,2, status,0, cstack
  2310 ;; Tracked objects:
  2311 ;;		On entry : 3F/0
  2312 ;;		On exit  : 3F/0
  2313 ;;		Unchanged: 3F/0
  2314 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2319 ;;Total ram usage:        0 bytes
  2320 ;; Hardware stack levels used: 1
  2321 ;; Hardware stack levels required when called: 4
  2322 ;; This function calls:
  2323 ;;		_PWM1_16BIT_Period_SetInterruptHandler
  2324 ;;		_PWM1_16BIT_Slice1Output1_SetInterruptHandler
  2325 ;;		_PWM1_16BIT_Slice1Output2_SetInterruptHandler
  2326 ;; This function is called by:
  2327 ;;		_SYSTEM_Initialize
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           	psect	text16
  2332   001FC2                     __ptext16:
  2333                           	callstack 0
  2334   001FC2                     _PWM1_16BIT_Initialize:
  2335                           	callstack 121
  2336                           
  2337                           ; BSR set to: 0
  2338                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 53:     PWM1ERS = 0x0;
  2339                           
  2340                           ; BSR set to: 3
  2341                           ;incstack = 0
  2342   001FC2  6A60               	clrf	96,c	;volatile
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 56:     PWM1CLK = 0x2;
  2346   001FC4  0E02               	movlw	2
  2347   001FC6  6E61               	movwf	97,c	;volatile
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 59:     PWM1LDS = 0x0;
  2351   001FC8  6A62               	clrf	98,c	;volatile
  2352                           
  2353                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 62:     PWM1PRL = 0x87;
  2354   001FCA  0E87               	movlw	135
  2355   001FCC  6E63               	movwf	99,c	;volatile
  2356                           
  2357                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 65:     PWM1PRH = 0x13;
  2358   001FCE  0E13               	movlw	19
  2359   001FD0  6E64               	movwf	100,c	;volatile
  2360                           
  2361                           ; BSR set to: 0
  2362                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 68:     PWM1CPRE = 0x0;
  2363   001FD2  6A65               	clrf	101,c	;volatile
  2364                           
  2365                           ; BSR set to: 0
  2366                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 71:     PWM1PIPOS = 0x0;
  2367   001FD4  6A66               	clrf	102,c	;volatile
  2368                           
  2369                           ; BSR set to: 0
  2370                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 74:     PWM1GIR = 0x0;
  2371   001FD6  6A67               	clrf	103,c	;volatile
  2372                           
  2373                           ; BSR set to: 0
  2374                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 77:     PWM1GIE = 0x0;
  2375   001FD8  6A68               	clrf	104,c	;volatile
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 80:     PWM1S1CFG = 0x0;
  2379   001FDA  6A6A               	clrf	106,c	;volatile
  2380                           
  2381                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 83:     PWM1S1P1L = 0xA0;
  2382   001FDC  0EA0               	movlw	160
  2383   001FDE  6E6B               	movwf	107,c	;volatile
  2384                           
  2385                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 86:     PWM1S1P1H = 0xF;
  2386   001FE0  0E0F               	movlw	15
  2387   001FE2  6E6C               	movwf	108,c	;volatile
  2388                           
  2389                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 89:     PWM1S1P2L = 0xC4;
  2390   001FE4  0EC4               	movlw	196
  2391   001FE6  6E6D               	movwf	109,c	;volatile
  2392                           
  2393                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 92:     PWM1S1P2H = 0x9;
  2394   001FE8  0E09               	movlw	9
  2395   001FEA  6E6E               	movwf	110,c	;volatile
  2396                           
  2397                           ; BSR set to: 0
  2398                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 95:     PIR4bits.PWM1PIF = 0;
  2399   001FEC  9CB7               	bcf	183,6,c	;volatile
  2400                           
  2401                           ; BSR set to: 0
  2402                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 98:     PIR4bits.PWM1IF = 0;
  2403   001FEE  9EB7               	bcf	183,7,c	;volatile
  2404                           
  2405                           ; BSR set to: 0
  2406                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 101:     PWM1GIRbits.S1P1IF = 0;
  2407   001FF0  9067               	bcf	103,0,c	;volatile
  2408                           
  2409                           ; BSR set to: 0
  2410                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 104:     PWM1GIRbits.S1P2IF = 0;
  2411   001FF2  9267               	bcf	103,1,c	;volatile
  2412                           
  2413                           ; BSR set to: 0
  2414                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 107:     PIE4bits.PWM1IE = 0;
  2415   001FF4  9EAC               	bcf	172,7,c	;volatile
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 110:     PIE4bits.PWM1PIE = 0;
  2419   001FF6  9CAC               	bcf	172,6,c	;volatile
  2420                           
  2421                           ; BSR set to: 0
  2422                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 113:     PWM1_16BIT_Slice1Output1_SetInterrup
      +                          tHandler(PWM1_16BIT_Slice1Output1_DefaultInterruptHandler);
  2423   001FF8  0E00               	movlw	0
  2424   001FFA  6A04               	clrf	PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler^(0+1280),c
  2425   001FFC  6A05               	clrf	(PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  2426   001FFE  EC72  F012         	call	_PWM1_16BIT_Slice1Output1_SetInterruptHandler	;wreg free
  2427                           
  2428                           ; BSR set to: 0
  2429                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 114:     PWM1_16BIT_Slice1Output2_SetInterrup
      +                          tHandler(PWM1_16BIT_Slice1Output2_DefaultInterruptHandler);
  2430   002002  0E00               	movlw	0
  2431   002004  6A04               	clrf	PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler^(0+1280),c
  2432   002006  6A05               	clrf	(PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  2433   002008  EC71  F012         	call	_PWM1_16BIT_Slice1Output2_SetInterruptHandler	;wreg free
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 115:     PWM1_16BIT_Period_SetInterruptHandle
      +                          r(PWM1_16BIT_Period_DefaultInterruptHandler);
  2437   00200C  0E00               	movlw	0
  2438   00200E  6A04               	clrf	PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler^(0+1280),c
  2439   002010  6A05               	clrf	(PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  2440   002012  EC73  F012         	call	_PWM1_16BIT_Period_SetInterruptHandler	;wreg free
  2441                           
  2442                           ; BSR set to: 0
  2443                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 118:     PWM1CON = 0x80;
  2444   002016  0E80               	movlw	128
  2445   002018  6E69               	movwf	105,c	;volatile
  2446                           
  2447                           ; BSR set to: 0
  2448   00201A  0C80               	retlw	128	;funcret
  2449   00201C                     __end_of_PWM1_16BIT_Initialize:
  2450                           	callstack 0
  2451                           
  2452 ;; *************** function _PWM1_16BIT_Slice1Output2_SetInterruptHandler *****************
  2453 ;; Defined at:
  2454 ;;		line 184 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;  InterruptHan    2    3[COMRAM] PTR FTN()void 
  2457 ;;		 -> PWM1_16BIT_Slice1Output2_DefaultInterruptHandler(1), 
  2458 ;; Auto vars:     Size  Location     Type
  2459 ;;		None
  2460 ;; Return value:  Size  Location     Type
  2461 ;;                  1    wreg      void 
  2462 ;; Registers used:
  2463 ;;		None
  2464 ;; Tracked objects:
  2465 ;;		On entry : 3F/0
  2466 ;;		On exit  : 3F/0
  2467 ;;		Unchanged: 3F/0
  2468 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2469 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2472 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;Total ram usage:        2 bytes
  2474 ;; Hardware stack levels used: 1
  2475 ;; Hardware stack levels required when called: 3
  2476 ;; This function calls:
  2477 ;;		Nothing
  2478 ;; This function is called by:
  2479 ;;		_PWM1_16BIT_Initialize
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text17
  2484   0024E2                     __ptext17:
  2485                           	callstack 0
  2486   0024E2                     _PWM1_16BIT_Slice1Output2_SetInterruptHandler:
  2487                           	callstack 121
  2488                           
  2489                           ; BSR set to: 0
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;incstack = 0
  2493   0024E2  0012               	return		;funcret
  2494   0024E4                     __end_of_PWM1_16BIT_Slice1Output2_SetInterruptHandler:
  2495                           	callstack 0
  2496                           
  2497 ;; *************** function _PWM1_16BIT_Slice1Output1_SetInterruptHandler *****************
  2498 ;; Defined at:
  2499 ;;		line 179 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
  2500 ;; Parameters:    Size  Location     Type
  2501 ;;  InterruptHan    2    3[COMRAM] PTR FTN()void 
  2502 ;;		 -> PWM1_16BIT_Slice1Output1_DefaultInterruptHandler(1), 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;		None
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      void 
  2507 ;; Registers used:
  2508 ;;		None
  2509 ;; Tracked objects:
  2510 ;;		On entry : 3F/0
  2511 ;;		On exit  : 3F/0
  2512 ;;		Unchanged: 3F/0
  2513 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2514 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2517 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;Total ram usage:        2 bytes
  2519 ;; Hardware stack levels used: 1
  2520 ;; Hardware stack levels required when called: 3
  2521 ;; This function calls:
  2522 ;;		Nothing
  2523 ;; This function is called by:
  2524 ;;		_PWM1_16BIT_Initialize
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           	psect	text18
  2529   0024E4                     __ptext18:
  2530                           	callstack 0
  2531   0024E4                     _PWM1_16BIT_Slice1Output1_SetInterruptHandler:
  2532                           	callstack 121
  2533                           
  2534                           ; BSR set to: 0
  2535                           
  2536                           ; BSR set to: 0
  2537                           ;incstack = 0
  2538   0024E4  0012               	return		;funcret
  2539   0024E6                     __end_of_PWM1_16BIT_Slice1Output1_SetInterruptHandler:
  2540                           	callstack 0
  2541                           
  2542 ;; *************** function _PWM1_16BIT_Period_SetInterruptHandler *****************
  2543 ;; Defined at:
  2544 ;;		line 189 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  InterruptHan    2    3[COMRAM] PTR FTN()void 
  2547 ;;		 -> PWM1_16BIT_Period_DefaultInterruptHandler(1), 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;		None
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      void 
  2552 ;; Registers used:
  2553 ;;		None
  2554 ;; Tracked objects:
  2555 ;;		On entry : 3F/0
  2556 ;;		On exit  : 3F/0
  2557 ;;		Unchanged: 3F/0
  2558 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;Total ram usage:        2 bytes
  2564 ;; Hardware stack levels used: 1
  2565 ;; Hardware stack levels required when called: 3
  2566 ;; This function calls:
  2567 ;;		Nothing
  2568 ;; This function is called by:
  2569 ;;		_PWM1_16BIT_Initialize
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           	psect	text19
  2574   0024E6                     __ptext19:
  2575                           	callstack 0
  2576   0024E6                     _PWM1_16BIT_Period_SetInterruptHandler:
  2577                           	callstack 121
  2578                           
  2579                           ; BSR set to: 0
  2580                           
  2581                           ; BSR set to: 0
  2582                           ;incstack = 0
  2583   0024E6  0012               	return		;funcret
  2584   0024E8                     __end_of_PWM1_16BIT_Period_SetInterruptHandler:
  2585                           	callstack 0
  2586                           
  2587 ;; *************** function _PIN_MANAGER_Initialize *****************
  2588 ;; Defined at:
  2589 ;;		line 38 in file "mcc_generated_files/system/src/pins.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;		None
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;		None
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg, status,2
  2598 ;; Tracked objects:
  2599 ;;		On entry : 3F/0
  2600 ;;		On exit  : 3F/4
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;Total ram usage:        0 bytes
  2608 ;; Hardware stack levels used: 1
  2609 ;; Hardware stack levels required when called: 3
  2610 ;; This function calls:
  2611 ;;		Nothing
  2612 ;; This function is called by:
  2613 ;;		_SYSTEM_Initialize
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           	psect	text20
  2618   001E90                     __ptext20:
  2619                           	callstack 0
  2620   001E90                     _PIN_MANAGER_Initialize:
  2621                           	callstack 122
  2622                           
  2623                           ; BSR set to: 0
  2624                           ;mcc_generated_files/system/src/pins.c: 43:     LATA = 0x26;
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;incstack = 0
  2628   001E90  0E26               	movlw	38
  2629   001E92  6EBE               	movwf	190,c	;volatile
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;mcc_generated_files/system/src/pins.c: 44:     LATB = 0x0;
  2633   001E94  6ABF               	clrf	191,c	;volatile
  2634                           
  2635                           ;mcc_generated_files/system/src/pins.c: 45:     LATC = 0x20;
  2636   001E96  0E20               	movlw	32
  2637   001E98  6EC0               	movwf	192,c	;volatile
  2638                           
  2639                           ;mcc_generated_files/system/src/pins.c: 50:     TRISA = 0x19;
  2640   001E9A  0E19               	movlw	25
  2641   001E9C  6EC6               	movwf	198,c	;volatile
  2642                           
  2643                           ;mcc_generated_files/system/src/pins.c: 51:     TRISB = 0xF0;
  2644   001E9E  0EF0               	movlw	240
  2645   001EA0  6EC7               	movwf	199,c	;volatile
  2646                           
  2647                           ;mcc_generated_files/system/src/pins.c: 52:     TRISC = 0x9F;
  2648   001EA2  0E9F               	movlw	159
  2649   001EA4  6EC8               	movwf	200,c	;volatile
  2650                           
  2651                           ;mcc_generated_files/system/src/pins.c: 57:     ANSELA = 0x11;
  2652   001EA6  0E11               	movlw	17
  2653   001EA8  0104               	movlb	4	; () banked
  2654   001EAA  6F00               	movwf	0,b	;volatile
  2655                           
  2656                           ;mcc_generated_files/system/src/pins.c: 58:     ANSELB = 0xD0;
  2657   001EAC  0ED0               	movlw	208
  2658   001EAE  6F08               	movwf	8,b	;volatile
  2659                           
  2660                           ;mcc_generated_files/system/src/pins.c: 59:     ANSELC = 0x8F;
  2661   001EB0  0E8F               	movlw	143
  2662   001EB2  6F10               	movwf	16,b	;volatile
  2663                           
  2664                           ; BSR set to: 4
  2665                           ;mcc_generated_files/system/src/pins.c: 64:     WPUA = 0x0;
  2666   001EB4  6B01               	clrf	1,b	;volatile
  2667                           
  2668                           ; BSR set to: 4
  2669                           ;mcc_generated_files/system/src/pins.c: 65:     WPUB = 0x0;
  2670   001EB6  6B09               	clrf	9,b	;volatile
  2671                           
  2672                           ; BSR set to: 4
  2673                           ;mcc_generated_files/system/src/pins.c: 66:     WPUC = 0x0;
  2674   001EB8  6B11               	clrf	17,b	;volatile
  2675                           
  2676                           ; BSR set to: 4
  2677                           ;mcc_generated_files/system/src/pins.c: 71:     ODCONA = 0x0;
  2678   001EBA  6B02               	clrf	2,b	;volatile
  2679                           
  2680                           ; BSR set to: 4
  2681                           ;mcc_generated_files/system/src/pins.c: 72:     ODCONB = 0x0;
  2682   001EBC  6B0A               	clrf	10,b	;volatile
  2683                           
  2684                           ; BSR set to: 4
  2685                           ;mcc_generated_files/system/src/pins.c: 73:     ODCONC = 0x0;
  2686   001EBE  6B12               	clrf	18,b	;volatile
  2687                           
  2688                           ;mcc_generated_files/system/src/pins.c: 78:     SLRCONA = 0x37;
  2689   001EC0  0E37               	movlw	55
  2690   001EC2  6F03               	movwf	3,b	;volatile
  2691                           
  2692                           ;mcc_generated_files/system/src/pins.c: 79:     SLRCONB = 0xF0;
  2693   001EC4  0EF0               	movlw	240
  2694   001EC6  6F0B               	movwf	11,b	;volatile
  2695                           
  2696                           ; BSR set to: 4
  2697                           ;mcc_generated_files/system/src/pins.c: 80:     SLRCONC = 0xFF;
  2698   001EC8  6913               	setf	19,b	;volatile
  2699                           
  2700                           ;mcc_generated_files/system/src/pins.c: 85:     INLVLA = 0x3F;
  2701   001ECA  0E3F               	movlw	63
  2702   001ECC  6F04               	movwf	4,b	;volatile
  2703                           
  2704                           ;mcc_generated_files/system/src/pins.c: 86:     INLVLB = 0xF0;
  2705   001ECE  0EF0               	movlw	240
  2706   001ED0  6F0C               	movwf	12,b	;volatile
  2707                           
  2708                           ; BSR set to: 4
  2709                           ;mcc_generated_files/system/src/pins.c: 87:     INLVLC = 0xFF;
  2710   001ED2  6914               	setf	20,b	;volatile
  2711                           
  2712                           ; BSR set to: 4
  2713                           ;mcc_generated_files/system/src/pins.c: 92:     RB4I2C = 0x0;
  2714   001ED4  0102               	movlb	2	; () banked
  2715   001ED6  6B87               	clrf	135,b	;volatile
  2716                           
  2717                           ; BSR set to: 2
  2718                           ;mcc_generated_files/system/src/pins.c: 93:     RB6I2C = 0x0;
  2719   001ED8  6B86               	clrf	134,b	;volatile
  2720                           
  2721                           ;mcc_generated_files/system/src/pins.c: 97:     U1RXPPS = 0xD;
  2722   001EDA  0E0D               	movlw	13
  2723   001EDC  6F72               	movwf	114,b	;volatile
  2724                           
  2725                           ;mcc_generated_files/system/src/pins.c: 98:     RC6PPS = 0x10;
  2726   001EDE  0E10               	movlw	16
  2727   001EE0  6F17               	movwf	23,b	;volatile
  2728                           
  2729                           ; BSR set to: 2
  2730                           ;mcc_generated_files/system/src/pins.c: 103:     IOCAP = 0x0;
  2731   001EE2  0104               	movlb	4	; () banked
  2732   001EE4  6B05               	clrf	5,b	;volatile
  2733                           
  2734                           ; BSR set to: 4
  2735                           ;mcc_generated_files/system/src/pins.c: 104:     IOCAN = 0x0;
  2736   001EE6  6B06               	clrf	6,b	;volatile
  2737                           
  2738                           ; BSR set to: 4
  2739                           ;mcc_generated_files/system/src/pins.c: 105:     IOCAF = 0x0;
  2740   001EE8  6B07               	clrf	7,b	;volatile
  2741                           
  2742                           ; BSR set to: 4
  2743                           ;mcc_generated_files/system/src/pins.c: 106:     IOCBP = 0x0;
  2744   001EEA  6B0D               	clrf	13,b	;volatile
  2745                           
  2746                           ; BSR set to: 4
  2747                           ;mcc_generated_files/system/src/pins.c: 107:     IOCBN = 0x0;
  2748   001EEC  6B0E               	clrf	14,b	;volatile
  2749                           
  2750                           ; BSR set to: 4
  2751                           ;mcc_generated_files/system/src/pins.c: 108:     IOCBF = 0x0;
  2752   001EEE  6B0F               	clrf	15,b	;volatile
  2753                           
  2754                           ; BSR set to: 4
  2755                           ;mcc_generated_files/system/src/pins.c: 109:     IOCCP = 0x0;
  2756   001EF0  6B15               	clrf	21,b	;volatile
  2757                           
  2758                           ; BSR set to: 4
  2759                           ;mcc_generated_files/system/src/pins.c: 110:     IOCCN = 0x0;
  2760   001EF2  6B16               	clrf	22,b	;volatile
  2761                           
  2762                           ; BSR set to: 4
  2763                           ;mcc_generated_files/system/src/pins.c: 111:     IOCCF = 0x0;
  2764   001EF4  6B17               	clrf	23,b	;volatile
  2765                           
  2766                           ; BSR set to: 4
  2767   001EF6  0012               	return		;funcret
  2768   001EF8                     __end_of_PIN_MANAGER_Initialize:
  2769                           	callstack 0
  2770                           
  2771 ;; *************** function _NVM_Initialize *****************
  2772 ;; Defined at:
  2773 ;;		line 43 in file "mcc_generated_files/nvm/src/nvm.c"
  2774 ;; Parameters:    Size  Location     Type
  2775 ;;		None
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;		None
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  1    wreg      void 
  2780 ;; Registers used:
  2781 ;;		cstack
  2782 ;; Tracked objects:
  2783 ;;		On entry : 3F/3
  2784 ;;		On exit  : 3F/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2791 ;;Total ram usage:        0 bytes
  2792 ;; Hardware stack levels used: 1
  2793 ;; Hardware stack levels required when called: 4
  2794 ;; This function calls:
  2795 ;;		_NVM_StatusClear
  2796 ;; This function is called by:
  2797 ;;		_SYSTEM_Initialize
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           	psect	text21
  2802   0024D0                     __ptext21:
  2803                           	callstack 0
  2804   0024D0                     _NVM_Initialize:
  2805                           	callstack 121
  2806                           
  2807                           ; BSR set to: 3
  2808                           ;mcc_generated_files/nvm/src/nvm.c: 45:     NVM_StatusClear();
  2809                           
  2810                           ; BSR set to: 4
  2811                           ;incstack = 0
  2812   0024D0  EF56  F012         	goto	_NVM_StatusClear	;wreg free
  2813   0024D4                     __end_of_NVM_Initialize:
  2814                           	callstack 0
  2815                           
  2816 ;; *************** function _NVM_StatusClear *****************
  2817 ;; Defined at:
  2818 ;;		line 65 in file "mcc_generated_files/nvm/src/nvm.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;		None
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;		None
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      void 
  2825 ;; Registers used:
  2826 ;;		None
  2827 ;; Tracked objects:
  2828 ;;		On entry : 3F/3
  2829 ;;		On exit  : 3F/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;Total ram usage:        0 bytes
  2837 ;; Hardware stack levels used: 1
  2838 ;; Hardware stack levels required when called: 3
  2839 ;; This function calls:
  2840 ;;		Nothing
  2841 ;; This function is called by:
  2842 ;;		_NVM_Initialize
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text22
  2847   0024AC                     __ptext22:
  2848                           	callstack 0
  2849   0024AC                     _NVM_StatusClear:
  2850                           	callstack 121
  2851                           
  2852                           ; BSR set to: 3
  2853                           ;mcc_generated_files/nvm/src/nvm.c: 67:     NVMCON1bits.WRERR = 0;
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;incstack = 0
  2857   0024AC  0100               	movlb	0	; () banked
  2858   0024AE  9F41               	bcf	65,7,b	;volsfr
  2859                           
  2860                           ; BSR set to: 0
  2861   0024B0  0012               	return		;funcret
  2862   0024B2                     __end_of_NVM_StatusClear:
  2863                           	callstack 0
  2864                           
  2865 ;; *************** function _INTERRUPT_Initialize *****************
  2866 ;; Defined at:
  2867 ;;		line 42 in file "mcc_generated_files/system/src/interrupt.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;		None
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		wreg, status,2, status,0, cstack
  2876 ;; Tracked objects:
  2877 ;;		On entry : 3F/5
  2878 ;;		On exit  : 3F/5
  2879 ;;		Unchanged: 3E/0
  2880 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2885 ;;Total ram usage:        0 bytes
  2886 ;; Hardware stack levels used: 1
  2887 ;; Hardware stack levels required when called: 4
  2888 ;; This function calls:
  2889 ;;		_INT0_SetInterruptHandler
  2890 ;;		_INT1_SetInterruptHandler
  2891 ;;		_INT2_SetInterruptHandler
  2892 ;; This function is called by:
  2893 ;;		_SYSTEM_Initialize
  2894 ;; This function uses a non-reentrant model
  2895 ;;
  2896                           
  2897                           	psect	text23
  2898   0022BA                     __ptext23:
  2899                           	callstack 0
  2900   0022BA                     _INTERRUPT_Initialize:
  2901                           	callstack 121
  2902                           
  2903                           ; BSR set to: 5
  2904                           ;mcc_generated_files/system/src/interrupt.c: 45:     INTCON0bits.IPEN = 0;
  2905                           
  2906                           ; BSR set to: 0
  2907                           ;incstack = 0
  2908   0022BA  9AD6               	bcf	214,5,c	;volatile
  2909                           
  2910                           ;mcc_generated_files/system/src/interrupt.c: 49:     (PIR1bits.INT0IF = 0);
  2911   0022BC  90B4               	bcf	180,0,c	;volatile
  2912                           
  2913                           ;mcc_generated_files/system/src/interrupt.c: 50:     (INTCON0bits.INT0EDG = 1);
  2914   0022BE  80D6               	bsf	214,0,c	;volatile
  2915                           
  2916                           ; BSR set to: 5
  2917                           ;mcc_generated_files/system/src/interrupt.c: 52:     INT0_SetInterruptHandler(INT0_Defau
      +                          ltInterruptHandler);
  2918   0022C0  0E00               	movlw	0
  2919   0022C2  6A04               	clrf	INT0_SetInterruptHandler@InterruptHandler^(0+1280),c
  2920   0022C4  6A05               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  2921   0022C6  EC76  F012         	call	_INT0_SetInterruptHandler	;wreg free
  2922                           
  2923                           ; BSR set to: 5
  2924                           ;mcc_generated_files/system/src/interrupt.c: 57:     (PIR6bits.INT1IF = 0);
  2925   0022CA  90B9               	bcf	185,0,c	;volatile
  2926                           
  2927                           ; BSR set to: 5
  2928                           ;mcc_generated_files/system/src/interrupt.c: 58:     (INTCON0bits.INT1EDG = 1);
  2929   0022CC  82D6               	bsf	214,1,c	;volatile
  2930                           
  2931                           ;mcc_generated_files/system/src/interrupt.c: 60:     INT1_SetInterruptHandler(INT1_Defau
      +                          ltInterruptHandler);
  2932   0022CE  0E00               	movlw	0
  2933   0022D0  6A04               	clrf	INT1_SetInterruptHandler@InterruptHandler^(0+1280),c
  2934   0022D2  6A05               	clrf	(INT1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  2935   0022D4  EC75  F012         	call	_INT1_SetInterruptHandler	;wreg free
  2936                           
  2937                           ; BSR set to: 5
  2938                           ;mcc_generated_files/system/src/interrupt.c: 65:     (PIR10bits.INT2IF = 0);
  2939   0022D8  90BD               	bcf	189,0,c	;volatile
  2940                           
  2941                           ; BSR set to: 5
  2942                           ;mcc_generated_files/system/src/interrupt.c: 66:     (INTCON0bits.INT2EDG = 1);
  2943   0022DA  84D6               	bsf	214,2,c	;volatile
  2944                           
  2945                           ;mcc_generated_files/system/src/interrupt.c: 68:     INT2_SetInterruptHandler(INT2_Defau
      +                          ltInterruptHandler);
  2946   0022DC  6A04               	clrf	INT2_SetInterruptHandler@InterruptHandler^(0+1280),c
  2947   0022DE  6A05               	clrf	(INT2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  2948   0022E0  0C00               	retlw	0	;wreg free
  2949   0022E2                     __end_of_INTERRUPT_Initialize:
  2950                           	callstack 0
  2951                           
  2952 ;; *************** function _INT2_SetInterruptHandler *****************
  2953 ;; Defined at:
  2954 ;;		line 167 in file "mcc_generated_files/system/src/interrupt.c"
  2955 ;; Parameters:    Size  Location     Type
  2956 ;;  InterruptHan    2    3[COMRAM] PTR FTN()void 
  2957 ;;		 -> INT2_DefaultInterruptHandler(1), 
  2958 ;; Auto vars:     Size  Location     Type
  2959 ;;		None
  2960 ;; Return value:  Size  Location     Type
  2961 ;;                  1    wreg      void 
  2962 ;; Registers used:
  2963 ;;		None
  2964 ;; Tracked objects:
  2965 ;;		On entry : 3F/5
  2966 ;;		On exit  : 3F/5
  2967 ;;		Unchanged: 3E/0
  2968 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2969 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2973 ;;Total ram usage:        2 bytes
  2974 ;; Hardware stack levels used: 1
  2975 ;; Hardware stack levels required when called: 3
  2976 ;; This function calls:
  2977 ;;		Nothing
  2978 ;; This function is called by:
  2979 ;;		_INTERRUPT_Initialize
  2980 ;; This function uses a non-reentrant model
  2981 ;;
  2982                           
  2983                           	psect	text24
  2984   0024E8                     __ptext24:
  2985                           	callstack 0
  2986   0024E8                     _INT2_SetInterruptHandler:
  2987                           	callstack 121
  2988                           
  2989                           ; BSR set to: 5
  2990                           
  2991                           ; BSR set to: 5
  2992                           ;incstack = 0
  2993   0024E8  0012               	return		;funcret
  2994   0024EA                     __end_of_INT2_SetInterruptHandler:
  2995                           	callstack 0
  2996                           
  2997 ;; *************** function _INT1_SetInterruptHandler *****************
  2998 ;; Defined at:
  2999 ;;		line 141 in file "mcc_generated_files/system/src/interrupt.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  InterruptHan    2    3[COMRAM] PTR FTN()void 
  3002 ;;		 -> INT1_DefaultInterruptHandler(1), 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;		None
  3005 ;; Return value:  Size  Location     Type
  3006 ;;                  1    wreg      void 
  3007 ;; Registers used:
  3008 ;;		None
  3009 ;; Tracked objects:
  3010 ;;		On entry : 3F/5
  3011 ;;		On exit  : 3F/5
  3012 ;;		Unchanged: 3E/0
  3013 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3014 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3017 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3018 ;;Total ram usage:        2 bytes
  3019 ;; Hardware stack levels used: 1
  3020 ;; Hardware stack levels required when called: 3
  3021 ;; This function calls:
  3022 ;;		Nothing
  3023 ;; This function is called by:
  3024 ;;		_INTERRUPT_Initialize
  3025 ;; This function uses a non-reentrant model
  3026 ;;
  3027                           
  3028                           	psect	text25
  3029   0024EA                     __ptext25:
  3030                           	callstack 0
  3031   0024EA                     _INT1_SetInterruptHandler:
  3032                           	callstack 121
  3033                           
  3034                           ; BSR set to: 5
  3035                           
  3036                           ; BSR set to: 5
  3037                           ;incstack = 0
  3038   0024EA  0012               	return		;funcret
  3039   0024EC                     __end_of_INT1_SetInterruptHandler:
  3040                           	callstack 0
  3041                           
  3042 ;; *************** function _INT0_SetInterruptHandler *****************
  3043 ;; Defined at:
  3044 ;;		line 115 in file "mcc_generated_files/system/src/interrupt.c"
  3045 ;; Parameters:    Size  Location     Type
  3046 ;;  InterruptHan    2    3[COMRAM] PTR FTN()void 
  3047 ;;		 -> INT0_DefaultInterruptHandler(1), 
  3048 ;; Auto vars:     Size  Location     Type
  3049 ;;		None
  3050 ;; Return value:  Size  Location     Type
  3051 ;;                  1    wreg      void 
  3052 ;; Registers used:
  3053 ;;		None
  3054 ;; Tracked objects:
  3055 ;;		On entry : 3F/5
  3056 ;;		On exit  : 3F/5
  3057 ;;		Unchanged: 3E/0
  3058 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3059 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3062 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3063 ;;Total ram usage:        2 bytes
  3064 ;; Hardware stack levels used: 1
  3065 ;; Hardware stack levels required when called: 3
  3066 ;; This function calls:
  3067 ;;		Nothing
  3068 ;; This function is called by:
  3069 ;;		_INTERRUPT_Initialize
  3070 ;; This function uses a non-reentrant model
  3071 ;;
  3072                           
  3073                           	psect	text26
  3074   0024EC                     __ptext26:
  3075                           	callstack 0
  3076   0024EC                     _INT0_SetInterruptHandler:
  3077                           	callstack 121
  3078                           
  3079                           ; BSR set to: 5
  3080                           
  3081                           ; BSR set to: 5
  3082                           ;incstack = 0
  3083   0024EC  0012               	return		;funcret
  3084   0024EE                     __end_of_INT0_SetInterruptHandler:
  3085                           	callstack 0
  3086                           
  3087 ;; *************** function _CLOCK_Initialize *****************
  3088 ;; Defined at:
  3089 ;;		line 37 in file "mcc_generated_files/system/src/clock.c"
  3090 ;; Parameters:    Size  Location     Type
  3091 ;;		None
  3092 ;; Auto vars:     Size  Location     Type
  3093 ;;		None
  3094 ;; Return value:  Size  Location     Type
  3095 ;;                  1    wreg      void 
  3096 ;; Registers used:
  3097 ;;		wreg, status,2
  3098 ;; Tracked objects:
  3099 ;;		On entry : 0/0
  3100 ;;		On exit  : 3F/0
  3101 ;;		Unchanged: 0/0
  3102 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;Total ram usage:        0 bytes
  3108 ;; Hardware stack levels used: 1
  3109 ;; Hardware stack levels required when called: 3
  3110 ;; This function calls:
  3111 ;;		Nothing
  3112 ;; This function is called by:
  3113 ;;		_SYSTEM_Initialize
  3114 ;; This function uses a non-reentrant model
  3115 ;;
  3116                           
  3117                           	psect	text27
  3118   0023FC                     __ptext27:
  3119                           	callstack 0
  3120   0023FC                     _CLOCK_Initialize:
  3121                           	callstack 122
  3122                           
  3123                           ;mcc_generated_files/system/src/clock.c: 41:     OSCCON1 = 0x62;
  3124                           
  3125                           ; BSR set to: 5
  3126                           ;incstack = 0
  3127   0023FC  0E62               	movlw	98
  3128   0023FE  0100               	movlb	0	; () banked
  3129   002400  6FAD               	movwf	173,b	;volatile
  3130                           
  3131                           ; BSR set to: 0
  3132                           ;mcc_generated_files/system/src/clock.c: 43:     OSCCON3 = 0x0;
  3133   002402  6BAF               	clrf	175,b	;volatile
  3134                           
  3135                           ; BSR set to: 0
  3136                           ;mcc_generated_files/system/src/clock.c: 45:     OSCEN = 0x0;
  3137   002404  6BB3               	clrf	179,b	;volatile
  3138                           
  3139                           ;mcc_generated_files/system/src/clock.c: 47:     OSCFRQ = 0x1;
  3140   002406  0E01               	movlw	1
  3141   002408  6FB1               	movwf	177,b	;volatile
  3142                           
  3143                           ; BSR set to: 0
  3144                           ;mcc_generated_files/system/src/clock.c: 49:     OSCTUNE = 0x0;
  3145   00240A  6BB0               	clrf	176,b	;volatile
  3146                           
  3147                           ; BSR set to: 0
  3148                           ;mcc_generated_files/system/src/clock.c: 51:     ACTCON = 0x0;
  3149   00240C  6BAC               	clrf	172,b	;volatile
  3150                           
  3151                           ; BSR set to: 0
  3152   00240E  0012               	return		;funcret
  3153   002410                     __end_of_CLOCK_Initialize:
  3154                           	callstack 0
  3155                           
  3156 ;; *************** function _ADCC_Initialize *****************
  3157 ;; Defined at:
  3158 ;;		line 45 in file "mcc_generated_files/adc/src/adcc.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;		None
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;		None
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, status,2
  3167 ;; Tracked objects:
  3168 ;;		On entry : 3F/4
  3169 ;;		On exit  : 3F/3
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;Total ram usage:        0 bytes
  3177 ;; Hardware stack levels used: 1
  3178 ;; Hardware stack levels required when called: 3
  3179 ;; This function calls:
  3180 ;;		Nothing
  3181 ;; This function is called by:
  3182 ;;		_SYSTEM_Initialize
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           	psect	text28
  3187   00213C                     __ptext28:
  3188                           	callstack 0
  3189   00213C                     _ADCC_Initialize:
  3190                           	callstack 122
  3191                           
  3192                           ; BSR set to: 4
  3193                           ;mcc_generated_files/adc/src/adcc.c: 49:     ADLTHL = 0x0;
  3194                           
  3195                           ; BSR set to: 0
  3196                           ;incstack = 0
  3197   00213C  0103               	movlb	3	; () banked
  3198   00213E  6BD9               	clrf	217,b	;volatile
  3199                           
  3200                           ;mcc_generated_files/adc/src/adcc.c: 51:     ADLTHH = 0x0;
  3201   002140  6BDA               	clrf	218,b	;volatile
  3202                           
  3203                           ;mcc_generated_files/adc/src/adcc.c: 53:     ADUTHL = 0x0;
  3204   002142  6BDB               	clrf	219,b	;volatile
  3205                           
  3206                           ;mcc_generated_files/adc/src/adcc.c: 55:     ADUTHH = 0x0;
  3207   002144  6BDC               	clrf	220,b	;volatile
  3208                           
  3209                           ;mcc_generated_files/adc/src/adcc.c: 57:     ADSTPTL = 0x0;
  3210   002146  6BDF               	clrf	223,b	;volatile
  3211                           
  3212                           ;mcc_generated_files/adc/src/adcc.c: 59:     ADSTPTH = 0x0;
  3213   002148  6BE0               	clrf	224,b	;volatile
  3214                           
  3215                           ;mcc_generated_files/adc/src/adcc.c: 61:     ADACCU = 0x0;
  3216   00214A  6BE5               	clrf	229,b	;volatile
  3217                           
  3218                           ;mcc_generated_files/adc/src/adcc.c: 63:     ADRPT = 0x0;
  3219   00214C  6BE7               	clrf	231,b	;volatile
  3220                           
  3221                           ;mcc_generated_files/adc/src/adcc.c: 65:     ADPCH = 0x0;
  3222   00214E  6BEC               	clrf	236,b	;volatile
  3223                           
  3224                           ; BSR set to: 3
  3225                           ;mcc_generated_files/adc/src/adcc.c: 67:     ADACQL = 0x1;
  3226   002150  0E01               	movlw	1
  3227   002152  6FEE               	movwf	238,b	;volatile
  3228                           
  3229                           ; BSR set to: 3
  3230                           ;mcc_generated_files/adc/src/adcc.c: 69:     ADACQH = 0x0;
  3231   002154  6BEF               	clrf	239,b	;volatile
  3232                           
  3233                           ; BSR set to: 3
  3234                           ;mcc_generated_files/adc/src/adcc.c: 71:     ADCAP = 0x0;
  3235   002156  6BF0               	clrf	240,b	;volatile
  3236                           
  3237                           ; BSR set to: 3
  3238                           ;mcc_generated_files/adc/src/adcc.c: 73:     ADPREL = 0x0;
  3239   002158  6BF1               	clrf	241,b	;volatile
  3240                           
  3241                           ; BSR set to: 3
  3242                           ;mcc_generated_files/adc/src/adcc.c: 75:     ADPREH = 0x0;
  3243   00215A  6BF2               	clrf	242,b	;volatile
  3244                           
  3245                           ; BSR set to: 3
  3246                           ;mcc_generated_files/adc/src/adcc.c: 77:     ADCON1 = 0x0;
  3247   00215C  6BF4               	clrf	244,b	;volatile
  3248                           
  3249                           ;mcc_generated_files/adc/src/adcc.c: 79:     ADCON2 = 0x10;
  3250   00215E  0E10               	movlw	16
  3251   002160  6FF5               	movwf	245,b	;volatile
  3252                           
  3253                           ; BSR set to: 3
  3254                           ;mcc_generated_files/adc/src/adcc.c: 81:     ADCON3 = 0x0;
  3255   002162  6BF6               	clrf	246,b	;volatile
  3256                           
  3257                           ; BSR set to: 3
  3258                           ;mcc_generated_files/adc/src/adcc.c: 83:     ADSTAT = 0x0;
  3259   002164  6BF7               	clrf	247,b	;volatile
  3260                           
  3261                           ; BSR set to: 3
  3262                           ;mcc_generated_files/adc/src/adcc.c: 85:     ADREF = 0x0;
  3263   002166  6BF8               	clrf	248,b	;volatile
  3264                           
  3265                           ; BSR set to: 3
  3266                           ;mcc_generated_files/adc/src/adcc.c: 87:     ADACT = 0x0;
  3267   002168  6BF9               	clrf	249,b	;volatile
  3268                           
  3269                           ; BSR set to: 3
  3270                           ;mcc_generated_files/adc/src/adcc.c: 89:     ADCLK = 0x0;
  3271   00216A  6BFA               	clrf	250,b	;volatile
  3272                           
  3273                           ;mcc_generated_files/adc/src/adcc.c: 91:     ADCON0 = 0x80;
  3274   00216C  0E80               	movlw	128
  3275   00216E  6FF3               	movwf	243,b	;volatile
  3276                           
  3277                           ; BSR set to: 3
  3278                           ;mcc_generated_files/adc/src/adcc.c: 94:     PIR1bits.ADIF = 0;
  3279   002170  94B4               	bcf	180,2,c	;volatile
  3280                           
  3281                           ; BSR set to: 3
  3282                           ;mcc_generated_files/adc/src/adcc.c: 97:     PIR2bits.ADTIF = 0;
  3283   002172  90B5               	bcf	181,0,c	;volatile
  3284                           
  3285                           ; BSR set to: 3
  3286   002174  0C80               	retlw	128	;funcret
  3287   002176                     __end_of_ADCC_Initialize:
  3288                           	callstack 0
  3289                           
  3290 ;; *************** function _Rotate *****************
  3291 ;; Defined at:
  3292 ;;		line 54 in file "Labs/Lab03_Rotate/Rotate.c"
  3293 ;; Parameters:    Size  Location     Type
  3294 ;;		None
  3295 ;; Auto vars:     Size  Location     Type
  3296 ;;		None
  3297 ;; Return value:  Size  Location     Type
  3298 ;;                  1    wreg      void 
  3299 ;; Registers used:
  3300 ;;		wreg, status,2, status,0
  3301 ;; Tracked objects:
  3302 ;;		On entry : 0/5
  3303 ;;		On exit  : 0/0
  3304 ;;		Unchanged: 0/0
  3305 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3308 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3309 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3310 ;;Total ram usage:        1 bytes
  3311 ;; Hardware stack levels used: 1
  3312 ;; Hardware stack levels required when called: 3
  3313 ;; This function calls:
  3314 ;;		Nothing
  3315 ;; This function is called by:
  3316 ;;		_main
  3317 ;; This function uses a non-reentrant model
  3318 ;;
  3319                           
  3320                           	psect	text29
  3321   001B2C                     __ptext29:
  3322                           	callstack 0
  3323   001B2C                     _Rotate:
  3324                           	callstack 123
  3325                           
  3326                           ;Labs/Lab03_Rotate/Rotate.c: 55:     if (labState == 0) {
  3327                           
  3328                           ; BSR set to: 3
  3329                           ;incstack = 0
  3330   001B2C  5059               	movf	_labState^(0+1280),w,c
  3331   001B2E  E106               	bnz	l2794
  3332                           
  3333                           ;Labs/Lab03_Rotate/Rotate.c: 56:         do { LATA = 0; LATCbits.LATC5 = 0; } while(0);
  3334   001B30  6ABE               	clrf	190,c	;volatile
  3335   001B32  9AC0               	bcf	192,5,c	;volatile
  3336                           
  3337                           ;Labs/Lab03_Rotate/Rotate.c: 57:         do { LATAbits.LATA5 = 1; } while(0);
  3338   001B34  8ABE               	bsf	190,5,c	;volatile
  3339                           
  3340                           ;Labs/Lab03_Rotate/Rotate.c: 60:         rotateReg = 1;
  3341   001B36  0E01               	movlw	1
  3342   001B38  6E56               	movwf	_rotateReg^(0+1280),c
  3343                           
  3344                           ;Labs/Lab03_Rotate/Rotate.c: 62:         labState = 1;
  3345   001B3A  6E59               	movwf	_labState^(0+1280),c
  3346   001B3C                     l2794:
  3347                           
  3348                           ;Labs/Lab03_Rotate/Rotate.c: 65:     if (labState == 1) {
  3349   001B3C  0459               	decf	_labState^(0+1280),w,c
  3350   001B3E  E145               	bnz	l90
  3351                           
  3352                           ;Labs/Lab03_Rotate/Rotate.c: 66:         _delay((unsigned long)((500)*(500000/4000.0)));
  3353   001B40  0E52               	movlw	82
  3354   001B42  6E04               	movwf	??_Rotate^(0+1280),c
  3355   001B44  0E2A               	movlw	42
  3356   001B46                     u2037:
  3357   001B46  2EE8               	decfsz	wreg,f,c
  3358   001B48  D7FE               	bra	u2037
  3359   001B4A  2E04               	decfsz	??_Rotate^(0+1280),f,c
  3360   001B4C  D7FC               	bra	u2037
  3361                           
  3362                           ;Labs/Lab03_Rotate/Rotate.c: 68:         rotateReg <<= 1;
  3363   001B4E  90D8               	bcf	status,0,c
  3364   001B50  3656               	rlcf	_rotateReg^(0+1280),f,c
  3365                           
  3366                           ;Labs/Lab03_Rotate/Rotate.c: 71:         if (rotateReg == 16)
  3367   001B52  0E10               	movlw	16
  3368   001B54  1856               	xorwf	_rotateReg^(0+1280),w,c
  3369   001B56  E102               	bnz	l2804
  3370                           
  3371                           ;Labs/Lab03_Rotate/Rotate.c: 72:             rotateReg = 1;
  3372   001B58  0E01               	movlw	1
  3373   001B5A  6E56               	movwf	_rotateReg^(0+1280),c
  3374   001B5C                     l2804:
  3375                           
  3376                           ;Labs/Lab03_Rotate/Rotate.c: 76:         LATAbits.LATA5 = rotateReg & 1;
  3377   001B5C  C556  F504         	movff	_rotateReg,??_Rotate
  3378   001B60  0E01               	movlw	1
  3379   001B62  1604               	andwf	??_Rotate^(0+1280),f,c
  3380   001B64  3A04               	swapf	??_Rotate^(0+1280),f,c
  3381   001B66  4604               	rlncf	??_Rotate^(0+1280),f,c
  3382   001B68  50BE               	movf	190,w,c	;volatile
  3383   001B6A  1804               	xorwf	??_Rotate^(0+1280),w,c
  3384   001B6C  0BDF               	andlw	-33
  3385   001B6E  1804               	xorwf	??_Rotate^(0+1280),w,c
  3386   001B70  6EBE               	movwf	190,c	;volatile
  3387                           
  3388                           ;Labs/Lab03_Rotate/Rotate.c: 77:         LATAbits.LATA1 = (rotateReg & 2) >> 1;
  3389   001B72  C556  F504         	movff	_rotateReg,??_Rotate
  3390   001B76  90D8               	bcf	status,0,c
  3391   001B78  3204               	rrcf	??_Rotate^(0+1280),f,c
  3392   001B7A  0E01               	movlw	1
  3393   001B7C  1604               	andwf	??_Rotate^(0+1280),f,c
  3394   001B7E  4604               	rlncf	??_Rotate^(0+1280),f,c
  3395   001B80  50BE               	movf	190,w,c	;volatile
  3396   001B82  1804               	xorwf	??_Rotate^(0+1280),w,c
  3397   001B84  0BFD               	andlw	-3
  3398   001B86  1804               	xorwf	??_Rotate^(0+1280),w,c
  3399   001B88  6EBE               	movwf	190,c	;volatile
  3400                           
  3401                           ;Labs/Lab03_Rotate/Rotate.c: 78:         LATAbits.LATA2 = (rotateReg & 4) >> 2;
  3402   001B8A  C556  F504         	movff	_rotateReg,??_Rotate
  3403   001B8E  90D8               	bcf	status,0,c
  3404   001B90  3204               	rrcf	??_Rotate^(0+1280),f,c
  3405   001B92  90D8               	bcf	status,0,c
  3406   001B94  3204               	rrcf	??_Rotate^(0+1280),f,c
  3407   001B96  0E01               	movlw	1
  3408   001B98  1604               	andwf	??_Rotate^(0+1280),f,c
  3409   001B9A  4604               	rlncf	??_Rotate^(0+1280),f,c
  3410   001B9C  4604               	rlncf	??_Rotate^(0+1280),f,c
  3411   001B9E  50BE               	movf	190,w,c	;volatile
  3412   001BA0  1804               	xorwf	??_Rotate^(0+1280),w,c
  3413   001BA2  0BFB               	andlw	-5
  3414   001BA4  1804               	xorwf	??_Rotate^(0+1280),w,c
  3415   001BA6  6EBE               	movwf	190,c	;volatile
  3416                           
  3417                           ;Labs/Lab03_Rotate/Rotate.c: 79:         LATCbits.LATC5 = (rotateReg & 8) >> 3;
  3418   001BA8  C556  F504         	movff	_rotateReg,??_Rotate
  3419   001BAC  90D8               	bcf	status,0,c
  3420   001BAE  3204               	rrcf	??_Rotate^(0+1280),f,c
  3421   001BB0  90D8               	bcf	status,0,c
  3422   001BB2  3204               	rrcf	??_Rotate^(0+1280),f,c
  3423   001BB4  90D8               	bcf	status,0,c
  3424   001BB6  3204               	rrcf	??_Rotate^(0+1280),f,c
  3425   001BB8  0E01               	movlw	1
  3426   001BBA  1604               	andwf	??_Rotate^(0+1280),f,c
  3427   001BBC  3A04               	swapf	??_Rotate^(0+1280),f,c
  3428   001BBE  4604               	rlncf	??_Rotate^(0+1280),f,c
  3429   001BC0  50C0               	movf	192,w,c	;volatile
  3430   001BC2  1804               	xorwf	??_Rotate^(0+1280),w,c
  3431   001BC4  0BDF               	andlw	-33
  3432   001BC6  1804               	xorwf	??_Rotate^(0+1280),w,c
  3433   001BC8  6EC0               	movwf	192,c	;volatile
  3434   001BCA                     l90:
  3435                           
  3436                           ;Labs/Lab03_Rotate/Rotate.c: 82:     if (switchEvent) {
  3437   001BCA  505A               	movf	_switchEvent^(0+1280),w,c
  3438   001BCC  A4D8               	btfss	status,2,c
  3439                           
  3440                           ;Labs/Lab03_Rotate/Rotate.c: 83:         labState = 0;
  3441   001BCE  6A59               	clrf	_labState^(0+1280),c
  3442   001BD0  0012               	return		;funcret
  3443   001BD2                     __end_of_Rotate:
  3444                           	callstack 0
  3445                           
  3446 ;; *************** function _PWM *****************
  3447 ;; Defined at:
  3448 ;;		line 58 in file "Labs/Lab06_PulseWidthModulation/PWM.c"
  3449 ;; Parameters:    Size  Location     Type
  3450 ;;		None
  3451 ;; Auto vars:     Size  Location     Type
  3452 ;;		None
  3453 ;; Return value:  Size  Location     Type
  3454 ;;                  1    wreg      void 
  3455 ;; Registers used:
  3456 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3457 ;; Tracked objects:
  3458 ;;		On entry : 0/5
  3459 ;;		On exit  : 0/0
  3460 ;;		Unchanged: 0/0
  3461 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3466 ;;Total ram usage:        0 bytes
  3467 ;; Hardware stack levels used: 1
  3468 ;; Hardware stack levels required when called: 12
  3469 ;; This function calls:
  3470 ;;		_ADCC_GetSingleConversion
  3471 ;;		_PWM1_16BIT_Disable
  3472 ;;		_PWM1_16BIT_Enable
  3473 ;;		_PWM1_16BIT_LoadBufferRegisters
  3474 ;;		_PWM1_16BIT_SetSlice1Output1DutyCycleRegister
  3475 ;;		_TMR2_Start
  3476 ;;		_TMR2_Stop
  3477 ;;		_printf
  3478 ;; This function is called by:
  3479 ;;		_main
  3480 ;; This function uses a non-reentrant model
  3481 ;;
  3482                           
  3483                           	psect	text30
  3484   001F60                     __ptext30:
  3485                           	callstack 0
  3486   001F60                     _PWM:
  3487                           	callstack 114
  3488                           
  3489                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 59:     if (labState == 0) {
  3490                           
  3491                           ;incstack = 0
  3492   001F60  5059               	movf	_labState^(0+1280),w,c
  3493   001F62  E10B               	bnz	l3664
  3494                           
  3495                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 60:         do { LATA = 0; LATCbits.LATC5 = 0; }
      +                           while(0);
  3496   001F64  6ABE               	clrf	190,c	;volatile
  3497   001F66  9AC0               	bcf	192,5,c	;volatile
  3498                           
  3499                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 61:         PWM1_16BIT_Enable();
  3500   001F68  EC6C  F012         	call	_PWM1_16BIT_Enable	;wreg free
  3501   001F6C  0E0A               	movlw	10
  3502   001F6E  0102               	movlb	2	; () banked
  3503   001F70  6F16               	movwf	22,b	;volatile
  3504                           
  3505                           ; BSR set to: 2
  3506                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 64:         TMR2_Start();
  3507   001F72  EC5C  F012         	call	_TMR2_Start	;wreg free
  3508                           
  3509                           ; BSR set to: 3
  3510                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 66:         labState = 1;
  3511   001F76  0E01               	movlw	1
  3512   001F78  6E59               	movwf	_labState^(0+1280),c
  3513   001F7A                     l3664:
  3514                           
  3515                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 69:     if (labState == 1) {
  3516   001F7A  0459               	decf	_labState^(0+1280),w,c
  3517   001F7C  E117               	bnz	l3674
  3518                           
  3519                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 70:         adcResult = ADCC_GetSingleConversion
      +                          (POT_CHANNEL);
  3520   001F7E  0E10               	movlw	16
  3521   001F80  EC97  F011         	call	_ADCC_GetSingleConversion
  3522   001F84  C504  F54B         	movff	?_ADCC_GetSingleConversion,_adcResult@PWM$F336
  3523   001F88  C505  F54C         	movff	?_ADCC_GetSingleConversion+1,_adcResult@PWM$F336+1
  3524                           
  3525                           ; BSR set to: 3
  3526                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 72:         printf("ADC Result: %d\n\r", adcResu
      +                          lt);
  3527   001F8C  0E01               	movlw	low STR_1
  3528   001F8E  6E41               	movwf	printf@fmt^(0+1280),c
  3529   001F90  C54B  F542         	movff	_adcResult@PWM$F336,?_printf+1
  3530   001F94  C54C  F543         	movff	_adcResult@PWM$F336+1,?_printf+2
  3531   001F98  ECD7  F011         	call	_printf	;wreg free
  3532                           
  3533                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 73:         PWM1_16BIT_SetSlice1Output1DutyCycle
      +                          Register(adcResult);
  3534   001F9C  C54B  F504         	movff	_adcResult@PWM$F336,PWM1_16BIT_SetSlice1Output1DutyCycleRegister@registerValue
  3535   001FA0  C54C  F505         	movff	_adcResult@PWM$F336+1,PWM1_16BIT_SetSlice1Output1DutyCycleRegister@registerValue+
      +                          1
  3536   001FA4  EC43  F012         	call	_PWM1_16BIT_SetSlice1Output1DutyCycleRegister	;wreg free
  3537                           
  3538                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 74:         PWM1_16BIT_LoadBufferRegisters();
  3539   001FA8  EC6A  F012         	call	_PWM1_16BIT_LoadBufferRegisters	;wreg free
  3540   001FAC                     l3674:
  3541                           
  3542                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 77:     if (switchEvent) {
  3543   001FAC  505A               	movf	_switchEvent^(0+1280),w,c
  3544   001FAE  B4D8               	btfsc	status,2,c
  3545   001FB0  0012               	return	
  3546                           
  3547                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 78:         TMR2_Stop();
  3548   001FB2  EC59  F012         	call	_TMR2_Stop	;wreg free
  3549                           
  3550                           ; BSR set to: 3
  3551                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 79:         PWM1_16BIT_Disable();
  3552   001FB6  EC6E  F012         	call	_PWM1_16BIT_Disable	;wreg free
  3553                           
  3554                           ; BSR set to: 3
  3555   001FBA  0102               	movlb	2	; () banked
  3556   001FBC  6B16               	clrf	22,b	;volatile
  3557                           
  3558                           ; BSR set to: 2
  3559                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 81:         labState = 0;
  3560   001FBE  6A59               	clrf	_labState^(0+1280),c
  3561   001FC0  0012               	return		;funcret
  3562   001FC2                     __end_of_PWM:
  3563                           	callstack 0
  3564                           
  3565 ;; *************** function _TMR2_Stop *****************
  3566 ;; Defined at:
  3567 ;;		line 98 in file "mcc_generated_files/timer/src/tmr2.c"
  3568 ;; Parameters:    Size  Location     Type
  3569 ;;		None
  3570 ;; Auto vars:     Size  Location     Type
  3571 ;;		None
  3572 ;; Return value:  Size  Location     Type
  3573 ;;                  1    wreg      void 
  3574 ;; Registers used:
  3575 ;;		None
  3576 ;; Tracked objects:
  3577 ;;		On entry : 0/5
  3578 ;;		On exit  : 3F/3
  3579 ;;		Unchanged: 0/0
  3580 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3584 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3585 ;;Total ram usage:        0 bytes
  3586 ;; Hardware stack levels used: 1
  3587 ;; Hardware stack levels required when called: 3
  3588 ;; This function calls:
  3589 ;;		Nothing
  3590 ;; This function is called by:
  3591 ;;		_PWM
  3592 ;; This function uses a non-reentrant model
  3593 ;;
  3594                           
  3595                           	psect	text31
  3596   0024B2                     __ptext31:
  3597                           	callstack 0
  3598   0024B2                     _TMR2_Stop:
  3599                           	callstack 122
  3600                           
  3601                           ;mcc_generated_files/timer/src/tmr2.c: 101:     T2CONbits.TMR2ON = 0;
  3602                           
  3603                           ;incstack = 0
  3604   0024B2  0103               	movlb	3	; () banked
  3605   0024B4  9F1E               	bcf	30,7,b	;volatile
  3606                           
  3607                           ; BSR set to: 3
  3608   0024B6  0012               	return		;funcret
  3609   0024B8                     __end_of_TMR2_Stop:
  3610                           	callstack 0
  3611                           
  3612 ;; *************** function _TMR2_Start *****************
  3613 ;; Defined at:
  3614 ;;		line 92 in file "mcc_generated_files/timer/src/tmr2.c"
  3615 ;; Parameters:    Size  Location     Type
  3616 ;;		None
  3617 ;; Auto vars:     Size  Location     Type
  3618 ;;		None
  3619 ;; Return value:  Size  Location     Type
  3620 ;;                  1    wreg      void 
  3621 ;; Registers used:
  3622 ;;		None
  3623 ;; Tracked objects:
  3624 ;;		On entry : 3F/2
  3625 ;;		On exit  : 3F/3
  3626 ;;		Unchanged: 0/0
  3627 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3629 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3631 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3632 ;;Total ram usage:        0 bytes
  3633 ;; Hardware stack levels used: 1
  3634 ;; Hardware stack levels required when called: 3
  3635 ;; This function calls:
  3636 ;;		Nothing
  3637 ;; This function is called by:
  3638 ;;		_PWM
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           	psect	text32
  3643   0024B8                     __ptext32:
  3644                           	callstack 0
  3645   0024B8                     _TMR2_Start:
  3646                           	callstack 122
  3647                           
  3648                           ; BSR set to: 2
  3649                           ;mcc_generated_files/timer/src/tmr2.c: 95:     T2CONbits.TMR2ON = 1;
  3650                           
  3651                           ; BSR set to: 3
  3652                           ;incstack = 0
  3653   0024B8  0103               	movlb	3	; () banked
  3654   0024BA  8F1E               	bsf	30,7,b	;volatile
  3655                           
  3656                           ; BSR set to: 3
  3657   0024BC  0012               	return		;funcret
  3658   0024BE                     __end_of_TMR2_Start:
  3659                           	callstack 0
  3660                           
  3661 ;; *************** function _PWM1_16BIT_SetSlice1Output1DutyCycleRegister *****************
  3662 ;; Defined at:
  3663 ;;		line 137 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  registerValu    2    3[COMRAM] unsigned short 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;		None
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  1    wreg      void 
  3670 ;; Registers used:
  3671 ;;		None
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/3
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3677 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3681 ;;Total ram usage:        2 bytes
  3682 ;; Hardware stack levels used: 1
  3683 ;; Hardware stack levels required when called: 3
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_PWM
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           	psect	text33
  3692   002486                     __ptext33:
  3693                           	callstack 0
  3694   002486                     _PWM1_16BIT_SetSlice1Output1DutyCycleRegister:
  3695                           	callstack 122
  3696                           
  3697                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 137: void PWM1_16BIT_SetSlice1Output1DutyCycl
      +                          eRegister(uint16_t registerValue);mcc_generated_files/pwm/src/pwm1_16bit.c: 138: {;mcc_g
      +                          enerated_files/pwm/src/pwm1_16bit.c: 139:     PWM1S1P1L = (uint8_t)(registerValue);
  3698                           
  3699                           ; BSR set to: 3
  3700                           ;incstack = 0
  3701   002486  C504  F46B         	movff	PWM1_16BIT_SetSlice1Output1DutyCycleRegister@registerValue,1131	;volatile
  3702                           
  3703                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 140:     PWM1S1P1H = (uint8_t)(registerValue 
      +                          >> 8);
  3704   00248A  C505  F46C         	movff	PWM1_16BIT_SetSlice1Output1DutyCycleRegister@registerValue+1,1132	;volatile
  3705   00248E  0012               	return		;funcret
  3706   002490                     __end_of_PWM1_16BIT_SetSlice1Output1DutyCycleRegister:
  3707                           	callstack 0
  3708                           
  3709 ;; *************** function _PWM1_16BIT_LoadBufferRegisters *****************
  3710 ;; Defined at:
  3711 ;;		line 149 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;		None
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;		None
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1    wreg      void 
  3718 ;; Registers used:
  3719 ;;		None
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/3
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;Total ram usage:        0 bytes
  3730 ;; Hardware stack levels used: 1
  3731 ;; Hardware stack levels required when called: 3
  3732 ;; This function calls:
  3733 ;;		Nothing
  3734 ;; This function is called by:
  3735 ;;		_PWM
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           	psect	text34
  3740   0024D4                     __ptext34:
  3741                           	callstack 0
  3742   0024D4                     _PWM1_16BIT_LoadBufferRegisters:
  3743                           	callstack 122
  3744                           
  3745                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 152:     PWM1CONbits.LD = 1;
  3746                           
  3747                           ;incstack = 0
  3748   0024D4  8469               	bsf	105,2,c	;volatile
  3749   0024D6  0012               	return		;funcret
  3750   0024D8                     __end_of_PWM1_16BIT_LoadBufferRegisters:
  3751                           	callstack 0
  3752                           
  3753 ;; *************** function _PWM1_16BIT_Enable *****************
  3754 ;; Defined at:
  3755 ;;		line 121 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
  3756 ;; Parameters:    Size  Location     Type
  3757 ;;		None
  3758 ;; Auto vars:     Size  Location     Type
  3759 ;;		None
  3760 ;; Return value:  Size  Location     Type
  3761 ;;                  1    wreg      void 
  3762 ;; Registers used:
  3763 ;;		status,2, status,0
  3764 ;; Tracked objects:
  3765 ;;		On entry : 0/5
  3766 ;;		On exit  : 0/0
  3767 ;;		Unchanged: 0/0
  3768 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3773 ;;Total ram usage:        0 bytes
  3774 ;; Hardware stack levels used: 1
  3775 ;; Hardware stack levels required when called: 3
  3776 ;; This function calls:
  3777 ;;		Nothing
  3778 ;; This function is called by:
  3779 ;;		_PWM
  3780 ;; This function uses a non-reentrant model
  3781 ;;
  3782                           
  3783                           	psect	text35
  3784   0024D8                     __ptext35:
  3785                           	callstack 0
  3786   0024D8                     _PWM1_16BIT_Enable:
  3787                           	callstack 122
  3788                           
  3789                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 123:     PWM1CON |= 0x80;
  3790                           
  3791                           ;incstack = 0
  3792   0024D8  8E69               	bsf	105,7,c	;volatile
  3793   0024DA  0012               	return		;funcret
  3794   0024DC                     __end_of_PWM1_16BIT_Enable:
  3795                           	callstack 0
  3796                           
  3797 ;; *************** function _PWM1_16BIT_Disable *****************
  3798 ;; Defined at:
  3799 ;;		line 126 in file "mcc_generated_files/pwm/src/pwm1_16bit.c"
  3800 ;; Parameters:    Size  Location     Type
  3801 ;;		None
  3802 ;; Auto vars:     Size  Location     Type
  3803 ;;		None
  3804 ;; Return value:  Size  Location     Type
  3805 ;;                  1    wreg      void 
  3806 ;; Registers used:
  3807 ;;		status,2, status,0
  3808 ;; Tracked objects:
  3809 ;;		On entry : 3F/3
  3810 ;;		On exit  : 3F/3
  3811 ;;		Unchanged: 3E/0
  3812 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3817 ;;Total ram usage:        0 bytes
  3818 ;; Hardware stack levels used: 1
  3819 ;; Hardware stack levels required when called: 3
  3820 ;; This function calls:
  3821 ;;		Nothing
  3822 ;; This function is called by:
  3823 ;;		_PWM
  3824 ;; This function uses a non-reentrant model
  3825 ;;
  3826                           
  3827                           	psect	text36
  3828   0024DC                     __ptext36:
  3829                           	callstack 0
  3830   0024DC                     _PWM1_16BIT_Disable:
  3831                           	callstack 122
  3832                           
  3833                           ; BSR set to: 3
  3834                           ;mcc_generated_files/pwm/src/pwm1_16bit.c: 128:     PWM1CON &= (~0x80);
  3835                           
  3836                           ;incstack = 0
  3837   0024DC  9E69               	bcf	105,7,c	;volatile
  3838                           
  3839                           ; BSR set to: 3
  3840   0024DE  0012               	return		;funcret
  3841   0024E0                     __end_of_PWM1_16BIT_Disable:
  3842                           	callstack 0
  3843                           
  3844 ;; *************** function _Interrupt *****************
  3845 ;; Defined at:
  3846 ;;		line 59 in file "Labs/Lab08_Interrupts/Interrupt.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;		None
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;		None
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  1    wreg      void 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0, cstack
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/5
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;Total ram usage:        0 bytes
  3865 ;; Hardware stack levels used: 1
  3866 ;; Hardware stack levels required when called: 4
  3867 ;; This function calls:
  3868 ;;		_Timer0_OverflowCallbackRegister
  3869 ;; This function is called by:
  3870 ;;		_main
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text37
  3875   0021A8                     __ptext37:
  3876                           	callstack 0
  3877   0021A8                     _Interrupt:
  3878                           	callstack 122
  3879                           
  3880                           ;Labs/Lab08_Interrupts/Interrupt.c: 61:     if (labState == 0) {
  3881                           
  3882                           ; BSR set to: 3
  3883                           ;incstack = 0
  3884   0021A8  5059               	movf	_labState^(0+1280),w,c
  3885   0021AA  E110               	bnz	l3732
  3886                           
  3887                           ;Labs/Lab08_Interrupts/Interrupt.c: 62:         do { LATA = 0; LATCbits.LATC5 = 0; } whi
      +                          le(0);
  3888   0021AC  6ABE               	clrf	190,c	;volatile
  3889   0021AE  9AC0               	bcf	192,5,c	;volatile
  3890                           
  3891                           ;Labs/Lab08_Interrupts/Interrupt.c: 63:         do { LATAbits.LATA5 = 1; } while(0);
  3892   0021B0  8ABE               	bsf	190,5,c	;volatile
  3893                           
  3894                           ;Labs/Lab08_Interrupts/Interrupt.c: 65:         rotateReg = 1;
  3895   0021B2  0E01               	movlw	1
  3896   0021B4  6E51               	movwf	_rotateReg@Interrupt$F496^(0+1280),c
  3897   0021B6  9EB6               	bcf	182,7,c	;volatile
  3898                           
  3899                           ;Labs/Lab08_Interrupts/Interrupt.c: 68:         (INTCON0bits.GIE = 1);
  3900   0021B8  8ED6               	bsf	214,7,c	;volatile
  3901   0021BA  8EAB               	bsf	1195,7,c	;volatile
  3902                           
  3903                           ;Labs/Lab08_Interrupts/Interrupt.c: 71:         Timer0_OverflowCallbackRegister(LAB_ISR)
      +                          ;
  3904   0021BC  0E9C               	movlw	low _LAB_ISR
  3905   0021BE  6E04               	movwf	Timer0_OverflowCallbackRegister@CallbackHandler^(0+1280),c
  3906   0021C0  0E1D               	movlw	high _LAB_ISR
  3907   0021C2  6E05               	movwf	(Timer0_OverflowCallbackRegister@CallbackHandler+1)^(0+1280),c
  3908   0021C4  EC48  F012         	call	_Timer0_OverflowCallbackRegister	;wreg free
  3909                           
  3910                           ;Labs/Lab08_Interrupts/Interrupt.c: 73:         labState = 1;
  3911   0021C8  0E01               	movlw	1
  3912   0021CA  6E59               	movwf	_labState^(0+1280),c
  3913   0021CC                     l3732:
  3914                           
  3915                           ;Labs/Lab08_Interrupts/Interrupt.c: 80:     if (switchEvent) {
  3916   0021CC  505A               	movf	_switchEvent^(0+1280),w,c
  3917   0021CE  B4D8               	btfsc	status,2,c
  3918   0021D0  0012               	return	
  3919                           
  3920                           ;Labs/Lab08_Interrupts/Interrupt.c: 81:         do { TMR0IE = 0; } while(0);
  3921   0021D2  9EAB               	bcf	1195,7,c	;volatile
  3922                           
  3923                           ;Labs/Lab08_Interrupts/Interrupt.c: 83:         (INTCON0bits.GIE = 0);
  3924   0021D4  9ED6               	bcf	214,7,c	;volatile
  3925                           
  3926                           ;Labs/Lab08_Interrupts/Interrupt.c: 85:         labState = 0;
  3927   0021D6  6A59               	clrf	_labState^(0+1280),c
  3928   0021D8  0012               	return		;funcret
  3929   0021DA                     __end_of_Interrupt:
  3930                           	callstack 0
  3931                           
  3932 ;; *************** function _Timer0_OverflowCallbackRegister *****************
  3933 ;; Defined at:
  3934 ;;		line 116 in file "mcc_generated_files/timer/src/tmr0.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;  CallbackHand    2    3[COMRAM] PTR FTN()void 
  3937 ;;		 -> Timer0_DefaultOverflowCallback(1), TMR2_DefaultOverflowCallback(1), Timer1_DefaultOverflowCallback(1), LAB_ISR(1
      +), 
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;		None
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  1    wreg      void 
  3942 ;; Registers used:
  3943 ;;		wreg, status,2, status,0
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/3
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3949 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3952 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3953 ;;Total ram usage:        2 bytes
  3954 ;; Hardware stack levels used: 1
  3955 ;; Hardware stack levels required when called: 3
  3956 ;; This function calls:
  3957 ;;		Nothing
  3958 ;; This function is called by:
  3959 ;;		_Interrupt
  3960 ;;		_Timer0_Initialize
  3961 ;; This function uses a non-reentrant model
  3962 ;;
  3963                           
  3964                           	psect	text38
  3965   002490                     __ptext38:
  3966                           	callstack 0
  3967   002490                     _Timer0_OverflowCallbackRegister:
  3968                           	callstack 121
  3969                           
  3970                           ;mcc_generated_files/timer/src/tmr0.c: 116: void Timer0_OverflowCallbackRegister(void (*
      +                           CallbackHandler)(void));mcc_generated_files/timer/src/tmr0.c: 117: {;mcc_generated_file
      +                          s/timer/src/tmr0.c: 118:     Timer0_OverflowCallback = CallbackHandler;
  3971                           
  3972                           ;incstack = 0
  3973   002490  C504  F588         	movff	Timer0_OverflowCallbackRegister@CallbackHandler,_Timer0_OverflowCallback
  3974   002494  C505  F589         	movff	Timer0_OverflowCallbackRegister@CallbackHandler+1,_Timer0_OverflowCallback+1
  3975   002498  0012               	return		;funcret
  3976   00249A                     __end_of_Timer0_OverflowCallbackRegister:
  3977                           	callstack 0
  3978                           
  3979 ;; *************** function _HelloWorld *****************
  3980 ;; Defined at:
  3981 ;;		line 50 in file "Labs/Lab01_HelloWorld/HelloWorld.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;		None
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;		None
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  1    wreg      void 
  3988 ;; Registers used:
  3989 ;;		wreg, status,2, status,0
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/5
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3995 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3998 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3999 ;;Total ram usage:        0 bytes
  4000 ;; Hardware stack levels used: 1
  4001 ;; Hardware stack levels required when called: 3
  4002 ;; This function calls:
  4003 ;;		Nothing
  4004 ;; This function is called by:
  4005 ;;		_main
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           
  4009                           	psect	text39
  4010   0023CA                     __ptext39:
  4011                           	callstack 0
  4012   0023CA                     _HelloWorld:
  4013                           	callstack 123
  4014                           
  4015                           ;Labs/Lab01_HelloWorld/HelloWorld.c: 51:     if (labState == 0) {
  4016                           
  4017                           ;incstack = 0
  4018   0023CA  5059               	movf	_labState^(0+1280),w,c
  4019   0023CC  E104               	bnz	l2758
  4020                           
  4021                           ;Labs/Lab01_HelloWorld/HelloWorld.c: 52:         do { LATA = 0; LATCbits.LATC5 = 0; } wh
      +                          ile(0);
  4022   0023CE  6ABE               	clrf	190,c	;volatile
  4023   0023D0  9AC0               	bcf	192,5,c	;volatile
  4024                           
  4025                           ;Labs/Lab01_HelloWorld/HelloWorld.c: 54:         labState = 1;
  4026   0023D2  0E01               	movlw	1
  4027   0023D4  6E59               	movwf	_labState^(0+1280),c
  4028   0023D6                     l2758:
  4029                           
  4030                           ;Labs/Lab01_HelloWorld/HelloWorld.c: 57:     if (labState == 1) {
  4031   0023D6  0459               	decf	_labState^(0+1280),w,c
  4032   0023D8  E101               	bnz	l2760
  4033                           
  4034                           ;Labs/Lab01_HelloWorld/HelloWorld.c: 58:         do { LATAbits.LATA5 = 1; } while(0);
  4035   0023DA  8ABE               	bsf	190,5,c	;volatile
  4036   0023DC                     l2760:
  4037                           
  4038                           ;Labs/Lab01_HelloWorld/HelloWorld.c: 61:     if (switchEvent) {
  4039   0023DC  505A               	movf	_switchEvent^(0+1280),w,c
  4040   0023DE  A4D8               	btfss	status,2,c
  4041                           
  4042                           ;Labs/Lab01_HelloWorld/HelloWorld.c: 62:         labState = 0;
  4043   0023E0  6A59               	clrf	_labState^(0+1280),c
  4044   0023E2  0012               	return		;funcret
  4045   0023E4                     __end_of_HelloWorld:
  4046                           	callstack 0
  4047                           
  4048 ;; *************** function _EEPROM *****************
  4049 ;; Defined at:
  4050 ;;		line 58 in file "Labs/Lab10_EEPROM/EEPROM.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;		None
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;		None
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  1    wreg      void 
  4057 ;; Registers used:
  4058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/5
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4066 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;Total ram usage:        1 bytes
  4069 ;; Hardware stack levels used: 1
  4070 ;; Hardware stack levels required when called: 12
  4071 ;; This function calls:
  4072 ;;		_ADCC_GetSingleConversion
  4073 ;;		_EEPROM_Read
  4074 ;;		_EEPROM_Write
  4075 ;;		_NVM_UnlockKeyClear
  4076 ;;		_NVM_UnlockKeySet
  4077 ;;		_printf
  4078 ;; This function is called by:
  4079 ;;		_main
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           
  4083                           	psect	text40
  4084   0019AA                     __ptext40:
  4085                           	callstack 0
  4086   0019AA                     _EEPROM:
  4087                           	callstack 114
  4088                           
  4089                           ;Labs/Lab10_EEPROM/EEPROM.c: 60:     if (labState == 0) {
  4090                           
  4091                           ;incstack = 0
  4092   0019AA  5059               	movf	_labState^(0+1280),w,c
  4093   0019AC  E104               	bnz	l3738
  4094                           
  4095                           ;Labs/Lab10_EEPROM/EEPROM.c: 61:         do { LATA = 0; LATCbits.LATC5 = 0; } while(0);
  4096   0019AE  6ABE               	clrf	190,c	;volatile
  4097   0019B0  9AC0               	bcf	192,5,c	;volatile
  4098                           
  4099                           ;Labs/Lab10_EEPROM/EEPROM.c: 63:         labState = 1;
  4100   0019B2  0E01               	movlw	1
  4101   0019B4  6E59               	movwf	_labState^(0+1280),c
  4102   0019B6                     l3738:
  4103                           
  4104                           ;Labs/Lab10_EEPROM/EEPROM.c: 66:     if (labState == 1) {
  4105   0019B6  0459               	decf	_labState^(0+1280),w,c
  4106   0019B8  E15E               	bnz	l3760
  4107                           
  4108                           ;Labs/Lab10_EEPROM/EEPROM.c: 69:         NVM_UnlockKeySet((0xAA55U));
  4109   0019BA  0EAA               	movlw	170
  4110   0019BC  6E05               	movwf	(NVM_UnlockKeySet@unlockKey+1)^(0+1280),c
  4111   0019BE  0E55               	movlw	85
  4112   0019C0  6E04               	movwf	NVM_UnlockKeySet@unlockKey^(0+1280),c
  4113   0019C2  EC4D  F012         	call	_NVM_UnlockKeySet	;wreg free
  4114                           
  4115                           ;Labs/Lab10_EEPROM/EEPROM.c: 72:         adcResult = ADCC_GetSingleConversion(POT_CHANNE
      +                          L) >> 8;
  4116   0019C6  0E10               	movlw	16
  4117   0019C8  EC97  F011         	call	_ADCC_GetSingleConversion
  4118   0019CC  C505  F504         	movff	?_ADCC_GetSingleConversion+1,?_ADCC_GetSingleConversion
  4119   0019D0  6A05               	clrf	(?_ADCC_GetSingleConversion+1)^(0+1280),c
  4120   0019D2  5004               	movf	?_ADCC_GetSingleConversion^(0+1280),w,c
  4121   0019D4  6E50               	movwf	_adcResult@EEPROM$F644^(0+1280),c
  4122                           
  4123                           ; BSR set to: 3
  4124                           ;Labs/Lab10_EEPROM/EEPROM.c: 73:         EEPROM_Write((0x380000U), adcResult);
  4125   0019D6  6A04               	clrf	EEPROM_Write@address^(0+1280),c
  4126   0019D8  6A05               	clrf	(EEPROM_Write@address+1)^(0+1280),c
  4127   0019DA  0E38               	movlw	56
  4128   0019DC  6E06               	movwf	(EEPROM_Write@address+2)^(0+1280),c
  4129   0019DE  C550  F507         	movff	_adcResult@EEPROM$F644,EEPROM_Write@data
  4130   0019E2  EC60  F010         	call	_EEPROM_Write	;wreg free
  4131                           
  4132                           ; BSR set to: 0
  4133                           ;Labs/Lab10_EEPROM/EEPROM.c: 76:         printf("ADC Result: %d\n\r", ADRES);
  4134   0019E6  0E01               	movlw	low STR_1
  4135   0019E8  6E41               	movwf	printf@fmt^(0+1280),c
  4136   0019EA  C3EA F542          	movff	1002,?_printf+1	;volatile
  4137   0019EE  C3EB F543          	movff	1003,?_printf+2	;volatile
  4138   0019F2  ECD7  F011         	call	_printf	;wreg free
  4139                           
  4140                           ;Labs/Lab10_EEPROM/EEPROM.c: 79:         ledDisplay = EEPROM_Read((0x380000U));
  4141   0019F6  6A04               	clrf	EEPROM_Read@address^(0+1280),c
  4142   0019F8  6A05               	clrf	(EEPROM_Read@address+1)^(0+1280),c
  4143   0019FA  0E38               	movlw	56
  4144   0019FC  6E06               	movwf	(EEPROM_Read@address+2)^(0+1280),c
  4145   0019FE  ECF2  F011         	call	_EEPROM_Read	;wreg free
  4146   001A02  6E4F               	movwf	_ledDisplay^(0+1280),c
  4147                           
  4148                           ; BSR set to: 0
  4149                           ;Labs/Lab10_EEPROM/EEPROM.c: 82:         NVM_UnlockKeyClear();
  4150   001A04  EC5F  F012         	call	_NVM_UnlockKeyClear	;wreg free
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;Labs/Lab10_EEPROM/EEPROM.c: 85:         LATAbits.LATA5 = ledDisplay & 1;
  4154   001A08  C54F  F546         	movff	_ledDisplay,??_EEPROM
  4155   001A0C  0E01               	movlw	1
  4156   001A0E  1646               	andwf	??_EEPROM^(0+1280),f,c
  4157   001A10  3A46               	swapf	??_EEPROM^(0+1280),f,c
  4158   001A12  4646               	rlncf	??_EEPROM^(0+1280),f,c
  4159   001A14  50BE               	movf	190,w,c	;volatile
  4160   001A16  1846               	xorwf	??_EEPROM^(0+1280),w,c
  4161   001A18  0BDF               	andlw	-33
  4162   001A1A  1846               	xorwf	??_EEPROM^(0+1280),w,c
  4163   001A1C  6EBE               	movwf	190,c	;volatile
  4164                           
  4165                           ; BSR set to: 0
  4166                           ;Labs/Lab10_EEPROM/EEPROM.c: 86:         LATAbits.LATA1 = (ledDisplay & 2) >> 1;
  4167   001A1E  C54F  F546         	movff	_ledDisplay,??_EEPROM
  4168   001A22  90D8               	bcf	status,0,c
  4169   001A24  3246               	rrcf	??_EEPROM^(0+1280),f,c
  4170   001A26  0E01               	movlw	1
  4171   001A28  1646               	andwf	??_EEPROM^(0+1280),f,c
  4172   001A2A  4646               	rlncf	??_EEPROM^(0+1280),f,c
  4173   001A2C  50BE               	movf	190,w,c	;volatile
  4174   001A2E  1846               	xorwf	??_EEPROM^(0+1280),w,c
  4175   001A30  0BFD               	andlw	-3
  4176   001A32  1846               	xorwf	??_EEPROM^(0+1280),w,c
  4177   001A34  6EBE               	movwf	190,c	;volatile
  4178                           
  4179                           ; BSR set to: 0
  4180                           ;Labs/Lab10_EEPROM/EEPROM.c: 87:         LATAbits.LATA2 = (ledDisplay & 4) >> 2;
  4181   001A36  C54F  F546         	movff	_ledDisplay,??_EEPROM
  4182   001A3A  90D8               	bcf	status,0,c
  4183   001A3C  3246               	rrcf	??_EEPROM^(0+1280),f,c
  4184   001A3E  90D8               	bcf	status,0,c
  4185   001A40  3246               	rrcf	??_EEPROM^(0+1280),f,c
  4186   001A42  0E01               	movlw	1
  4187   001A44  1646               	andwf	??_EEPROM^(0+1280),f,c
  4188   001A46  4646               	rlncf	??_EEPROM^(0+1280),f,c
  4189   001A48  4646               	rlncf	??_EEPROM^(0+1280),f,c
  4190   001A4A  50BE               	movf	190,w,c	;volatile
  4191   001A4C  1846               	xorwf	??_EEPROM^(0+1280),w,c
  4192   001A4E  0BFB               	andlw	-5
  4193   001A50  1846               	xorwf	??_EEPROM^(0+1280),w,c
  4194   001A52  6EBE               	movwf	190,c	;volatile
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;Labs/Lab10_EEPROM/EEPROM.c: 88:         LATCbits.LATC5 = (ledDisplay & 8) >> 3;
  4198   001A54  C54F  F546         	movff	_ledDisplay,??_EEPROM
  4199   001A58  90D8               	bcf	status,0,c
  4200   001A5A  3246               	rrcf	??_EEPROM^(0+1280),f,c
  4201   001A5C  90D8               	bcf	status,0,c
  4202   001A5E  3246               	rrcf	??_EEPROM^(0+1280),f,c
  4203   001A60  90D8               	bcf	status,0,c
  4204   001A62  3246               	rrcf	??_EEPROM^(0+1280),f,c
  4205   001A64  0E01               	movlw	1
  4206   001A66  1646               	andwf	??_EEPROM^(0+1280),f,c
  4207   001A68  3A46               	swapf	??_EEPROM^(0+1280),f,c
  4208   001A6A  4646               	rlncf	??_EEPROM^(0+1280),f,c
  4209   001A6C  50C0               	movf	192,w,c	;volatile
  4210   001A6E  1846               	xorwf	??_EEPROM^(0+1280),w,c
  4211   001A70  0BDF               	andlw	-33
  4212   001A72  1846               	xorwf	??_EEPROM^(0+1280),w,c
  4213   001A74  6EC0               	movwf	192,c	;volatile
  4214   001A76                     l3760:
  4215                           
  4216                           ;Labs/Lab10_EEPROM/EEPROM.c: 92:     if (switchEvent) {
  4217   001A76  505A               	movf	_switchEvent^(0+1280),w,c
  4218   001A78  A4D8               	btfss	status,2,c
  4219                           
  4220                           ;Labs/Lab10_EEPROM/EEPROM.c: 93:         labState = 0;
  4221   001A7A  6A59               	clrf	_labState^(0+1280),c
  4222   001A7C  0012               	return		;funcret
  4223   001A7E                     __end_of_EEPROM:
  4224                           	callstack 0
  4225                           
  4226 ;; *************** function _NVM_UnlockKeySet *****************
  4227 ;; Defined at:
  4228 ;;		line 70 in file "mcc_generated_files/nvm/src/nvm.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;  unlockKey       2    3[COMRAM] unsigned short 
  4231 ;; Auto vars:     Size  Location     Type
  4232 ;;		None
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  1    wreg      void 
  4235 ;; Registers used:
  4236 ;;		None
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/5
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4245 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4246 ;;Total ram usage:        2 bytes
  4247 ;; Hardware stack levels used: 1
  4248 ;; Hardware stack levels required when called: 3
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		_EEPROM
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           	psect	text41
  4257   00249A                     __ptext41:
  4258                           	callstack 0
  4259   00249A                     _NVM_UnlockKeySet:
  4260                           	callstack 122
  4261                           
  4262                           ;mcc_generated_files/nvm/src/nvm.c: 70: void NVM_UnlockKeySet(uint16_t unlockKey);mcc_ge
      +                          nerated_files/nvm/src/nvm.c: 71: {;mcc_generated_files/nvm/src/nvm.c: 72:     unlockKeyH
      +                          igh = (uint8_t) (unlockKey >> 8);
  4263                           
  4264                           ;incstack = 0
  4265   00249A  C505  F54D         	movff	NVM_UnlockKeySet@unlockKey+1,_unlockKeyHigh	;volatile
  4266                           
  4267                           ;mcc_generated_files/nvm/src/nvm.c: 73:     unlockKeyLow = (uint8_t) unlockKey;
  4268   00249E  C504  F54E         	movff	NVM_UnlockKeySet@unlockKey,_unlockKeyLow	;volatile
  4269   0024A2  0012               	return		;funcret
  4270   0024A4                     __end_of_NVM_UnlockKeySet:
  4271                           	callstack 0
  4272                           
  4273 ;; *************** function _NVM_UnlockKeyClear *****************
  4274 ;; Defined at:
  4275 ;;		line 76 in file "mcc_generated_files/nvm/src/nvm.c"
  4276 ;; Parameters:    Size  Location     Type
  4277 ;;		None
  4278 ;; Auto vars:     Size  Location     Type
  4279 ;;		None
  4280 ;; Return value:  Size  Location     Type
  4281 ;;                  1    wreg      void 
  4282 ;; Registers used:
  4283 ;;		None
  4284 ;; Tracked objects:
  4285 ;;		On entry : 3F/0
  4286 ;;		On exit  : 3F/0
  4287 ;;		Unchanged: 3F/0
  4288 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4292 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;Total ram usage:        0 bytes
  4294 ;; Hardware stack levels used: 1
  4295 ;; Hardware stack levels required when called: 3
  4296 ;; This function calls:
  4297 ;;		Nothing
  4298 ;; This function is called by:
  4299 ;;		_EEPROM
  4300 ;; This function uses a non-reentrant model
  4301 ;;
  4302                           
  4303                           	psect	text42
  4304   0024BE                     __ptext42:
  4305                           	callstack 0
  4306   0024BE                     _NVM_UnlockKeyClear:
  4307                           	callstack 122
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;mcc_generated_files/nvm/src/nvm.c: 78:     unlockKeyHigh = 0x00;
  4311                           
  4312                           ;incstack = 0
  4313   0024BE  6A4D               	clrf	_unlockKeyHigh^(0+1280),c	;volatile
  4314                           
  4315                           ;mcc_generated_files/nvm/src/nvm.c: 79:     unlockKeyLow = 0x00;
  4316   0024C0  6A4E               	clrf	_unlockKeyLow^(0+1280),c	;volatile
  4317                           
  4318                           ; BSR set to: 0
  4319   0024C2  0012               	return		;funcret
  4320   0024C4                     __end_of_NVM_UnlockKeyClear:
  4321                           	callstack 0
  4322                           
  4323 ;; *************** function _EEPROM_Write *****************
  4324 ;; Defined at:
  4325 ;;		line 309 in file "mcc_generated_files/nvm/src/nvm.c"
  4326 ;; Parameters:    Size  Location     Type
  4327 ;;  address         3    3[COMRAM] unsigned um
  4328 ;;  data            1    6[COMRAM] unsigned char 
  4329 ;; Auto vars:     Size  Location     Type
  4330 ;;  globalInterr    1    7[COMRAM] unsigned char 
  4331 ;; Return value:  Size  Location     Type
  4332 ;;                  1    wreg      void 
  4333 ;; Registers used:
  4334 ;;		wreg, status,2
  4335 ;; Tracked objects:
  4336 ;;		On entry : 3F/3
  4337 ;;		On exit  : 3F/0
  4338 ;;		Unchanged: 0/0
  4339 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4340 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4341 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4343 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;Total ram usage:        5 bytes
  4345 ;; Hardware stack levels used: 1
  4346 ;; Hardware stack levels required when called: 3
  4347 ;; This function calls:
  4348 ;;		Nothing
  4349 ;; This function is called by:
  4350 ;;		_EEPROM
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           ;# 
  4355                           
  4356                           	psect	text43
  4357   0020C0                     __ptext43:
  4358                           	callstack 0
  4359   0020C0                     _EEPROM_Write:
  4360                           	callstack 122
  4361                           
  4362                           ; BSR set to: 3
  4363                           ;mcc_generated_files/nvm/src/nvm.c: 309: void EEPROM_Write(eeprom_address_t address, eep
      +                          rom_data_t data);mcc_generated_files/nvm/src/nvm.c: 310: {;mcc_generated_files/nvm/src/n
      +                          vm.c: 312:     uint8_t globalInterruptBitValue = INTCON0bits.GIE;
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;incstack = 0
  4367   0020C0  0E00               	movlw	0
  4368   0020C2  BED6               	btfsc	214,7,c	;volatile
  4369   0020C4  0E01               	movlw	1
  4370   0020C6  6E08               	movwf	EEPROM_Write@globalInterruptBitValue^(0+1280),c
  4371                           
  4372                           ; BSR set to: 3
  4373                           ;mcc_generated_files/nvm/src/nvm.c: 315:     NVMADRU = (uint8_t) (address >> 16);
  4374   0020C8  C506  F045         	movff	EEPROM_Write@address+2,69	;volatile
  4375                           
  4376                           ; BSR set to: 3
  4377                           ;mcc_generated_files/nvm/src/nvm.c: 316:     NVMADRH = (uint8_t) (address >> 8);
  4378   0020CC  C505  F044         	movff	EEPROM_Write@address+1,68	;volatile
  4379                           
  4380                           ; BSR set to: 3
  4381                           ;mcc_generated_files/nvm/src/nvm.c: 317:     NVMADRL = (uint8_t) address;
  4382   0020D0  C504  F043         	movff	EEPROM_Write@address,67	;volatile
  4383                           
  4384                           ; BSR set to: 3
  4385                           ;mcc_generated_files/nvm/src/nvm.c: 320:     NVMDATL = data;
  4386   0020D4  C507  F046         	movff	EEPROM_Write@data,70	;volatile
  4387                           
  4388                           ; BSR set to: 3
  4389                           ;mcc_generated_files/nvm/src/nvm.c: 323:     NVMCON1bits.NVMCMD = 0x03;
  4390   0020D8  0100               	movlb	0	; () banked
  4391   0020DA  5141               	movf	65,w,b	;volsfr
  4392   0020DC  0BF8               	andlw	-8
  4393   0020DE  0903               	iorlw	3
  4394   0020E0  6F41               	movwf	65,b	;volsfr
  4395                           
  4396                           ; BSR set to: 0
  4397                           ;mcc_generated_files/nvm/src/nvm.c: 326:     INTCON0bits.GIE = 0;
  4398   0020E2  9ED6               	bcf	214,7,c	;volatile
  4399                           
  4400                           ;# 
  4401                           ;# 
  4402   0020E4  0100               	banksel	66	;# 
  4403   0020E6                     
  4404                           ;mcc_generated_files/nvm/src/nvm.c: 332:     NVMLOCK = unlockKeyLow;
  4405   0020E6  C54E  F042         	movff	_unlockKeyLow,66	;volatile
  4406   0020EA  504D               	movf	_unlockKeyHigh& (0+255),w,c	;# 
  4407   0020EC  6F42               	movwf	66,b	;# 
  4408   0020EE  8140               	bsf	64,0,b	;# 
  4409                           
  4410                           ;mcc_generated_files/nvm/src/nvm.c: 341:     INTCON0bits.GIE = globalInterruptBitValue;
  4411   0020F0  B008               	btfsc	EEPROM_Write@globalInterruptBitValue^(0+1280),0,c
  4412   0020F2  D002               	bra	u1485
  4413   0020F4  9ED6               	bcf	214,7,c	;volatile
  4414   0020F6  D001               	bra	u1486
  4415   0020F8                     u1485:
  4416   0020F8  8ED6               	bsf	214,7,c	;volatile
  4417   0020FA                     u1486:
  4418                           
  4419                           ;mcc_generated_files/nvm/src/nvm.c: 344:     NVMCON1bits.NVMCMD = 0x00;
  4420   0020FA  0EF8               	movlw	-8
  4421   0020FC  0100               	movlb	0	; () banked
  4422   0020FE  1741               	andwf	65,f,b	;volsfr
  4423                           
  4424                           ; BSR set to: 0
  4425   002100  0CF8               	retlw	248	;funcret
  4426   002102                     __end_of_EEPROM_Write:
  4427                           	callstack 0
  4428                           
  4429 ;; *************** function _EEPROM_Read *****************
  4430 ;; Defined at:
  4431 ;;		line 293 in file "mcc_generated_files/nvm/src/nvm.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  address         3    3[COMRAM] unsigned um
  4434 ;; Auto vars:     Size  Location     Type
  4435 ;;		None
  4436 ;; Return value:  Size  Location     Type
  4437 ;;                  1    wreg      unsigned char 
  4438 ;; Registers used:
  4439 ;;		wreg, status,2
  4440 ;; Tracked objects:
  4441 ;;		On entry : 0/0
  4442 ;;		On exit  : 3F/0
  4443 ;;		Unchanged: 0/0
  4444 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4445 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4448 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4449 ;;Total ram usage:        3 bytes
  4450 ;; Hardware stack levels used: 1
  4451 ;; Hardware stack levels required when called: 3
  4452 ;; This function calls:
  4453 ;;		Nothing
  4454 ;; This function is called by:
  4455 ;;		_EEPROM
  4456 ;; This function uses a non-reentrant model
  4457 ;;
  4458                           
  4459                           	psect	text44
  4460   0023E4                     __ptext44:
  4461                           	callstack 0
  4462   0023E4                     _EEPROM_Read:
  4463                           	callstack 122
  4464                           
  4465                           ;mcc_generated_files/nvm/src/nvm.c: 293: eeprom_data_t EEPROM_Read(eeprom_address_t addr
      +                          ess);mcc_generated_files/nvm/src/nvm.c: 294: {;mcc_generated_files/nvm/src/nvm.c: 296:  
      +                             NVMADRU = (uint8_t) (address >> 16);
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;incstack = 0
  4469   0023E4  C506  F045         	movff	EEPROM_Read@address+2,69	;volatile
  4470                           
  4471                           ;mcc_generated_files/nvm/src/nvm.c: 297:     NVMADRH = (uint8_t) (address >> 8);
  4472   0023E8  C505  F044         	movff	EEPROM_Read@address+1,68	;volatile
  4473                           
  4474                           ;mcc_generated_files/nvm/src/nvm.c: 298:     NVMADRL = (uint8_t) address;
  4475   0023EC  C504  F043         	movff	EEPROM_Read@address,67	;volatile
  4476                           
  4477                           ;mcc_generated_files/nvm/src/nvm.c: 301:     NVMCON1bits.NVMCMD = 0x00;
  4478   0023F0  0EF8               	movlw	-8
  4479   0023F2  0100               	movlb	0	; () banked
  4480   0023F4  1741               	andwf	65,f,b	;volsfr
  4481                           
  4482                           ; BSR set to: 0
  4483                           ;mcc_generated_files/nvm/src/nvm.c: 304:     NVMCON0bits.GO = 1;
  4484   0023F6  8140               	bsf	64,0,b	;volatile
  4485                           
  4486                           ;mcc_generated_files/nvm/src/nvm.c: 306:     return NVMDATL;
  4487   0023F8  5146               	movf	70,w,b	;volatile
  4488                           
  4489                           ; BSR set to: 0
  4490   0023FA  0012               	return		;funcret
  4491   0023FC                     __end_of_EEPROM_Read:
  4492                           	callstack 0
  4493                           
  4494 ;; *************** function _Blink *****************
  4495 ;; Defined at:
  4496 ;;		line 60 in file "Labs/Lab02_Blink/Blink.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;		None
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;		None
  4501 ;; Return value:  Size  Location     Type
  4502 ;;                  1    wreg      void 
  4503 ;; Registers used:
  4504 ;;		wreg, status,2, status,0, cstack
  4505 ;; Tracked objects:
  4506 ;;		On entry : 0/5
  4507 ;;		On exit  : 0/0
  4508 ;;		Unchanged: 0/0
  4509 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4512 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4513 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4514 ;;Total ram usage:        1 bytes
  4515 ;; Hardware stack levels used: 1
  4516 ;; Hardware stack levels required when called: 5
  4517 ;; This function calls:
  4518 ;;		_Timer1_Reload
  4519 ;;		_Timer1_Start
  4520 ;;		_Timer1_Stop
  4521 ;; This function is called by:
  4522 ;;		_main
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           
  4526                           	psect	text45
  4527   002072                     __ptext45:
  4528                           	callstack 0
  4529   002072                     _Blink:
  4530                           	callstack 121
  4531                           
  4532                           ;Labs/Lab02_Blink/Blink.c: 61:     if (labState == 0) {
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;incstack = 0
  4536   002072  5059               	movf	_labState^(0+1280),w,c
  4537   002074  E106               	bnz	l3590
  4538                           
  4539                           ;Labs/Lab02_Blink/Blink.c: 62:         do { LATA = 0; LATCbits.LATC5 = 0; } while(0);
  4540   002076  6ABE               	clrf	190,c	;volatile
  4541   002078  9AC0               	bcf	192,5,c	;volatile
  4542                           
  4543                           ;Labs/Lab02_Blink/Blink.c: 63:         Timer1_Start();
  4544   00207A  EC65  F012         	call	_Timer1_Start	;wreg free
  4545                           
  4546                           ; BSR set to: 3
  4547                           ;Labs/Lab02_Blink/Blink.c: 65:         labState = 1;
  4548   00207E  0E01               	movlw	1
  4549   002080  6E59               	movwf	_labState^(0+1280),c
  4550   002082                     l3590:
  4551                           
  4552                           ;Labs/Lab02_Blink/Blink.c: 68:     if (labState == 1) {
  4553   002082  0459               	decf	_labState^(0+1280),w,c
  4554   002084  E116               	bnz	l3604
  4555   002086                     u1500:
  4556   002086  A8B6               	btfss	182,4,c	;volatile
  4557   002088  D7FE               	goto	u1500
  4558                           
  4559                           ;Labs/Lab02_Blink/Blink.c: 71:         do { PIR3bits.TMR1IF = 0;} while (0);
  4560   00208A  98B6               	bcf	182,4,c	;volatile
  4561                           
  4562                           ;Labs/Lab02_Blink/Blink.c: 72:         Timer1_Reload();
  4563   00208C  EC33  F012         	call	_Timer1_Reload	;wreg free
  4564                           
  4565                           ; BSR set to: 3
  4566                           ;Labs/Lab02_Blink/Blink.c: 73:         flagCounter++;
  4567   002090  2A57               	incf	_flagCounter^(0+1280),f,c
  4568                           
  4569                           ; BSR set to: 3
  4570                           ;Labs/Lab02_Blink/Blink.c: 75:         if (flagCounter == 3) {
  4571   002092  0E03               	movlw	3
  4572   002094  1857               	xorwf	_flagCounter^(0+1280),w,c
  4573   002096  E10D               	bnz	l3604
  4574   002098  0E01               	movlw	1
  4575                           
  4576                           ; BSR set to: 3
  4577   00209A  AABE               	btfss	190,5,c	;volatile
  4578   00209C  0E00               	movlw	0
  4579   00209E  0AFF               	xorlw	255
  4580   0020A0  6E06               	movwf	??_Blink^(0+1280),c
  4581   0020A2  3A06               	swapf	??_Blink^(0+1280),f,c
  4582   0020A4  4606               	rlncf	??_Blink^(0+1280),f,c
  4583   0020A6  50BE               	movf	190,w,c	;volatile
  4584   0020A8  1806               	xorwf	??_Blink^(0+1280),w,c
  4585   0020AA  0BDF               	andlw	-33
  4586   0020AC  1806               	xorwf	??_Blink^(0+1280),w,c
  4587   0020AE  6EBE               	movwf	190,c	;volatile
  4588                           
  4589                           ; BSR set to: 3
  4590                           ;Labs/Lab02_Blink/Blink.c: 77:             flagCounter = 0;
  4591   0020B0  6A57               	clrf	_flagCounter^(0+1280),c
  4592   0020B2                     l3604:
  4593                           
  4594                           ;Labs/Lab02_Blink/Blink.c: 81:     if (switchEvent) {
  4595   0020B2  505A               	movf	_switchEvent^(0+1280),w,c
  4596   0020B4  B4D8               	btfsc	status,2,c
  4597   0020B6  0012               	return	
  4598                           
  4599                           ;Labs/Lab02_Blink/Blink.c: 82:         Timer1_Stop();
  4600   0020B8  EC62  F012         	call	_Timer1_Stop	;wreg free
  4601                           
  4602                           ; BSR set to: 3
  4603                           ;Labs/Lab02_Blink/Blink.c: 83:         labState = 0;
  4604   0020BC  6A59               	clrf	_labState^(0+1280),c
  4605   0020BE  0012               	return		;funcret
  4606   0020C0                     __end_of_Blink:
  4607                           	callstack 0
  4608                           
  4609 ;; *************** function _Timer1_Stop *****************
  4610 ;; Defined at:
  4611 ;;		line 90 in file "mcc_generated_files/timer/src/tmr1.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;		None
  4614 ;; Auto vars:     Size  Location     Type
  4615 ;;		None
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  1    wreg      void 
  4618 ;; Registers used:
  4619 ;;		None
  4620 ;; Tracked objects:
  4621 ;;		On entry : 0/5
  4622 ;;		On exit  : 3F/3
  4623 ;;		Unchanged: 0/0
  4624 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4629 ;;Total ram usage:        0 bytes
  4630 ;; Hardware stack levels used: 1
  4631 ;; Hardware stack levels required when called: 3
  4632 ;; This function calls:
  4633 ;;		Nothing
  4634 ;; This function is called by:
  4635 ;;		_Blink
  4636 ;;		_Timer1_Lab
  4637 ;; This function uses a non-reentrant model
  4638 ;;
  4639                           
  4640                           	psect	text46
  4641   0024C4                     __ptext46:
  4642                           	callstack 0
  4643   0024C4                     _Timer1_Stop:
  4644                           	callstack 122
  4645                           
  4646                           ;mcc_generated_files/timer/src/tmr1.c: 93:     T1CONbits.TMR1ON = 0;
  4647                           
  4648                           ;incstack = 0
  4649   0024C4  0103               	movlb	3	; () banked
  4650   0024C6  9114               	bcf	20,0,b	;volatile
  4651                           
  4652                           ; BSR set to: 3
  4653   0024C8  0012               	return		;funcret
  4654   0024CA                     __end_of_Timer1_Stop:
  4655                           	callstack 0
  4656                           
  4657 ;; *************** function _Timer1_Start *****************
  4658 ;; Defined at:
  4659 ;;		line 84 in file "mcc_generated_files/timer/src/tmr1.c"
  4660 ;; Parameters:    Size  Location     Type
  4661 ;;		None
  4662 ;; Auto vars:     Size  Location     Type
  4663 ;;		None
  4664 ;; Return value:  Size  Location     Type
  4665 ;;                  1    wreg      void 
  4666 ;; Registers used:
  4667 ;;		None
  4668 ;; Tracked objects:
  4669 ;;		On entry : 0/5
  4670 ;;		On exit  : 3F/3
  4671 ;;		Unchanged: 0/0
  4672 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4677 ;;Total ram usage:        0 bytes
  4678 ;; Hardware stack levels used: 1
  4679 ;; Hardware stack levels required when called: 3
  4680 ;; This function calls:
  4681 ;;		Nothing
  4682 ;; This function is called by:
  4683 ;;		_Blink
  4684 ;;		_Timer1_Lab
  4685 ;; This function uses a non-reentrant model
  4686 ;;
  4687                           
  4688                           	psect	text47
  4689   0024CA                     __ptext47:
  4690                           	callstack 0
  4691   0024CA                     _Timer1_Start:
  4692                           	callstack 122
  4693                           
  4694                           ;mcc_generated_files/timer/src/tmr1.c: 87:     T1CONbits.TMR1ON = 1;
  4695                           
  4696                           ; BSR set to: 3
  4697                           ;incstack = 0
  4698   0024CA  0103               	movlb	3	; () banked
  4699   0024CC  8114               	bsf	20,0,b	;volatile
  4700                           
  4701                           ; BSR set to: 3
  4702   0024CE  0012               	return		;funcret
  4703   0024D0                     __end_of_Timer1_Start:
  4704                           	callstack 0
  4705                           
  4706 ;; *************** function _Timer1_Reload *****************
  4707 ;; Defined at:
  4708 ;;		line 133 in file "mcc_generated_files/timer/src/tmr1.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;		None
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;		None
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  1    wreg      void 
  4715 ;; Registers used:
  4716 ;;		cstack
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/5
  4719 ;;		On exit  : 3F/3
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4726 ;;Total ram usage:        0 bytes
  4727 ;; Hardware stack levels used: 1
  4728 ;; Hardware stack levels required when called: 4
  4729 ;; This function calls:
  4730 ;;		_Timer1_Write
  4731 ;; This function is called by:
  4732 ;;		_Blink
  4733 ;;		_Timer1_Lab
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           	psect	text48
  4738   002466                     __ptext48:
  4739                           	callstack 0
  4740   002466                     _Timer1_Reload:
  4741                           	callstack 121
  4742                           
  4743                           ;mcc_generated_files/timer/src/tmr1.c: 135:     Timer1_Write(timer1ReloadVal);
  4744                           
  4745                           ; BSR set to: 3
  4746                           ;incstack = 0
  4747   002466  C549  F504         	movff	_timer1ReloadVal,Timer1_Write@timerVal	;volatile
  4748   00246A  C54A  F505         	movff	_timer1ReloadVal+1,Timer1_Write@timerVal+1	;volatile
  4749   00246E  EFB9  F011         	goto	_Timer1_Write	;wreg free
  4750   002472                     __end_of_Timer1_Reload:
  4751                           	callstack 0
  4752                           
  4753 ;; *************** function _Timer1_Write *****************
  4754 ;; Defined at:
  4755 ;;		line 111 in file "mcc_generated_files/timer/src/tmr1.c"
  4756 ;; Parameters:    Size  Location     Type
  4757 ;;  timerVal        2    3[COMRAM] unsigned int 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;		None
  4760 ;; Return value:  Size  Location     Type
  4761 ;;                  1    wreg      void 
  4762 ;; Registers used:
  4763 ;;		None
  4764 ;; Tracked objects:
  4765 ;;		On entry : 0/5
  4766 ;;		On exit  : 3F/3
  4767 ;;		Unchanged: 0/0
  4768 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4769 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4773 ;;Total ram usage:        2 bytes
  4774 ;; Hardware stack levels used: 1
  4775 ;; Hardware stack levels required when called: 3
  4776 ;; This function calls:
  4777 ;;		Nothing
  4778 ;; This function is called by:
  4779 ;;		_Timer1_Reload
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           	psect	text49
  4784   002372                     __ptext49:
  4785                           	callstack 0
  4786   002372                     _Timer1_Write:
  4787                           	callstack 121
  4788                           
  4789                           ;mcc_generated_files/timer/src/tmr1.c: 111: void Timer1_Write(size_t timerVal);mcc_gener
      +                          ated_files/timer/src/tmr1.c: 112: {;mcc_generated_files/timer/src/tmr1.c: 113:     if (T
      +                          1CONbits.NOT_SYNC == 1)
  4790                           
  4791                           ; BSR set to: 3
  4792                           ;incstack = 0
  4793   002372  0103               	movlb	3	; () banked
  4794   002374  A514               	btfss	20,2,b	;volatile
  4795   002376  D007               	goto	l1021
  4796                           
  4797                           ; BSR set to: 3
  4798                           ;mcc_generated_files/timer/src/tmr1.c: 114:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          116:         T1CONbits.TMR1ON = 0;
  4799   002378  9114               	bcf	20,0,b	;volatile
  4800                           
  4801                           ;mcc_generated_files/timer/src/tmr1.c: 119:         TMR1H = (uint8_t)(timerVal >> 8);
  4802   00237A  C505  F313         	movff	Timer1_Write@timerVal+1,787	;volatile
  4803                           
  4804                           ;mcc_generated_files/timer/src/tmr1.c: 120:         TMR1L = (uint8_t)timerVal;
  4805   00237E  C504  F312         	movff	Timer1_Write@timerVal,786	;volatile
  4806                           
  4807                           ;mcc_generated_files/timer/src/tmr1.c: 123:         T1CONbits.TMR1ON = 1;
  4808   002382  8114               	bsf	20,0,b	;volatile
  4809                           
  4810                           ;mcc_generated_files/timer/src/tmr1.c: 124:     }
  4811   002384  0012               	return	
  4812   002386                     l1021:
  4813                           
  4814                           ; BSR set to: 3
  4815                           ;mcc_generated_files/timer/src/tmr1.c: 126:     {;mcc_generated_files/timer/src/tmr1.c: 
      +                          128:         TMR1H = (uint8_t)(timerVal >> 8);
  4816   002386  C505  F313         	movff	Timer1_Write@timerVal+1,787	;volatile
  4817                           
  4818                           ;mcc_generated_files/timer/src/tmr1.c: 129:         TMR1L = (uint8_t)timerVal;
  4819   00238A  C504  F312         	movff	Timer1_Write@timerVal,786	;volatile
  4820                           
  4821                           ; BSR set to: 3
  4822   00238E  0012               	return		;funcret
  4823   002390                     __end_of_Timer1_Write:
  4824                           	callstack 0
  4825                           
  4826 ;; *************** function _ADC *****************
  4827 ;; Defined at:
  4828 ;;		line 55 in file "Labs/Lab04_AnalogToDigitalConversion/ADC.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;		None
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;		None
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  1    wreg      void 
  4835 ;; Registers used:
  4836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/5
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4844 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4845 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4846 ;;Total ram usage:        1 bytes
  4847 ;; Hardware stack levels used: 1
  4848 ;; Hardware stack levels required when called: 12
  4849 ;; This function calls:
  4850 ;;		_ADCC_GetSingleConversion
  4851 ;;		_printf
  4852 ;; This function is called by:
  4853 ;;		_main
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           	psect	text50
  4858   001BD2                     __ptext50:
  4859                           	callstack 0
  4860   001BD2                     _ADC:
  4861                           	callstack 114
  4862                           
  4863                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 57:     if (labState == 0) {
  4864                           
  4865                           ; BSR set to: 3
  4866                           ;incstack = 0
  4867   001BD2  5059               	movf	_labState^(0+1280),w,c
  4868   001BD4  E104               	bnz	l3614
  4869                           
  4870                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 58:         do { LATA = 0; LATCbits.LATC5 =
      +                           0; } while(0);
  4871   001BD6  6ABE               	clrf	190,c	;volatile
  4872   001BD8  9AC0               	bcf	192,5,c	;volatile
  4873                           
  4874                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 60:         labState = 1;
  4875   001BDA  0E01               	movlw	1
  4876   001BDC  6E59               	movwf	_labState^(0+1280),c
  4877   001BDE                     l3614:
  4878                           
  4879                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 63:     if (labState == 1) {
  4880   001BDE  0459               	decf	_labState^(0+1280),w,c
  4881   001BE0  E147               	bnz	l3628
  4882                           
  4883                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 65:         adcResult = ADCC_GetSingleConve
      +                          rsion(POT_CHANNEL) >> 8;
  4884   001BE2  0E10               	movlw	16
  4885   001BE4  EC97  F011         	call	_ADCC_GetSingleConversion
  4886   001BE8  C505  F504         	movff	?_ADCC_GetSingleConversion+1,?_ADCC_GetSingleConversion
  4887   001BEC  6A05               	clrf	(?_ADCC_GetSingleConversion+1)^(0+1280),c
  4888   001BEE  5004               	movf	?_ADCC_GetSingleConversion^(0+1280),w,c
  4889   001BF0  6E55               	movwf	_adcResult^(0+1280),c
  4890                           
  4891                           ; BSR set to: 3
  4892                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 68:         printf("ADC Result: %d\n\r", AD
      +                          RES);
  4893   001BF2  0E01               	movlw	low STR_1
  4894   001BF4  6E41               	movwf	printf@fmt^(0+1280),c
  4895   001BF6  C3EA F542          	movff	1002,?_printf+1	;volatile
  4896   001BFA  C3EB F543          	movff	1003,?_printf+2	;volatile
  4897   001BFE  ECD7  F011         	call	_printf	;wreg free
  4898                           
  4899                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 71:         LATAbits.LATA5 = adcResult & 1;
  4900   001C02  C555  F546         	movff	_adcResult,??_ADC
  4901   001C06  0E01               	movlw	1
  4902   001C08  1646               	andwf	??_ADC^(0+1280),f,c
  4903   001C0A  3A46               	swapf	??_ADC^(0+1280),f,c
  4904   001C0C  4646               	rlncf	??_ADC^(0+1280),f,c
  4905   001C0E  50BE               	movf	190,w,c	;volatile
  4906   001C10  1846               	xorwf	??_ADC^(0+1280),w,c
  4907   001C12  0BDF               	andlw	-33
  4908   001C14  1846               	xorwf	??_ADC^(0+1280),w,c
  4909   001C16  6EBE               	movwf	190,c	;volatile
  4910                           
  4911                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 72:         LATAbits.LATA1 = (adcResult & 2
      +                          ) >> 1;
  4912   001C18  C555  F546         	movff	_adcResult,??_ADC
  4913   001C1C  90D8               	bcf	status,0,c
  4914   001C1E  3246               	rrcf	??_ADC^(0+1280),f,c
  4915   001C20  0E01               	movlw	1
  4916   001C22  1646               	andwf	??_ADC^(0+1280),f,c
  4917   001C24  4646               	rlncf	??_ADC^(0+1280),f,c
  4918   001C26  50BE               	movf	190,w,c	;volatile
  4919   001C28  1846               	xorwf	??_ADC^(0+1280),w,c
  4920   001C2A  0BFD               	andlw	-3
  4921   001C2C  1846               	xorwf	??_ADC^(0+1280),w,c
  4922   001C2E  6EBE               	movwf	190,c	;volatile
  4923                           
  4924                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 73:         LATAbits.LATA2 = (adcResult & 4
      +                          ) >> 2;
  4925   001C30  C555  F546         	movff	_adcResult,??_ADC
  4926   001C34  90D8               	bcf	status,0,c
  4927   001C36  3246               	rrcf	??_ADC^(0+1280),f,c
  4928   001C38  90D8               	bcf	status,0,c
  4929   001C3A  3246               	rrcf	??_ADC^(0+1280),f,c
  4930   001C3C  0E01               	movlw	1
  4931   001C3E  1646               	andwf	??_ADC^(0+1280),f,c
  4932   001C40  4646               	rlncf	??_ADC^(0+1280),f,c
  4933   001C42  4646               	rlncf	??_ADC^(0+1280),f,c
  4934   001C44  50BE               	movf	190,w,c	;volatile
  4935   001C46  1846               	xorwf	??_ADC^(0+1280),w,c
  4936   001C48  0BFB               	andlw	-5
  4937   001C4A  1846               	xorwf	??_ADC^(0+1280),w,c
  4938   001C4C  6EBE               	movwf	190,c	;volatile
  4939                           
  4940                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 74:         LATCbits.LATC5 = (adcResult & 8
      +                          ) >> 3;
  4941   001C4E  C555  F546         	movff	_adcResult,??_ADC
  4942   001C52  90D8               	bcf	status,0,c
  4943   001C54  3246               	rrcf	??_ADC^(0+1280),f,c
  4944   001C56  90D8               	bcf	status,0,c
  4945   001C58  3246               	rrcf	??_ADC^(0+1280),f,c
  4946   001C5A  90D8               	bcf	status,0,c
  4947   001C5C  3246               	rrcf	??_ADC^(0+1280),f,c
  4948   001C5E  0E01               	movlw	1
  4949   001C60  1646               	andwf	??_ADC^(0+1280),f,c
  4950   001C62  3A46               	swapf	??_ADC^(0+1280),f,c
  4951   001C64  4646               	rlncf	??_ADC^(0+1280),f,c
  4952   001C66  50C0               	movf	192,w,c	;volatile
  4953   001C68  1846               	xorwf	??_ADC^(0+1280),w,c
  4954   001C6A  0BDF               	andlw	-33
  4955   001C6C  1846               	xorwf	??_ADC^(0+1280),w,c
  4956   001C6E  6EC0               	movwf	192,c	;volatile
  4957   001C70                     l3628:
  4958                           
  4959                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 77:     if (switchEvent) {
  4960   001C70  505A               	movf	_switchEvent^(0+1280),w,c
  4961   001C72  A4D8               	btfss	status,2,c
  4962                           
  4963                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 78:         labState = 0;
  4964   001C74  6A59               	clrf	_labState^(0+1280),c
  4965   001C76  0012               	return		;funcret
  4966   001C78                     __end_of_ADC:
  4967                           	callstack 0
  4968                           
  4969 ;; *************** function _printf *****************
  4970 ;; Defined at:
  4971 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\printf.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;  fmt             1   64[COMRAM] PTR const unsigned char 
  4974 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;  ap              2   67[COMRAM] PTR void [1]
  4977 ;;		 -> ?_printf(2), 
  4978 ;;  ret             2    0        int 
  4979 ;; Return value:  Size  Location     Type
  4980 ;;                  2   64[COMRAM] int 
  4981 ;; Registers used:
  4982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4983 ;; Tracked objects:
  4984 ;;		On entry : 38/5
  4985 ;;		On exit  : 0/0
  4986 ;;		Unchanged: 0/0
  4987 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4988 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4989 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4991 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4992 ;;Total ram usage:        5 bytes
  4993 ;; Hardware stack levels used: 1
  4994 ;; Hardware stack levels required when called: 11
  4995 ;; This function calls:
  4996 ;;		_vfprintf
  4997 ;; This function is called by:
  4998 ;;		_ADC
  4999 ;;		_VSR
  5000 ;;		_PWM
  5001 ;;		_EEPROM
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           	psect	text51
  5006   0023AE                     __ptext51:
  5007                           	callstack 0
  5008   0023AE                     _printf:
  5009                           	callstack 114
  5010                           
  5011                           ;incstack = 0
  5012   0023AE  0E42               	movlw	low (?_printf+1)
  5013   0023B0  6E44               	movwf	printf@ap^(0+1280),c
  5014   0023B2  0E05               	movlw	high (?_printf+1)
  5015   0023B4  6E45               	movwf	(printf@ap+1)^(0+1280),c
  5016   0023B6  6A3B               	clrf	vfprintf@fp^(0+1280),c
  5017   0023B8  6A3C               	clrf	(vfprintf@fp+1)^(0+1280),c
  5018   0023BA  C541  F53D         	movff	printf@fmt,vfprintf@fmt
  5019   0023BE  0E44               	movlw	low printf@ap
  5020   0023C0  6E3E               	movwf	vfprintf@ap^(0+1280),c
  5021   0023C2  0E05               	movlw	high printf@ap
  5022   0023C4  6E3F               	movwf	(vfprintf@ap+1)^(0+1280),c
  5023   0023C6  EF0A  F00B         	goto	_vfprintf	;wreg free
  5024   0023CA                     __end_of_printf:
  5025                           	callstack 0
  5026                           
  5027 ;; *************** function _vfprintf *****************
  5028 ;; Defined at:
  5029 ;;		line 1546 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5030 ;; Parameters:    Size  Location     Type
  5031 ;;  fp              2   58[COMRAM] PTR struct _IO_FILE
  5032 ;;		 -> NULL(0), 
  5033 ;;  fmt             1   60[COMRAM] PTR const unsigned char 
  5034 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  5035 ;;  ap              2   61[COMRAM] PTR PTR void 
  5036 ;;		 -> printf@ap(2), 
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;  cfmt            1   63[COMRAM] PTR unsigned char 
  5039 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  2   58[COMRAM] int 
  5042 ;; Registers used:
  5043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5044 ;; Tracked objects:
  5045 ;;		On entry : 38/5
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5049 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5050 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5052 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5053 ;;Total ram usage:        6 bytes
  5054 ;; Hardware stack levels used: 1
  5055 ;; Hardware stack levels required when called: 10
  5056 ;; This function calls:
  5057 ;;		_vfpfcnvrt
  5058 ;; This function is called by:
  5059 ;;		_printf
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           	psect	text52
  5064   001614                     __ptext52:
  5065                           	callstack 0
  5066   001614                     _vfprintf:
  5067                           	callstack 114
  5068                           
  5069                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1546: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\source
      +                          s\c99\common\doprnt.c: 1547: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\comm
      +                          on\doprnt.c: 1549:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\
      +                          common\doprnt.c: 1551:     cfmt = (char *)fmt;
  5070                           
  5071                           ;incstack = 0
  5072   001614  C53D  F540         	movff	vfprintf@fmt,vfprintf@cfmt
  5073                           
  5074                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  5075   001618  D14D               	goto	i1Ll2205
  5076   00161A                     l3408:
  5077                           
  5078                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1559:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  5079   00161A  C53B  F52E         	movff	vfprintf@fp,vfpfcnvrt@fp
  5080   00161E  C53C  F52F         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5081   001622  0E40               	movlw	low vfprintf@cfmt
  5082   001624  6E30               	movwf	vfpfcnvrt@fmt^(0+1280),c
  5083   001626  0E05               	movlw	high vfprintf@cfmt
  5084   001628  6E31               	movwf	(vfpfcnvrt@fmt+1)^(0+1280),c
  5085   00162A  C53E  F532         	movff	vfprintf@ap,vfpfcnvrt@ap
  5086   00162E  C53F  F533         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5087   001632                     i1L__ptext53:
  5088                           	callstack 114
  5089   001632                     i1L_vfpfcnvrt:
  5090                           	callstack 114
  5091   001632                     i1Ll3356:
  5092                           	callstack 114
  5093                           
  5094                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1048: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1049: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\dopr
      +                          nt.c: 1050:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common
      +                          \doprnt.c: 1051:     int done, i;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1059:  } convarg;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\c
      +                          ommon\doprnt.c: 1062:     if ((*fmt)[0] == '%') {
  5095   001632  C530  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  5096   001636  C531  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5097   00163A  C4DF F4F6          	movff	indf2,tblptrl
  5098   00163E                     	if	1	;There is more than 1 active tblptr byte
  5099   00163E  0E16               	movlw	high __smallconst
  5100   001640  6EF7               	movwf	tblptrh,c
  5101   001642                     	endif
  5102   001642                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5103   001642  6AF8               	clrf	tblptru,c
  5104   001644                     	endif
  5105   001644                     	if	0	;tblptru may be non-zero
  5106   001644  0E00               	movlw	low (__smallconst shr (0+16))
  5107   001646  6EF8               	movwf	tblptru,c
  5108   001648                     	endif
  5109   001648  0008               	tblrd		*
  5110   00164A  50F5               	movf	tablat,w,c
  5111   00164C  0A25               	xorlw	37
  5112   00164E  E001 D11B          	bnz	i1Ll3380
  5113   001652  D001               	goto	i1Lu1390
  5114   001654                     i1Lu1391:
  5115                           	callstack 114
  5116   001654  D119               	goto	i1Ll3380
  5117   001656                     i1Lu1390:
  5118                           	callstack 114
  5119   001656                     i1Ll3358:
  5120                           	callstack 114
  5121                           
  5122                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1063:         ++*
      +                          fmt;
  5123   001656  C530  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  5124   00165A  C531  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5125   00165E  2ADF               	incf	indf2,f,c
  5126   001660                     i1Ll3360:
  5127                           	callstack 114
  5128                           
  5129                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1065:         fla
      +                          gs = width = 0;
  5130   001660  0105               	movlb	5	; () banked
  5131   001662  6B60               	clrf	_width& (0+255),b
  5132   001664  6B61               	clrf	(_width+1)& (0+255),b
  5133   001666                     i1Ll3362:
  5134                           	callstack 114
  5135                           
  5136                           ; BSR set to: 5
  5137                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1066:         pre
      +                          c = -1;
  5138   001666  6962               	setf	_prec& (0+255),b
  5139   001668  6963               	setf	(_prec+1)& (0+255),b
  5140   00166A                     i1Ll3364:
  5141                           	callstack 114
  5142                           
  5143                           ; BSR set to: 5
  5144                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1143:   cp = *fmt
      +                          ;
  5145   00166A  C530  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  5146   00166E  C531  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5147   001672  50DF               	movf	indf2,w,c
  5148   001674  6E3A               	movwf	vfpfcnvrt@cp^(0+1280),c
  5149   001676                     i1Ll3366:
  5150                           	callstack 114
  5151                           
  5152                           ; BSR set to: 5
  5153                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1213:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  5154   001676  C53A  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  5155   00167A                     	if	1	;There is more than 1 active tblptr byte
  5156   00167A  0E16               	movlw	high __smallconst
  5157   00167C  6EF7               	movwf	tblptrh,c
  5158   00167E                     	endif
  5159   00167E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5160   00167E  6AF8               	clrf	tblptru,c
  5161   001680                     	endif
  5162   001680                     	if	0	;tblptru may be non-zero
  5163   001680  0E00               	movlw	low (__smallconst shr (0+16))
  5164   001682  6EF8               	movwf	tblptru,c
  5165   001684                     	endif
  5166   001684  0008               	tblrd		*
  5167   001686  50F5               	movf	tablat,w,c
  5168   001688  0A64               	xorlw	100
  5169   00168A  E010               	bz	i1Ll3370
  5170   00168C  D001               	goto	i1Lu1400
  5171   00168E                     i1Lu1401:
  5172                           	callstack 114
  5173   00168E  D00E               	goto	i1Ll3370
  5174   001690                     i1Lu1400:
  5175                           	callstack 114
  5176   001690                     i1Ll3368:
  5177                           	callstack 114
  5178                           
  5179                           ; BSR set to: 5
  5180   001690  C53A  F4F6         	movff	vfpfcnvrt@cp,tblptrl
  5181   001694                     	if	1	;There is more than 1 active tblptr byte
  5182   001694  0E16               	movlw	high __smallconst
  5183   001696  6EF7               	movwf	tblptrh,c
  5184   001698                     	endif
  5185   001698                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5186   001698  6AF8               	clrf	tblptru,c
  5187   00169A                     	endif
  5188   00169A                     	if	0	;tblptru may be non-zero
  5189   00169A  0E00               	movlw	low (__smallconst shr (0+16))
  5190   00169C  6EF8               	movwf	tblptru,c
  5191   00169E                     	endif
  5192   00169E  0008               	tblrd		*
  5193   0016A0  50F5               	movf	tablat,w,c
  5194   0016A2  0A69               	xorlw	105
  5195   0016A4  E001 D0EA          	bnz	i1Ll3376
  5196   0016A8  D001               	goto	i1Lu1410
  5197   0016AA                     i1Lu1411:
  5198                           	callstack 114
  5199   0016AA  D0E8               	goto	i1Ll3376
  5200   0016AC                     i1Lu1410:
  5201                           	callstack 114
  5202   0016AC                     i1Ll3370:
  5203                           	callstack 114
  5204                           
  5205                           ; BSR set to: 5
  5206                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1256:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  5207   0016AC  C532  F4D9         	movff	vfpfcnvrt@ap,fsr2l
  5208   0016B0  C533  F4DA         	movff	vfpfcnvrt@ap+1,fsr2h
  5209   0016B4  C4DF F534          	movff	indf2,??_vfpfcnvrt
  5210   0016B8  0E02               	movlw	2
  5211   0016BA  26DE               	addwf	postinc2,f,c
  5212   0016BC  C4DF F535          	movff	indf2,??_vfpfcnvrt+1
  5213   0016C0  0E00               	movlw	0
  5214   0016C2  22DD               	addwfc	postdec2,f,c
  5215   0016C4  C534  F4D9         	movff	??_vfpfcnvrt,fsr2l
  5216   0016C8  C535  F4DA         	movff	??_vfpfcnvrt+1,fsr2h
  5217   0016CC  C4DE F536          	movff	postinc2,vfpfcnvrt@convarg
  5218   0016D0  C4DD F537          	movff	postdec2,vfpfcnvrt@convarg+1
  5219                           
  5220                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1258:    *fmt = c
      +                          p+1;
  5221   0016D4  283A               	incf	vfpfcnvrt@cp^(0+1280),w,c
  5222   0016D6  C530  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  5223   0016DA  C531  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5224   0016DE  6EDF               	movwf	indf2,c
  5225   0016E0                     i1Ll3372:
  5226                           	callstack 114
  5227                           
  5228                           ; BSR set to: 5
  5229                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1259:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  5230   0016E0  C52E  F521         	movff	vfpfcnvrt@fp,dtoa@fp
  5231   0016E4  C52F  F522         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5232   0016E8  C536  F523         	movff	vfpfcnvrt@convarg,dtoa@d
  5233   0016EC  C537  F524         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  5234   0016F0                     i2L__ptext54:
  5235                           	callstack 114
  5236   0016F0                     i2L_dtoa:
  5237                           	callstack 114
  5238   0016F0                     i2Ll3306:
  5239                           	callstack 114
  5240                           
  5241                           ; BSR set to: 5
  5242                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 470: static __att
      +                          ribute__((inline)) void dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.
      +                          41\pic\sources\c99\common\doprnt.c: 471: {;C:\Program Files\Microchip\xc8\v2.41\pic\sour
      +                          ces\c99\common\doprnt.c: 472:  char s;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\
      +                          c99\common\doprnt.c: 473:     int i, p, w;;C:\Program Files\Microchip\xc8\v2.41\pic\sour
      +                          ces\c99\common\doprnt.c: 476:     s = d < 0 ? 1 : 0;
  5243   0016F0  BE24               	btfsc	(dtoa@d+1)^(0+1280),7,c
  5244   0016F2  D001               	goto	i2Lu1291
  5245   0016F4  D002               	goto	i2Lu1290
  5246   0016F6                     i2Lu1291:
  5247                           	callstack 114
  5248   0016F6  0E01               	movlw	1
  5249   0016F8  D001               	goto	i2Lu1300
  5250   0016FA                     i2Lu1290:
  5251                           	callstack 114
  5252   0016FA  0E00               	movlw	0
  5253   0016FC                     i2Lu1300:
  5254                           	callstack 114
  5255   0016FC  6E2D               	movwf	dtoa@s^(0+1280),c
  5256   0016FE                     i2Ll3308:
  5257                           	callstack 114
  5258                           
  5259                           ; BSR set to: 5
  5260                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 477:     if (s) {
  5261   0016FE  502D               	movf	dtoa@s^(0+1280),w,c
  5262   001700  E006               	bz	i2Ll3312
  5263   001702  D001               	goto	i2Lu1310
  5264   001704                     i2Lu1311:
  5265                           	callstack 114
  5266   001704  D004               	goto	i2Ll3312
  5267   001706                     i2Lu1310:
  5268                           	callstack 114
  5269   001706                     i2Ll3310:
  5270                           	callstack 114
  5271                           
  5272                           ; BSR set to: 5
  5273                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 478:         d = 
      +                          -d;
  5274   001706  6C23               	negf	dtoa@d^(0+1280),c
  5275   001708  1E24               	comf	(dtoa@d+1)^(0+1280),f,c
  5276   00170A  B0D8               	btfsc	status,0,c
  5277   00170C  2A24               	incf	(dtoa@d+1)^(0+1280),f,c
  5278   00170E                     i2Ll3312:
  5279                           	callstack 114
  5280                           
  5281                           ; BSR set to: 5
  5282                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 487:     p = (0 <
      +                          = prec) ? prec : 1;
  5283   00170E  BF63               	btfsc	(_prec+1)& (0+255),7,b
  5284   001710  D001               	goto	i2Lu1320
  5285   001712                     i2Lu1321:
  5286                           	callstack 114
  5287   001712  D005               	goto	i2Ll2184
  5288   001714                     i2Lu1320:
  5289                           	callstack 114
  5290   001714                     i2Ll3314:
  5291                           	callstack 114
  5292                           
  5293                           ; BSR set to: 5
  5294   001714  0E00               	movlw	0
  5295   001716  6E28               	movwf	(dtoa@p+1)^(0+1280),c
  5296   001718  0E01               	movlw	1
  5297   00171A  6E27               	movwf	dtoa@p^(0+1280),c
  5298   00171C  D004               	goto	i2Ll2186
  5299   00171E                     i2Ll2184:
  5300                           	callstack 114
  5301                           
  5302                           ; BSR set to: 5
  5303   00171E  C562  F527         	movff	_prec,dtoa@p
  5304   001722  C563  F528         	movff	_prec+1,dtoa@p+1
  5305   001726                     i2Ll2186:
  5306                           	callstack 114
  5307                           
  5308                           ; BSR set to: 5
  5309                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 488:     w = widt
      +                          h;
  5310   001726  C560  F529         	movff	_width,dtoa@w
  5311   00172A  C561  F52A         	movff	_width+1,dtoa@w+1
  5312   00172E                     i2Ll3316:
  5313                           	callstack 114
  5314                           
  5315                           ; BSR set to: 5
  5316                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 489:     if (s
  5317   00172E  502D               	movf	dtoa@s^(0+1280),w,c
  5318   001730  E011               	bz	i2Ll2187
  5319   001732  D001               	goto	i2Lu1330
  5320   001734                     i2Lu1331:
  5321                           	callstack 114
  5322   001734  D00F               	goto	i2Ll2187
  5323   001736                     i2Lu1330:
  5324                           	callstack 114
  5325   001736                     i2Ll3318:
  5326                           	callstack 114
  5327                           
  5328                           ; BSR set to: 5
  5329                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 493:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 494:         --w;
  5330   001736  0629               	decf	dtoa@w^(0+1280),f,c
  5331   001738  A0D8               	btfss	status,0,c
  5332   00173A  062A               	decf	(dtoa@w+1)^(0+1280),f,c
  5333   00173C                     i2Ll3320:
  5334                           	callstack 114
  5335                           
  5336                           ; BSR set to: 5
  5337                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 495:   s = s ? '-
      +                          ' : '+';
  5338   00173C  502D               	movf	dtoa@s^(0+1280),w,c
  5339   00173E  E105               	bnz	i2Ll3324
  5340   001740  D001               	goto	i2Lu1340
  5341   001742                     i2Lu1341:
  5342                           	callstack 114
  5343   001742  D003               	goto	i2Ll3324
  5344   001744                     i2Lu1340:
  5345                           	callstack 114
  5346   001744                     i2Ll3322:
  5347                           	callstack 114
  5348                           
  5349                           ; BSR set to: 5
  5350   001744  6A26               	clrf	(_dtoa$3558+1)^(0+1280),c
  5351   001746  0E2B               	movlw	43
  5352   001748  D002               	goto	L1
  5353   00174A                     i2Ll3324:
  5354                           	callstack 114
  5355                           
  5356                           ; BSR set to: 5
  5357   00174A  6A26               	clrf	(_dtoa$3558+1)^(0+1280),c
  5358   00174C  0E2D               	movlw	45
  5359   00174E                     L1:
  5360   00174E  6E25               	movwf	_dtoa$3558^(0+1280),c
  5361   001750                     i2Ll3326:
  5362                           	callstack 114
  5363                           
  5364                           ; BSR set to: 5
  5365   001750  C525  F52D         	movff	_dtoa$3558,dtoa@s
  5366   001754                     i2Ll2187:
  5367                           	callstack 114
  5368                           
  5369                           ; BSR set to: 5
  5370                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 505:     i = size
      +                          of(dbuf) - 1;
  5371   001754  6A2C               	clrf	(dtoa@i+1)^(0+1280),c
  5372   001756  0E1F               	movlw	31
  5373   001758  6E2B               	movwf	dtoa@i^(0+1280),c
  5374   00175A                     i2Ll3328:
  5375                           	callstack 114
  5376                           
  5377                           ; BSR set to: 5
  5378                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 506:     dbuf[i] 
      +                          = '\0';
  5379   00175A  6B87               	clrf	(_dbuf+31)& (0+255),b
  5380   00175C  D02E               	goto	i2Ll3340
  5381   00175E                     i2Ll3330:
  5382                           	callstack 114
  5383                           
  5384                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 511:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 512:         --i;
  5385   00175E  062B               	decf	dtoa@i^(0+1280),f,c
  5386   001760  A0D8               	btfss	status,0,c
  5387   001762  062C               	decf	(dtoa@i+1)^(0+1280),f,c
  5388   001764                     i2Ll3332:
  5389                           	callstack 114
  5390                           
  5391                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 513:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  5392   001764  0E68               	movlw	low _dbuf
  5393   001766  242B               	addwf	dtoa@i^(0+1280),w,c
  5394   001768  6ED9               	movwf	fsr2l,c
  5395   00176A  0E05               	movlw	high _dbuf
  5396   00176C  202C               	addwfc	(dtoa@i+1)^(0+1280),w,c
  5397   00176E  6EDA               	movwf	fsr2h,c
  5398   001770  C523  F504         	movff	dtoa@d,___awmod@dividend
  5399   001774  C524  F505         	movff	dtoa@d+1,___awmod@dividend+1
  5400   001778  6A07               	clrf	(___awmod@divisor+1)^(0+1280),c
  5401   00177A  0E0A               	movlw	10
  5402   00177C  6E06               	movwf	___awmod@divisor^(0+1280),c
  5403   00177E  EC7C  F00F         	call	___awmod	;wreg free
  5404   001782  C504  F50A         	movff	?___awmod,abs@a
  5405   001786  C505  F50B         	movff	?___awmod+1,abs@a+1
  5406   00178A  EC06  F011         	call	_abs	;wreg free
  5407   00178E  500A               	movf	?_abs^(0+1280),w,c
  5408   001790  0F30               	addlw	48
  5409   001792  6EDF               	movwf	indf2,c
  5410   001794                     i2Ll3334:
  5411                           	callstack 114
  5412                           
  5413                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 514:         --p;
  5414   001794  0627               	decf	dtoa@p^(0+1280),f,c
  5415   001796  A0D8               	btfss	status,0,c
  5416   001798  0628               	decf	(dtoa@p+1)^(0+1280),f,c
  5417   00179A                     i2Ll3336:
  5418                           	callstack 114
  5419                           
  5420                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 515:         --w;
  5421   00179A  0629               	decf	dtoa@w^(0+1280),f,c
  5422   00179C  A0D8               	btfss	status,0,c
  5423   00179E  062A               	decf	(dtoa@w+1)^(0+1280),f,c
  5424   0017A0                     i2Ll3338:
  5425                           	callstack 114
  5426                           
  5427                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 516:         d = 
      +                          d / 10;
  5428   0017A0  C523  F504         	movff	dtoa@d,___awdiv@dividend
  5429   0017A4  C524  F505         	movff	dtoa@d+1,___awdiv@dividend+1
  5430   0017A8  6A07               	clrf	(___awdiv@divisor+1)^(0+1280),c
  5431   0017AA  0E0A               	movlw	10
  5432   0017AC  6E06               	movwf	___awdiv@divisor^(0+1280),c
  5433   0017AE  EC0C  F00F         	call	___awdiv	;wreg free
  5434   0017B2  C504  F523         	movff	?___awdiv,dtoa@d
  5435   0017B6  C505  F524         	movff	?___awdiv+1,dtoa@d+1
  5436   0017BA                     i2Ll3340:
  5437                           	callstack 114
  5438                           
  5439                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 507:     while (!
      +                          (i < 1) && (d || (0 < p)
  5440   0017BA  BE2C               	btfsc	(dtoa@i+1)^(0+1280),7,c
  5441   0017BC  D013               	goto	i2Ll3346
  5442   0017BE  502C               	movf	(dtoa@i+1)^(0+1280),w,c
  5443   0017C0  E104               	bnz	i2Lu1350
  5444   0017C2  042B               	decf	dtoa@i^(0+1280),w,c
  5445   0017C4  E30F               	bnc	i2Ll3346
  5446   0017C6  D001               	goto	i2Lu1350
  5447   0017C8                     i2Lu1351:
  5448                           	callstack 114
  5449   0017C8  D00D               	goto	i2Ll3346
  5450   0017CA                     i2Lu1350:
  5451                           	callstack 114
  5452   0017CA                     i2Ll3342:
  5453                           	callstack 114
  5454   0017CA  5023               	movf	dtoa@d^(0+1280),w,c
  5455   0017CC  1024               	iorwf	(dtoa@d+1)^(0+1280),w,c
  5456   0017CE  E1C7               	bnz	i2Ll3330
  5457   0017D0  D001               	goto	i2Lu1360
  5458   0017D2                     i2Lu1361:
  5459                           	callstack 114
  5460   0017D2  D7C5               	goto	i2Ll3330
  5461   0017D4                     i2Lu1360:
  5462                           	callstack 114
  5463   0017D4                     i2Ll3344:
  5464                           	callstack 114
  5465   0017D4  BE28               	btfsc	(dtoa@p+1)^(0+1280),7,c
  5466   0017D6  D006               	goto	i2Lu1370
  5467   0017D8  5028               	movf	(dtoa@p+1)^(0+1280),w,c
  5468   0017DA  E1C1               	bnz	i2Ll3330
  5469   0017DC  0427               	decf	dtoa@p^(0+1280),w,c
  5470   0017DE  E2BF               	bc	i2Ll3330
  5471   0017E0  D001               	goto	i2Lu1370
  5472   0017E2                     i2Lu1371:
  5473                           	callstack 114
  5474   0017E2  D7BD               	goto	i2Ll3330
  5475   0017E4                     i2Lu1370:
  5476                           	callstack 114
  5477   0017E4                     i2Ll3346:
  5478                           	callstack 114
  5479                           
  5480                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 520:     if (s !=
      +                           0) {
  5481   0017E4  502D               	movf	dtoa@s^(0+1280),w,c
  5482   0017E6  E00D               	bz	i2Ll3352
  5483   0017E8  D001               	goto	i2Lu1380
  5484   0017EA                     i2Lu1381:
  5485                           	callstack 114
  5486   0017EA  D00B               	goto	i2Ll3352
  5487   0017EC                     i2Lu1380:
  5488                           	callstack 114
  5489   0017EC                     i2Ll3348:
  5490                           	callstack 114
  5491                           
  5492                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 521:         --i;
  5493   0017EC  062B               	decf	dtoa@i^(0+1280),f,c
  5494   0017EE  A0D8               	btfss	status,0,c
  5495   0017F0  062C               	decf	(dtoa@i+1)^(0+1280),f,c
  5496   0017F2                     i2Ll3350:
  5497                           	callstack 114
  5498                           
  5499                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 522:         dbuf
      +                          [i] = s;
  5500   0017F2  0E68               	movlw	low _dbuf
  5501   0017F4  242B               	addwf	dtoa@i^(0+1280),w,c
  5502   0017F6  6ED9               	movwf	fsr2l,c
  5503   0017F8  0E05               	movlw	high _dbuf
  5504   0017FA  202C               	addwfc	(dtoa@i+1)^(0+1280),w,c
  5505   0017FC  6EDA               	movwf	fsr2h,c
  5506   0017FE  C52D  F4DF         	movff	dtoa@s,indf2
  5507   001802                     i2Ll3352:
  5508                           	callstack 114
  5509                           
  5510                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 526:     return (
      +                          void) pad(fp, &dbuf[i], w);
  5511   001802  C521  F516         	movff	dtoa@fp,pad@fp
  5512   001806  C522  F517         	movff	dtoa@fp+1,pad@fp+1
  5513   00180A  0E68               	movlw	low _dbuf
  5514   00180C  242B               	addwf	dtoa@i^(0+1280),w,c
  5515   00180E  6E18               	movwf	pad@buf^(0+1280),c
  5516   001810  0E05               	movlw	high _dbuf
  5517   001812  202C               	addwfc	(dtoa@i+1)^(0+1280),w,c
  5518   001814  6E19               	movwf	(pad@buf+1)^(0+1280),c
  5519   001816  C529  F51A         	movff	dtoa@w,pad@p
  5520   00181A  C52A  F51B         	movff	dtoa@w+1,pad@p+1
  5521   00181E                     i3L__ptext55:
  5522                           	callstack 114
  5523   00181E                     i3L_pad:
  5524                           	callstack 114
  5525   00181E                     i3Ll3290:
  5526                           	callstack 114
  5527                           
  5528                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 152: static __att
      +                          ribute__((inline)) void pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v
      +                          2.41\pic\sources\c99\common\doprnt.c: 153: {;C:\Program Files\Microchip\xc8\v2.41\pic\so
      +                          urces\c99\common\doprnt.c: 154:     int i, w;;C:\Program Files\Microchip\xc8\v2.41\pic\s
      +                          ources\c99\common\doprnt.c: 164:     w = (p < 0) ? 0 : p;
  5529   00181E  BE1B               	btfsc	(pad@p+1)^(0+1280),7,c
  5530   001820  D007               	goto	i3Ll2173
  5531   001822  D001               	goto	i3Lu1260
  5532   001824                     i3Lu1261:
  5533                           	callstack 114
  5534   001824  D005               	goto	i3Ll2173
  5535   001826                     i3Lu1260:
  5536                           	callstack 114
  5537   001826                     i3Ll3292:
  5538                           	callstack 114
  5539   001826  C51A  F51F         	movff	pad@p,pad@w
  5540   00182A  C51B  F520         	movff	pad@p+1,pad@w+1
  5541   00182E  D002               	goto	i3Ll2175
  5542   001830                     i3Ll2173:
  5543                           	callstack 114
  5544   001830  6A1F               	clrf	pad@w^(0+1280),c
  5545   001832  6A20               	clrf	(pad@w+1)^(0+1280),c
  5546   001834                     i3Ll2175:
  5547                           	callstack 114
  5548                           
  5549                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 165:     i = 0;
  5550   001834  6A1D               	clrf	pad@i^(0+1280),c
  5551   001836  6A1E               	clrf	(pad@i+1)^(0+1280),c
  5552   001838  D00B               	goto	i3Ll3298
  5553   00183A                     i3Ll3294:
  5554                           	callstack 114
  5555                           
  5556                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 167:         fput
      +                          c(' ', fp);
  5557   00183A  6A07               	clrf	(fputc@c+1)^(0+1280),c
  5558   00183C  0E20               	movlw	32
  5559   00183E  6E06               	movwf	fputc@c^(0+1280),c
  5560   001840  C516  F508         	movff	pad@fp,fputc@fp
  5561   001844  C517  F509         	movff	pad@fp+1,fputc@fp+1
  5562   001848  EC3C  F00E         	call	_fputc	;wreg free
  5563   00184C                     i3Ll3296:
  5564                           	callstack 114
  5565                           
  5566                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 168:         ++i;
  5567   00184C  4A1D               	infsnz	pad@i^(0+1280),f,c
  5568   00184E  2A1E               	incf	(pad@i+1)^(0+1280),f,c
  5569   001850                     i3Ll3298:
  5570                           	callstack 114
  5571                           
  5572                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 166:     while (i
      +                           < w) {
  5573   001850  501F               	movf	pad@w^(0+1280),w,c
  5574   001852  5C1D               	subwf	pad@i^(0+1280),w,c
  5575   001854  501E               	movf	(pad@i+1)^(0+1280),w,c
  5576   001856  0A80               	xorlw	128
  5577   001858  6E1C               	movwf	??_pad^(0+1280),c
  5578   00185A  5020               	movf	(pad@w+1)^(0+1280),w,c
  5579   00185C  0A80               	xorlw	128
  5580   00185E  581C               	subwfb	??_pad^(0+1280),w,c
  5581   001860  E3EC               	bnc	i3Ll3294
  5582   001862  D001               	goto	i3Lu1270
  5583   001864                     i3Lu1271:
  5584                           	callstack 114
  5585   001864  D7EA               	goto	i3Ll3294
  5586   001866                     i3Lu1270:
  5587                           	callstack 114
  5588   001866                     i3Ll3300:
  5589                           	callstack 114
  5590                           
  5591                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 175:         fput
      +                          s((const char *)buf, fp);
  5592   001866  C518  F50F         	movff	pad@buf,fputs@s
  5593   00186A  C519  F510         	movff	pad@buf+1,fputs@s+1
  5594   00186E  C516  F511         	movff	pad@fp,fputs@fp
  5595   001872  C517  F512         	movff	pad@fp+1,fputs@fp+1
  5596   001876  ECED  F010         	call	_fputs	;wreg free
  5597   00187A                     i3Ll2179:
  5598                           	callstack 114
  5599   00187A                     i2Ll2198:
  5600                           	callstack 114
  5601   00187A  D01C               	goto	i1Ll2205
  5602   00187C                     i1Ll3376:
  5603                           	callstack 114
  5604                           
  5605                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1535:         ++*
      +                          fmt;
  5606   00187C  C530  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  5607   001880  C531  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5608   001884  2ADF               	incf	indf2,f,c
  5609   001886  D016               	goto	i1Ll2205
  5610   001888                     i1Ll3380:
  5611                           	callstack 114
  5612                           
  5613                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1540:     fputc((
      +                          int)(*fmt)[0], fp);
  5614   001888  C530  F4D9         	movff	vfpfcnvrt@fmt,fsr2l
  5615   00188C  C531  F4DA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5616   001890  C4DF F4F6          	movff	indf2,tblptrl
  5617   001894                     	if	1	;There is more than 1 active tblptr byte
  5618   001894  0E16               	movlw	high __smallconst
  5619   001896  6EF7               	movwf	tblptrh,c
  5620   001898                     	endif
  5621   001898                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5622   001898  6AF8               	clrf	tblptru,c
  5623   00189A                     	endif
  5624   00189A                     	if	0	;tblptru may be non-zero
  5625   00189A  0E00               	movlw	low (__smallconst shr (0+16))
  5626   00189C  6EF8               	movwf	tblptru,c
  5627   00189E                     	endif
  5628   00189E  0008               	tblrd		*
  5629   0018A0  50F5               	movf	tablat,w,c
  5630   0018A2  6E06               	movwf	fputc@c^(0+1280),c
  5631   0018A4  6A07               	clrf	(fputc@c+1)^(0+1280),c
  5632   0018A6  C52E  F508         	movff	vfpfcnvrt@fp,fputc@fp
  5633   0018AA  C52F  F509         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5634   0018AE  EC3C  F00E         	call	_fputc	;wreg free
  5635   0018B2  D7E4               	goto	i1Ll3376
  5636   0018B4                     i1Ll2205:
  5637                           	callstack 114
  5638                           
  5639                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1555:     while (
      +                          *cfmt) {
  5640   0018B4  C540  F4F6         	movff	vfprintf@cfmt,tblptrl
  5641   0018B8                     	if	1	;There is more than 1 active tblptr byte
  5642   0018B8  0E16               	movlw	high __smallconst
  5643   0018BA  6EF7               	movwf	tblptrh,c
  5644   0018BC                     	endif
  5645   0018BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5646   0018BC  6AF8               	clrf	tblptru,c
  5647   0018BE                     	endif
  5648   0018BE                     	if	0	;tblptru may be non-zero
  5649   0018BE                     	endif
  5650   0018BE  0008               	tblrd		*
  5651   0018C0  50F5               	movf	tablat,w,c
  5652   0018C2  E001 D6AA          	bnz	l3408
  5653                           
  5654                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c: 1564:  return 0;
  5655   0018C6  6A3B               	clrf	?_vfprintf^(0+1280),c
  5656   0018C8  6A3C               	clrf	(?_vfprintf+1)^(0+1280),c
  5657   0018CA  0012               	return		;funcret
  5658   0018CC                     __end_of_vfprintf:
  5659                           	callstack 0
  5660                           
  5661 ;; *************** function _vfpfcnvrt *****************
  5662 ;; Defined at:
  5663 ;;		line 1048 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  5666 ;;		 -> NULL(0), 
  5667 ;;  fmt             2   47[COMRAM] PTR PTR unsigned char 
  5668 ;;		 -> vfprintf@cfmt(1), 
  5669 ;;  ap              2   49[COMRAM] PTR PTR void 
  5670 ;;		 -> printf@ap(2), 
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;  convarg         4   53[COMRAM] struct .
  5673 ;;  i               2    0        int 
  5674 ;;  done            2    0        int 
  5675 ;;  cp              1   57[COMRAM] PTR unsigned char 
  5676 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  5677 ;;  c               1    0        unsigned char 
  5678 ;; Return value:  Size  Location     Type
  5679 ;;                  1    wreg      void 
  5680 ;; Registers used:
  5681 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5682 ;; Tracked objects:
  5683 ;;		On entry : 0/5
  5684 ;;		On exit  : 0/0
  5685 ;;		Unchanged: 0/0
  5686 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5687 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5688 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5689 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5690 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5691 ;;Total ram usage:       13 bytes
  5692 ;; Hardware stack levels used: 1
  5693 ;; Hardware stack levels required when called: 9
  5694 ;; This function calls:
  5695 ;;		_dtoa
  5696 ;;		_fputc
  5697 ;; This function is called by:
  5698 ;;		_vfprintf
  5699 ;; This function uses a non-reentrant model
  5700 ;;
  5701                           
  5702                           	psect	text53
  5703   000000                     __ptext53:
  5704                           	callstack 0
  5705   000000                     _vfpfcnvrt:
  5706                           	callstack 114
  5707   000000                     iL91:
  5708   000000                     iL142:
  5709   000000                     iL143:
  5710   000000                     iL92:
  5711   000000                     __end_of_vfpfcnvrt:
  5712                           	callstack 0
  5713                           
  5714 ;; *************** function _dtoa *****************
  5715 ;; Defined at:
  5716 ;;		line 470 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;  fp              2   32[COMRAM] PTR struct _IO_FILE
  5719 ;;		 -> NULL(0), 
  5720 ;;  d               2   34[COMRAM] int 
  5721 ;; Auto vars:     Size  Location     Type
  5722 ;;  i               2   42[COMRAM] int 
  5723 ;;  w               2   40[COMRAM] int 
  5724 ;;  p               2   38[COMRAM] int 
  5725 ;;  s               1   44[COMRAM] unsigned char 
  5726 ;; Return value:  Size  Location     Type
  5727 ;;                  1    wreg      void 
  5728 ;; Registers used:
  5729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5730 ;; Tracked objects:
  5731 ;;		On entry : 3F/5
  5732 ;;		On exit  : 0/0
  5733 ;;		Unchanged: 0/0
  5734 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5735 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5736 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5738 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5739 ;;Total ram usage:       13 bytes
  5740 ;; Hardware stack levels used: 1
  5741 ;; Hardware stack levels required when called: 8
  5742 ;; This function calls:
  5743 ;;		___awdiv
  5744 ;;		___awmod
  5745 ;;		_abs
  5746 ;;		_pad
  5747 ;; This function is called by:
  5748 ;;		_vfpfcnvrt
  5749 ;; This function uses a non-reentrant model
  5750 ;;
  5751                           
  5752                           	psect	text54
  5753   000000                     __ptext54:
  5754                           	callstack 0
  5755   000000                     _dtoa:
  5756                           	callstack 114
  5757   000000                     iL159:
  5758   000000                     iL160:
  5759   000000                     __end_of_dtoa:
  5760                           	callstack 0
  5761                           
  5762 ;; *************** function _pad *****************
  5763 ;; Defined at:
  5764 ;;		line 152 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\doprnt.c"
  5765 ;; Parameters:    Size  Location     Type
  5766 ;;  fp              2   21[COMRAM] PTR struct _IO_FILE
  5767 ;;		 -> NULL(0), 
  5768 ;;  buf             2   23[COMRAM] PTR unsigned char 
  5769 ;;		 -> dbuf(32), 
  5770 ;;  p               2   25[COMRAM] int 
  5771 ;; Auto vars:     Size  Location     Type
  5772 ;;  w               2   30[COMRAM] int 
  5773 ;;  i               2   28[COMRAM] int 
  5774 ;; Return value:  Size  Location     Type
  5775 ;;                  1    wreg      void 
  5776 ;; Registers used:
  5777 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5778 ;; Tracked objects:
  5779 ;;		On entry : 0/5
  5780 ;;		On exit  : 0/0
  5781 ;;		Unchanged: 0/0
  5782 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5783 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5784 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5786 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5787 ;;Total ram usage:       11 bytes
  5788 ;; Hardware stack levels used: 1
  5789 ;; Hardware stack levels required when called: 7
  5790 ;; This function calls:
  5791 ;;		_fputc
  5792 ;;		_fputs
  5793 ;; This function is called by:
  5794 ;;		_dtoa
  5795 ;; This function uses a non-reentrant model
  5796 ;;
  5797                           
  5798                           	psect	text55
  5799   000000                     __ptext55:
  5800                           	callstack 0
  5801   000000                     _pad:
  5802                           	callstack 0
  5803   000000                     __end_of_pad:
  5804                           	callstack 0
  5805                           
  5806 ;; *************** function _fputs *****************
  5807 ;; Defined at:
  5808 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputs.c"
  5809 ;; Parameters:    Size  Location     Type
  5810 ;;  s               2   14[COMRAM] PTR const unsigned char 
  5811 ;;		 -> dbuf(32), 
  5812 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5813 ;;		 -> NULL(0), 
  5814 ;; Auto vars:     Size  Location     Type
  5815 ;;  i               2   19[COMRAM] int 
  5816 ;;  c               1   18[COMRAM] unsigned char 
  5817 ;; Return value:  Size  Location     Type
  5818 ;;                  2   14[COMRAM] int 
  5819 ;; Registers used:
  5820 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5821 ;; Tracked objects:
  5822 ;;		On entry : 0/5
  5823 ;;		On exit  : 0/0
  5824 ;;		Unchanged: 0/0
  5825 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5826 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5827 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5829 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5830 ;;Total ram usage:        7 bytes
  5831 ;; Hardware stack levels used: 1
  5832 ;; Hardware stack levels required when called: 6
  5833 ;; This function calls:
  5834 ;;		_fputc
  5835 ;; This function is called by:
  5836 ;;		_pad
  5837 ;; This function uses a non-reentrant model
  5838 ;;
  5839                           
  5840                           	psect	text56
  5841   0021DA                     __ptext56:
  5842                           	callstack 0
  5843   0021DA                     _fputs:
  5844                           	callstack 114
  5845                           
  5846                           ;incstack = 0
  5847   0021DA  6A14               	clrf	fputs@i^(0+1280),c
  5848   0021DC  6A15               	clrf	(fputs@i+1)^(0+1280),c
  5849   0021DE  D00B               	goto	l3208
  5850   0021E0                     l3204:
  5851   0021E0  C513  F506         	movff	fputs@c,fputc@c
  5852   0021E4  6A07               	clrf	(fputc@c+1)^(0+1280),c
  5853   0021E6  C511  F508         	movff	fputs@fp,fputc@fp
  5854   0021EA  C512  F509         	movff	fputs@fp+1,fputc@fp+1
  5855   0021EE  EC3C  F00E         	call	_fputc	;wreg free
  5856   0021F2  4A14               	infsnz	fputs@i^(0+1280),f,c
  5857   0021F4  2A15               	incf	(fputs@i+1)^(0+1280),f,c
  5858   0021F6                     l3208:
  5859   0021F6  5014               	movf	fputs@i^(0+1280),w,c
  5860   0021F8  240F               	addwf	fputs@s^(0+1280),w,c
  5861   0021FA  6ED9               	movwf	fsr2l,c
  5862   0021FC  5015               	movf	(fputs@i+1)^(0+1280),w,c
  5863   0021FE  2010               	addwfc	(fputs@s+1)^(0+1280),w,c
  5864   002200  6EDA               	movwf	fsr2h,c
  5865   002202  50DF               	movf	indf2,w,c
  5866   002204  6E13               	movwf	fputs@c^(0+1280),c
  5867   002206  5013               	movf	fputs@c^(0+1280),w,c
  5868   002208  E1EB               	bnz	l3204
  5869   00220A  0012               	return		;funcret
  5870   00220C                     __end_of_fputs:
  5871                           	callstack 0
  5872                           
  5873 ;; *************** function _fputc *****************
  5874 ;; Defined at:
  5875 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\nf_fputc.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;  c               2    5[COMRAM] int 
  5878 ;;  fp              2    7[COMRAM] PTR struct _IO_FILE
  5879 ;;		 -> NULL(0), 
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;		None
  5882 ;; Return value:  Size  Location     Type
  5883 ;;                  2    5[COMRAM] int 
  5884 ;; Registers used:
  5885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5886 ;; Tracked objects:
  5887 ;;		On entry : 0/5
  5888 ;;		On exit  : 0/0
  5889 ;;		Unchanged: 0/0
  5890 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5891 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5894 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5895 ;;Total ram usage:        9 bytes
  5896 ;; Hardware stack levels used: 1
  5897 ;; Hardware stack levels required when called: 5
  5898 ;; This function calls:
  5899 ;;		_putch
  5900 ;; This function is called by:
  5901 ;;		_pad
  5902 ;;		_vfpfcnvrt
  5903 ;;		_fputs
  5904 ;; This function uses a non-reentrant model
  5905 ;;
  5906                           
  5907                           	psect	text57
  5908   001C78                     __ptext57:
  5909                           	callstack 0
  5910   001C78                     _fputc:
  5911                           	callstack 117
  5912                           
  5913                           ;incstack = 0
  5914   001C78  5008               	movf	fputc@fp^(0+1280),w,c
  5915   001C7A  1009               	iorwf	(fputc@fp+1)^(0+1280),w,c
  5916   001C7C  E003               	bz	u1100
  5917   001C7E  5008               	movf	fputc@fp^(0+1280),w,c
  5918   001C80  1009               	iorwf	(fputc@fp+1)^(0+1280),w,c
  5919   001C82  E103               	bnz	l3194
  5920   001C84                     u1100:
  5921   001C84  5006               	movf	fputc@c^(0+1280),w,c
  5922   001C86  EF2B  F012         	goto	_putch
  5923   001C8A                     l3194:
  5924   001C8A  EE20 F00A          	lfsr	2,10
  5925   001C8E  5008               	movf	fputc@fp^(0+1280),w,c
  5926   001C90  26D9               	addwf	fsr2l,f,c
  5927   001C92  5009               	movf	(fputc@fp+1)^(0+1280),w,c
  5928   001C94  22DA               	addwfc	fsr2h,f,c
  5929   001C96  50DE               	movf	postinc2,w,c
  5930   001C98  10DE               	iorwf	postinc2,w,c
  5931   001C9A  E016               	bz	u1120
  5932   001C9C  EE20 F00A          	lfsr	2,10
  5933   001CA0  5008               	movf	fputc@fp^(0+1280),w,c
  5934   001CA2  26D9               	addwf	fsr2l,f,c
  5935   001CA4  5009               	movf	(fputc@fp+1)^(0+1280),w,c
  5936   001CA6  22DA               	addwfc	fsr2h,f,c
  5937   001CA8  EE10 F003          	lfsr	1,3
  5938   001CAC  5008               	movf	fputc@fp^(0+1280),w,c
  5939   001CAE  26E1               	addwf	fsr1l,f,c
  5940   001CB0  5009               	movf	(fputc@fp+1)^(0+1280),w,c
  5941   001CB2  22E2               	addwfc	fsr1h,f,c
  5942   001CB4  50DE               	movf	postinc2,w,c
  5943   001CB6  5CE6               	subwf	postinc1,w,c
  5944   001CB8  50E6               	movf	postinc1,w,c
  5945   001CBA  0A80               	xorlw	128
  5946   001CBC  6E0E               	movwf	(??_fputc+4)^(0+1280),c
  5947   001CBE  50DE               	movf	postinc2,w,c
  5948   001CC0  0A80               	xorlw	128
  5949   001CC2  580E               	subwfb	(??_fputc+4)^(0+1280),w,c
  5950   001CC4  B0D8               	btfsc	status,0,c
  5951   001CC6  0012               	return	
  5952   001CC8                     u1120:
  5953   001CC8  EE20 F003          	lfsr	2,3
  5954   001CCC  5008               	movf	fputc@fp^(0+1280),w,c
  5955   001CCE  26D9               	addwf	fsr2l,f,c
  5956   001CD0  5009               	movf	(fputc@fp+1)^(0+1280),w,c
  5957   001CD2  22DA               	addwfc	fsr2h,f,c
  5958   001CD4  C4DE F50A          	movff	postinc2,??_fputc
  5959   001CD8  C4DD F50B          	movff	postdec2,??_fputc+1
  5960   001CDC  C508  F4D9         	movff	fputc@fp,fsr2l
  5961   001CE0  C509  F4DA         	movff	fputc@fp+1,fsr2h
  5962   001CE4  C4DE F50C          	movff	postinc2,??_fputc+2
  5963   001CE8  C4DD F50D          	movff	postdec2,??_fputc+3
  5964   001CEC  500A               	movf	??_fputc^(0+1280),w,c
  5965   001CEE  240C               	addwf	(??_fputc+2)^(0+1280),w,c
  5966   001CF0  6ED9               	movwf	fsr2l,c
  5967   001CF2  500B               	movf	(??_fputc+1)^(0+1280),w,c
  5968   001CF4  200D               	addwfc	(??_fputc+3)^(0+1280),w,c
  5969   001CF6  6EDA               	movwf	fsr2h,c
  5970   001CF8  C506  F4DF         	movff	fputc@c,indf2
  5971   001CFC  EE20 F003          	lfsr	2,3
  5972   001D00  5008               	movf	fputc@fp^(0+1280),w,c
  5973   001D02  26D9               	addwf	fsr2l,f,c
  5974   001D04  5009               	movf	(fputc@fp+1)^(0+1280),w,c
  5975   001D06  22DA               	addwfc	fsr2h,f,c
  5976   001D08  2ADE               	incf	postinc2,f,c
  5977   001D0A  0E00               	movlw	0
  5978   001D0C  22DD               	addwfc	postdec2,f,c
  5979   001D0E  0C00               	retlw	0	;funcret
  5980   001D10                     __end_of_fputc:
  5981                           	callstack 0
  5982                           
  5983 ;; *************** function _putch *****************
  5984 ;; Defined at:
  5985 ;;		line 299 in file "mcc_generated_files/uart/src/uart1.c"
  5986 ;; Parameters:    Size  Location     Type
  5987 ;;  txData          1    wreg     unsigned char 
  5988 ;; Auto vars:     Size  Location     Type
  5989 ;;  txData          1    4[COMRAM] unsigned char 
  5990 ;; Return value:  Size  Location     Type
  5991 ;;                  1    wreg      void 
  5992 ;; Registers used:
  5993 ;;		wreg, status,2, cstack
  5994 ;; Tracked objects:
  5995 ;;		On entry : 0/5
  5996 ;;		On exit  : 0/0
  5997 ;;		Unchanged: 0/0
  5998 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6000 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6002 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6003 ;;Total ram usage:        1 bytes
  6004 ;; Hardware stack levels used: 1
  6005 ;; Hardware stack levels required when called: 4
  6006 ;; This function calls:
  6007 ;;		_UART1_IsTxReady
  6008 ;;		_UART1_Write
  6009 ;; This function is called by:
  6010 ;;		_fputc
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           	psect	text58
  6015   002456                     __ptext58:
  6016                           	callstack 0
  6017   002456                     _putch:
  6018                           	callstack 117
  6019                           
  6020                           ;incstack = 0
  6021                           ;putch@txData stored from wreg
  6022   002456  6E05               	movwf	putch@txData^(0+1280),c
  6023   002458                     
  6024                           ;mcc_generated_files/uart/src/uart1.c: 299: void putch(char txData);mcc_generated_files/
      +                          uart/src/uart1.c: 300: {;mcc_generated_files/uart/src/uart1.c: 301:     while(!(UART1_Is
      +                          TxReady()));
  6025   002458  EC1A  F012         	call	_UART1_IsTxReady	;wreg free
  6026   00245C  0900               	iorlw	0
  6027   00245E  E0FC               	bz	l3180
  6028                           
  6029                           ; BSR set to: 2
  6030                           ;mcc_generated_files/uart/src/uart1.c: 302:     return UART1_Write(txData);;	Return valu
      +                          e of _putch is never used
  6031   002460  5005               	movf	putch@txData^(0+1280),w,c
  6032   002462  EF52  F012         	goto	_UART1_Write
  6033   002466                     __end_of_putch:
  6034                           	callstack 0
  6035                           
  6036 ;; *************** function _UART1_Write *****************
  6037 ;; Defined at:
  6038 ;;		line 287 in file "mcc_generated_files/uart/src/uart1.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  txData          1    wreg     unsigned char 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;  txData          1    3[COMRAM] unsigned char 
  6043 ;; Return value:  Size  Location     Type
  6044 ;;                  1    wreg      void 
  6045 ;; Registers used:
  6046 ;;		wreg
  6047 ;; Tracked objects:
  6048 ;;		On entry : 3F/2
  6049 ;;		On exit  : 0/0
  6050 ;;		Unchanged: 0/0
  6051 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6053 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6055 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6056 ;;Total ram usage:        1 bytes
  6057 ;; Hardware stack levels used: 1
  6058 ;; Hardware stack levels required when called: 3
  6059 ;; This function calls:
  6060 ;;		Nothing
  6061 ;; This function is called by:
  6062 ;;		_putch
  6063 ;; This function uses a non-reentrant model
  6064 ;;
  6065                           
  6066                           	psect	text59
  6067   0024A4                     __ptext59:
  6068                           	callstack 0
  6069   0024A4                     _UART1_Write:
  6070                           	callstack 117
  6071                           
  6072                           ;incstack = 0
  6073                           ;UART1_Write@txData stored from wreg
  6074   0024A4  6E04               	movwf	UART1_Write@txData^(0+1280),c
  6075                           
  6076                           ;mcc_generated_files/uart/src/uart1.c: 287: void UART1_Write(uint8_t txData);mcc_generat
      +                          ed_files/uart/src/uart1.c: 288: {;mcc_generated_files/uart/src/uart1.c: 289:     U1TXB =
      +                           txData;
  6077   0024A6  C504  F2A3         	movff	UART1_Write@txData,675	;volatile
  6078   0024AA  0012               	return		;funcret
  6079   0024AC                     __end_of_UART1_Write:
  6080                           	callstack 0
  6081                           
  6082 ;; *************** function _UART1_IsTxReady *****************
  6083 ;; Defined at:
  6084 ;;		line 247 in file "mcc_generated_files/uart/src/uart1.c"
  6085 ;; Parameters:    Size  Location     Type
  6086 ;;		None
  6087 ;; Auto vars:     Size  Location     Type
  6088 ;;		None
  6089 ;; Return value:  Size  Location     Type
  6090 ;;                  1    wreg      _Bool 
  6091 ;; Registers used:
  6092 ;;		wreg, status,2
  6093 ;; Tracked objects:
  6094 ;;		On entry : 0/3
  6095 ;;		On exit  : 3F/2
  6096 ;;		Unchanged: 0/0
  6097 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6099 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6101 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6102 ;;Total ram usage:        1 bytes
  6103 ;; Hardware stack levels used: 1
  6104 ;; Hardware stack levels required when called: 3
  6105 ;; This function calls:
  6106 ;;		Nothing
  6107 ;; This function is called by:
  6108 ;;		_putch
  6109 ;; This function uses a non-reentrant model
  6110 ;;
  6111                           
  6112                           	psect	text60
  6113   002434                     __ptext60:
  6114                           	callstack 0
  6115   002434                     _UART1_IsTxReady:
  6116                           	callstack 117
  6117                           
  6118                           ;mcc_generated_files/uart/src/uart1.c: 249:     return (_Bool)(U1FIFObits.TXBE && U1CON0
      +                          bits.TXEN);
  6119                           
  6120                           ;incstack = 0
  6121   002434  6A04               	clrf	_UART1_IsTxReady$2941^(0+1280),c
  6122   002436  0102               	movlb	2	; () banked
  6123   002438  BBB0               	btfsc	176,5,b	;volatile
  6124                           
  6125                           ; BSR set to: 2
  6126   00243A  ABAB               	btfss	171,5,b	;volatile
  6127   00243C  D002               	goto	l1350
  6128                           
  6129                           ; BSR set to: 2
  6130   00243E  0E01               	movlw	1
  6131   002440  6E04               	movwf	_UART1_IsTxReady$2941^(0+1280),c
  6132   002442                     l1350:
  6133                           
  6134                           ; BSR set to: 2
  6135   002442  5004               	movf	_UART1_IsTxReady$2941^(0+1280),w,c
  6136                           
  6137                           ; BSR set to: 2
  6138   002444  0012               	return		;funcret
  6139   002446                     __end_of_UART1_IsTxReady:
  6140                           	callstack 0
  6141                           
  6142 ;; *************** function _abs *****************
  6143 ;; Defined at:
  6144 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\abs.c"
  6145 ;; Parameters:    Size  Location     Type
  6146 ;;  a               2    9[COMRAM] int 
  6147 ;; Auto vars:     Size  Location     Type
  6148 ;;		None
  6149 ;; Return value:  Size  Location     Type
  6150 ;;                  2    9[COMRAM] int 
  6151 ;; Registers used:
  6152 ;;		wreg, status,2, status,0
  6153 ;; Tracked objects:
  6154 ;;		On entry : 0/5
  6155 ;;		On exit  : 0/0
  6156 ;;		Unchanged: 0/0
  6157 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6158 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6160 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6161 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6162 ;;Total ram usage:        4 bytes
  6163 ;; Hardware stack levels used: 1
  6164 ;; Hardware stack levels required when called: 3
  6165 ;; This function calls:
  6166 ;;		Nothing
  6167 ;; This function is called by:
  6168 ;;		_dtoa
  6169 ;; This function uses a non-reentrant model
  6170 ;;
  6171                           
  6172                           	psect	text61
  6173   00220C                     __ptext61:
  6174                           	callstack 0
  6175   00220C                     _abs:
  6176                           	callstack 118
  6177                           
  6178                           ; BSR set to: 2
  6179                           ;incstack = 0
  6180   00220C  BE0B               	btfsc	(abs@a+1)^(0+1280),7,c
  6181   00220E  D004               	goto	u1280
  6182   002210  500B               	movf	(abs@a+1)^(0+1280),w,c
  6183   002212  E10F               	bnz	l2215
  6184   002214  040A               	decf	abs@a^(0+1280),w,c
  6185   002216  E20D               	bc	l2215
  6186   002218                     u1280:
  6187   002218  C50A  F50C         	movff	abs@a,??_abs
  6188   00221C  C50B  F50D         	movff	abs@a+1,??_abs+1
  6189   002220  1E0C               	comf	??_abs^(0+1280),f,c
  6190   002222  1E0D               	comf	(??_abs+1)^(0+1280),f,c
  6191   002224  4A0C               	infsnz	??_abs^(0+1280),f,c
  6192   002226  2A0D               	incf	(??_abs+1)^(0+1280),f,c
  6193   002228  C50C  F50A         	movff	??_abs,?_abs
  6194   00222C  C50D  F50B         	movff	??_abs+1,?_abs+1
  6195   002230  0012               	return	
  6196   002232                     l2215:
  6197   002232  C50A  F50A         	movff	abs@a,?_abs
  6198   002236  C50B  F50B         	movff	abs@a+1,?_abs+1
  6199   00223A  0012               	return		;funcret
  6200   00223C                     __end_of_abs:
  6201                           	callstack 0
  6202                           
  6203 ;; *************** function ___awmod *****************
  6204 ;; Defined at:
  6205 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awmod.c"
  6206 ;; Parameters:    Size  Location     Type
  6207 ;;  dividend        2    3[COMRAM] int 
  6208 ;;  divisor         2    5[COMRAM] int 
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;  sign            1    8[COMRAM] unsigned char 
  6211 ;;  counter         1    7[COMRAM] unsigned char 
  6212 ;; Return value:  Size  Location     Type
  6213 ;;                  2    3[COMRAM] int 
  6214 ;; Registers used:
  6215 ;;		wreg, status,2, status,0
  6216 ;; Tracked objects:
  6217 ;;		On entry : 0/5
  6218 ;;		On exit  : 0/0
  6219 ;;		Unchanged: 0/0
  6220 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6221 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6222 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6224 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6225 ;;Total ram usage:        6 bytes
  6226 ;; Hardware stack levels used: 1
  6227 ;; Hardware stack levels required when called: 3
  6228 ;; This function calls:
  6229 ;;		Nothing
  6230 ;; This function is called by:
  6231 ;;		_dtoa
  6232 ;; This function uses a non-reentrant model
  6233 ;;
  6234                           
  6235                           	psect	text62
  6236   001EF8                     __ptext62:
  6237                           	callstack 0
  6238   001EF8                     ___awmod:
  6239                           	callstack 118
  6240                           
  6241                           ;incstack = 0
  6242   001EF8  6A09               	clrf	___awmod@sign^(0+1280),c
  6243   001EFA  AE05               	btfss	(___awmod@dividend+1)^(0+1280),7,c
  6244   001EFC  D006               	goto	l3262
  6245   001EFE  6C04               	negf	___awmod@dividend^(0+1280),c
  6246   001F00  1E05               	comf	(___awmod@dividend+1)^(0+1280),f,c
  6247   001F02  B0D8               	btfsc	status,0,c
  6248   001F04  2A05               	incf	(___awmod@dividend+1)^(0+1280),f,c
  6249   001F06  0E01               	movlw	1
  6250   001F08  6E09               	movwf	___awmod@sign^(0+1280),c
  6251   001F0A                     l3262:
  6252   001F0A  AE07               	btfss	(___awmod@divisor+1)^(0+1280),7,c
  6253   001F0C  D004               	goto	l3266
  6254   001F0E  6C06               	negf	___awmod@divisor^(0+1280),c
  6255   001F10  1E07               	comf	(___awmod@divisor+1)^(0+1280),f,c
  6256   001F12  B0D8               	btfsc	status,0,c
  6257   001F14  2A07               	incf	(___awmod@divisor+1)^(0+1280),f,c
  6258   001F16                     l3266:
  6259   001F16  5006               	movf	___awmod@divisor^(0+1280),w,c
  6260   001F18  1007               	iorwf	(___awmod@divisor+1)^(0+1280),w,c
  6261   001F1A  E017               	bz	l3282
  6262   001F1C  0E01               	movlw	1
  6263   001F1E  6E08               	movwf	___awmod@counter^(0+1280),c
  6264   001F20  D004               	goto	l3272
  6265   001F22                     l3270:
  6266   001F22  90D8               	bcf	status,0,c
  6267   001F24  3606               	rlcf	___awmod@divisor^(0+1280),f,c
  6268   001F26  3607               	rlcf	(___awmod@divisor+1)^(0+1280),f,c
  6269   001F28  2A08               	incf	___awmod@counter^(0+1280),f,c
  6270   001F2A                     l3272:
  6271   001F2A  AE07               	btfss	(___awmod@divisor+1)^(0+1280),7,c
  6272   001F2C  D7FA               	goto	l3270
  6273   001F2E                     u1230:
  6274   001F2E  5006               	movf	___awmod@divisor^(0+1280),w,c
  6275   001F30  5C04               	subwf	___awmod@dividend^(0+1280),w,c
  6276   001F32  5007               	movf	(___awmod@divisor+1)^(0+1280),w,c
  6277   001F34  5805               	subwfb	(___awmod@dividend+1)^(0+1280),w,c
  6278   001F36  E304               	bnc	l3278
  6279   001F38  5006               	movf	___awmod@divisor^(0+1280),w,c
  6280   001F3A  5E04               	subwf	___awmod@dividend^(0+1280),f,c
  6281   001F3C  5007               	movf	(___awmod@divisor+1)^(0+1280),w,c
  6282   001F3E  5A05               	subwfb	(___awmod@dividend+1)^(0+1280),f,c
  6283   001F40                     l3278:
  6284   001F40  90D8               	bcf	status,0,c
  6285   001F42  3207               	rrcf	(___awmod@divisor+1)^(0+1280),f,c
  6286   001F44  3206               	rrcf	___awmod@divisor^(0+1280),f,c
  6287   001F46  2E08               	decfsz	___awmod@counter^(0+1280),f,c
  6288   001F48  D7F2               	goto	u1230
  6289   001F4A                     l3282:
  6290   001F4A  5009               	movf	___awmod@sign^(0+1280),w,c
  6291   001F4C  E004               	bz	l3286
  6292   001F4E  6C04               	negf	___awmod@dividend^(0+1280),c
  6293   001F50  1E05               	comf	(___awmod@dividend+1)^(0+1280),f,c
  6294   001F52  B0D8               	btfsc	status,0,c
  6295   001F54  2A05               	incf	(___awmod@dividend+1)^(0+1280),f,c
  6296   001F56                     l3286:
  6297   001F56  C504  F504         	movff	___awmod@dividend,?___awmod
  6298   001F5A  C505  F505         	movff	___awmod@dividend+1,?___awmod+1
  6299   001F5E  0012               	return		;funcret
  6300   001F60                     __end_of___awmod:
  6301                           	callstack 0
  6302                           
  6303 ;; *************** function ___awdiv *****************
  6304 ;; Defined at:
  6305 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\awdiv.c"
  6306 ;; Parameters:    Size  Location     Type
  6307 ;;  dividend        2    3[COMRAM] int 
  6308 ;;  divisor         2    5[COMRAM] int 
  6309 ;; Auto vars:     Size  Location     Type
  6310 ;;  quotient        2    9[COMRAM] int 
  6311 ;;  sign            1    8[COMRAM] unsigned char 
  6312 ;;  counter         1    7[COMRAM] unsigned char 
  6313 ;; Return value:  Size  Location     Type
  6314 ;;                  2    3[COMRAM] int 
  6315 ;; Registers used:
  6316 ;;		wreg, status,2, status,0
  6317 ;; Tracked objects:
  6318 ;;		On entry : 0/5
  6319 ;;		On exit  : 0/0
  6320 ;;		Unchanged: 0/0
  6321 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6322 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6323 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6325 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6326 ;;Total ram usage:        8 bytes
  6327 ;; Hardware stack levels used: 1
  6328 ;; Hardware stack levels required when called: 3
  6329 ;; This function calls:
  6330 ;;		Nothing
  6331 ;; This function is called by:
  6332 ;;		_dtoa
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           	psect	text63
  6337   001E18                     __ptext63:
  6338                           	callstack 0
  6339   001E18                     ___awdiv:
  6340                           	callstack 118
  6341                           
  6342                           ;incstack = 0
  6343   001E18  6A09               	clrf	___awdiv@sign^(0+1280),c
  6344   001E1A  AE07               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
  6345   001E1C  D006               	goto	l3218
  6346   001E1E  6C06               	negf	___awdiv@divisor^(0+1280),c
  6347   001E20  1E07               	comf	(___awdiv@divisor+1)^(0+1280),f,c
  6348   001E22  B0D8               	btfsc	status,0,c
  6349   001E24  2A07               	incf	(___awdiv@divisor+1)^(0+1280),f,c
  6350   001E26  0E01               	movlw	1
  6351   001E28  6E09               	movwf	___awdiv@sign^(0+1280),c
  6352   001E2A                     l3218:
  6353   001E2A  AE05               	btfss	(___awdiv@dividend+1)^(0+1280),7,c
  6354   001E2C  D006               	goto	l3224
  6355   001E2E  6C04               	negf	___awdiv@dividend^(0+1280),c
  6356   001E30  1E05               	comf	(___awdiv@dividend+1)^(0+1280),f,c
  6357   001E32  B0D8               	btfsc	status,0,c
  6358   001E34  2A05               	incf	(___awdiv@dividend+1)^(0+1280),f,c
  6359   001E36  0E01               	movlw	1
  6360   001E38  1A09               	xorwf	___awdiv@sign^(0+1280),f,c
  6361   001E3A                     l3224:
  6362   001E3A  6A0A               	clrf	___awdiv@quotient^(0+1280),c
  6363   001E3C  6A0B               	clrf	(___awdiv@quotient+1)^(0+1280),c
  6364   001E3E  5006               	movf	___awdiv@divisor^(0+1280),w,c
  6365   001E40  1007               	iorwf	(___awdiv@divisor+1)^(0+1280),w,c
  6366   001E42  E01B               	bz	l3246
  6367   001E44  0E01               	movlw	1
  6368   001E46  6E08               	movwf	___awdiv@counter^(0+1280),c
  6369   001E48  D004               	goto	l3232
  6370   001E4A                     l3230:
  6371   001E4A  90D8               	bcf	status,0,c
  6372   001E4C  3606               	rlcf	___awdiv@divisor^(0+1280),f,c
  6373   001E4E  3607               	rlcf	(___awdiv@divisor+1)^(0+1280),f,c
  6374   001E50  2A08               	incf	___awdiv@counter^(0+1280),f,c
  6375   001E52                     l3232:
  6376   001E52  AE07               	btfss	(___awdiv@divisor+1)^(0+1280),7,c
  6377   001E54  D7FA               	goto	l3230
  6378   001E56                     u1170:
  6379   001E56  90D8               	bcf	status,0,c
  6380   001E58  360A               	rlcf	___awdiv@quotient^(0+1280),f,c
  6381   001E5A  360B               	rlcf	(___awdiv@quotient+1)^(0+1280),f,c
  6382   001E5C  5006               	movf	___awdiv@divisor^(0+1280),w,c
  6383   001E5E  5C04               	subwf	___awdiv@dividend^(0+1280),w,c
  6384   001E60  5007               	movf	(___awdiv@divisor+1)^(0+1280),w,c
  6385   001E62  5805               	subwfb	(___awdiv@dividend+1)^(0+1280),w,c
  6386   001E64  E305               	bnc	l3242
  6387   001E66  5006               	movf	___awdiv@divisor^(0+1280),w,c
  6388   001E68  5E04               	subwf	___awdiv@dividend^(0+1280),f,c
  6389   001E6A  5007               	movf	(___awdiv@divisor+1)^(0+1280),w,c
  6390   001E6C  5A05               	subwfb	(___awdiv@dividend+1)^(0+1280),f,c
  6391   001E6E  800A               	bsf	___awdiv@quotient^(0+1280),0,c
  6392   001E70                     l3242:
  6393   001E70  90D8               	bcf	status,0,c
  6394   001E72  3207               	rrcf	(___awdiv@divisor+1)^(0+1280),f,c
  6395   001E74  3206               	rrcf	___awdiv@divisor^(0+1280),f,c
  6396   001E76  2E08               	decfsz	___awdiv@counter^(0+1280),f,c
  6397   001E78  D7EE               	goto	u1170
  6398   001E7A                     l3246:
  6399   001E7A  5009               	movf	___awdiv@sign^(0+1280),w,c
  6400   001E7C  E004               	bz	l3250
  6401   001E7E  6C0A               	negf	___awdiv@quotient^(0+1280),c
  6402   001E80  1E0B               	comf	(___awdiv@quotient+1)^(0+1280),f,c
  6403   001E82  B0D8               	btfsc	status,0,c
  6404   001E84  2A0B               	incf	(___awdiv@quotient+1)^(0+1280),f,c
  6405   001E86                     l3250:
  6406   001E86  C50A  F504         	movff	___awdiv@quotient,?___awdiv
  6407   001E8A  C50B  F505         	movff	___awdiv@quotient+1,?___awdiv+1
  6408   001E8E  0012               	return		;funcret
  6409   001E90                     __end_of___awdiv:
  6410                           	callstack 0
  6411                           
  6412 ;; *************** function _ADCC_GetSingleConversion *****************
  6413 ;; Defined at:
  6414 ;;		line 121 in file "mcc_generated_files/adc/src/adcc.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;  channel         1    wreg     enum E13007
  6417 ;; Auto vars:     Size  Location     Type
  6418 ;;  channel         1    7[COMRAM] enum E13007
  6419 ;; Return value:  Size  Location     Type
  6420 ;;                  2    3[COMRAM] unsigned short 
  6421 ;; Registers used:
  6422 ;;		wreg, status,2, status,0
  6423 ;; Tracked objects:
  6424 ;;		On entry : 0/5
  6425 ;;		On exit  : 3F/3
  6426 ;;		Unchanged: 0/0
  6427 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6428 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6429 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6430 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6431 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6432 ;;Total ram usage:        5 bytes
  6433 ;; Hardware stack levels used: 1
  6434 ;; Hardware stack levels required when called: 3
  6435 ;; This function calls:
  6436 ;;		Nothing
  6437 ;; This function is called by:
  6438 ;;		_ADC
  6439 ;;		_VSR
  6440 ;;		_PWM
  6441 ;;		_EEPROM
  6442 ;; This function uses a non-reentrant model
  6443 ;;
  6444                           
  6445                           	psect	text64
  6446   00232E                     __ptext64:
  6447                           	callstack 0
  6448   00232E                     _ADCC_GetSingleConversion:
  6449                           	callstack 122
  6450                           
  6451                           ;incstack = 0
  6452                           ;ADCC_GetSingleConversion@channel stored from wreg
  6453   00232E  6E08               	movwf	ADCC_GetSingleConversion@channel^(0+1280),c
  6454                           
  6455                           ;mcc_generated_files/adc/src/adcc.c: 121: adc_result_t ADCC_GetSingleConversion(adcc_cha
      +                          nnel_t channel);mcc_generated_files/adc/src/adcc.c: 122: {;mcc_generated_files/adc/src/a
      +                          dcc.c: 124:     ADPCH = channel;
  6456   002330  C508  F3EC         	movff	ADCC_GetSingleConversion@channel,1004	;volatile
  6457                           
  6458                           ;mcc_generated_files/adc/src/adcc.c: 127:     ADCON0bits.ADCONT = 0;
  6459   002334  0103               	movlb	3	; () banked
  6460   002336  9DF3               	bcf	243,6,b	;volatile
  6461                           
  6462                           ; BSR set to: 3
  6463                           ;mcc_generated_files/adc/src/adcc.c: 130:     ADCON0bits.ADGO = 1;
  6464   002338  81F3               	bsf	243,0,b	;volatile
  6465   00233A                     l488:
  6466                           
  6467                           ; BSR set to: 3
  6468                           ;mcc_generated_files/adc/src/adcc.c: 134:     while (ADCON0bits.ADGO)
  6469   00233A  B1F3               	btfsc	243,0,b	;volatile
  6470   00233C  D7FE               	goto	l488
  6471                           
  6472                           ; BSR set to: 3
  6473                           ;mcc_generated_files/adc/src/adcc.c: 140:     return ((adc_result_t)((ADRESH << 8) + ADR
      +                          ESL));
  6474   00233E  51EB               	movf	235,w,b	;volatile
  6475   002340  6E07               	movwf	(??_ADCC_GetSingleConversion+1)^(0+1280),c
  6476   002342  6A06               	clrf	??_ADCC_GetSingleConversion^(0+1280),c
  6477   002344  51EA               	movf	234,w,b	;volatile
  6478   002346  2406               	addwf	??_ADCC_GetSingleConversion^(0+1280),w,c
  6479   002348  6E04               	movwf	?_ADCC_GetSingleConversion^(0+1280),c
  6480   00234A  0E00               	movlw	0
  6481   00234C  2007               	addwfc	(??_ADCC_GetSingleConversion+1)^(0+1280),w,c
  6482   00234E  6E05               	movwf	(?_ADCC_GetSingleConversion+1)^(0+1280),c
  6483                           
  6484                           ; BSR set to: 3
  6485   002350  0012               	return		;funcret
  6486   002352                     __end_of_ADCC_GetSingleConversion:
  6487                           	callstack 0
  6488                           
  6489 ;; *************** function _INTERRUPT_InterruptManager *****************
  6490 ;; Defined at:
  6491 ;;		line 80 in file "mcc_generated_files/system/src/interrupt.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;		None
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;		None
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  1    wreg      void 
  6498 ;; Registers used:
  6499 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;Total ram usage:        2 bytes
  6510 ;; Hardware stack levels used: 1
  6511 ;; Hardware stack levels required when called: 2
  6512 ;; This function calls:
  6513 ;;		_PIN_MANAGER_IOC
  6514 ;;		_Timer0_OverflowISR
  6515 ;; This function is called by:
  6516 ;;		Interrupt level 2
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text65
  6521   0022E2                     __ptext65:
  6522                           	callstack 0
  6523   0022E2                     _INTERRUPT_InterruptManager:
  6524                           	callstack 114
  6525                           
  6526                           ; BSR set to: 3
  6527                           ;incstack = 0
  6528   0022E2  C4FA F502          	movff	pclath,??_INTERRUPT_InterruptManager
  6529   0022E6  C4FB F503          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6530                           
  6531                           ;mcc_generated_files/system/src/interrupt.c: 83:     if(PIE0bits.IOCIE == 1 && PIR0bits.
      +                          IOCIF == 1)
  6532   0022EA  BEA8               	btfsc	168,7,c	;volatile
  6533   0022EC  AEB3               	btfss	179,7,c	;volatile
  6534   0022EE  D003               	goto	i2l849
  6535                           
  6536                           ;mcc_generated_files/system/src/interrupt.c: 84:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 85:         PIN_MANAGER_IOC();
  6537   0022F0  EC7A  F012         	call	_PIN_MANAGER_IOC	;wreg free
  6538                           
  6539                           ;mcc_generated_files/system/src/interrupt.c: 86:     }
  6540   0022F4  D005               	goto	i2l853
  6541   0022F6                     i2l849:
  6542   0022F6  BEAB               	btfsc	171,7,c	;volatile
  6543   0022F8  AEB6               	btfss	182,7,c	;volatile
  6544   0022FA  D002               	goto	i2l853
  6545                           
  6546                           ;mcc_generated_files/system/src/interrupt.c: 88:     {;mcc_generated_files/system/src/in
      +                          terrupt.c: 89:         Timer0_OverflowISR();
  6547   0022FC  ECC8  F011         	call	_Timer0_OverflowISR	;wreg free
  6548   002300                     i2l853:
  6549   002300  C503  F4FB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6550   002304  C502  F4FA         	movff	??_INTERRUPT_InterruptManager,pclath
  6551   002308  0011               	retfie		f
  6552   00230A                     __end_of_INTERRUPT_InterruptManager:
  6553                           	callstack 0
  6554                           
  6555 ;; *************** function _Timer0_OverflowISR *****************
  6556 ;; Defined at:
  6557 ;;		line 106 in file "mcc_generated_files/timer/src/tmr0.c"
  6558 ;; Parameters:    Size  Location     Type
  6559 ;;		None
  6560 ;; Auto vars:     Size  Location     Type
  6561 ;;		None
  6562 ;; Return value:  Size  Location     Type
  6563 ;;                  1    wreg      void 
  6564 ;; Registers used:
  6565 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6566 ;; Tracked objects:
  6567 ;;		On entry : 0/0
  6568 ;;		On exit  : 0/0
  6569 ;;		Unchanged: 0/0
  6570 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6575 ;;Total ram usage:        0 bytes
  6576 ;; Hardware stack levels used: 1
  6577 ;; Hardware stack levels required when called: 1
  6578 ;; This function calls:
  6579 ;;		NULL
  6580 ;;		_LAB_ISR
  6581 ;;		_TMR2_DefaultOverflowCallback
  6582 ;;		_Timer0_DefaultOverflowCallback
  6583 ;;		_Timer1_DefaultOverflowCallback
  6584 ;; This function is called by:
  6585 ;;		_INTERRUPT_InterruptManager
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           	psect	text66
  6590   002390                     __ptext66:
  6591                           	callstack 0
  6592   002390                     _Timer0_OverflowISR:
  6593                           	callstack 114
  6594                           
  6595                           ;mcc_generated_files/timer/src/tmr0.c: 109:     PIR3bits.TMR0IF = 0;
  6596                           
  6597                           ;incstack = 0
  6598   002390  9EB6               	bcf	182,7,c	;volatile
  6599                           
  6600                           ;mcc_generated_files/timer/src/tmr0.c: 110:     if(Timer0_OverflowCallback)
  6601   002392  0105               	movlb	5	; () banked
  6602   002394  5188               	movf	_Timer0_OverflowCallback& (0+255),w,b
  6603   002396  1189               	iorwf	(_Timer0_OverflowCallback+1)& (0+255),w,b
  6604   002398  B4D8               	btfsc	status,2,c
  6605   00239A  0012               	return	
  6606                           
  6607                           ; BSR set to: 5
  6608                           ;mcc_generated_files/timer/src/tmr0.c: 111:     {;mcc_generated_files/timer/src/tmr0.c: 
      +                          112:         Timer0_OverflowCallback();
  6609   00239C  0005               	push	
  6610   00239E  6EFA               	movwf	pclath,c
  6611   0023A0  5188               	movf	_Timer0_OverflowCallback& (0+255),w,b
  6612   0023A2  6EFD               	movwf	tosl,c
  6613   0023A4  5189               	movf	(_Timer0_OverflowCallback+1)& (0+255),w,b
  6614   0023A6  6EFE               	movwf	tosh,c
  6615   0023A8  6AFF               	clrf	tosu,c
  6616   0023AA  50FA               	movf	pclath,w,c
  6617   0023AC  0012               	return		;indir
  6618   0023AE                     __end_of_Timer0_OverflowISR:
  6619                           	callstack 0
  6620                           
  6621 ;; *************** function _Timer0_DefaultOverflowCallback *****************
  6622 ;; Defined at:
  6623 ;;		line 121 in file "mcc_generated_files/timer/src/tmr0.c"
  6624 ;; Parameters:    Size  Location     Type
  6625 ;;		None
  6626 ;; Auto vars:     Size  Location     Type
  6627 ;;		None
  6628 ;; Return value:  Size  Location     Type
  6629 ;;                  1    wreg      void 
  6630 ;; Registers used:
  6631 ;;		None
  6632 ;; Tracked objects:
  6633 ;;		On entry : 3F/5
  6634 ;;		On exit  : 3F/5
  6635 ;;		Unchanged: 3E/0
  6636 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6641 ;;Total ram usage:        0 bytes
  6642 ;; Hardware stack levels used: 1
  6643 ;; This function calls:
  6644 ;;		Nothing
  6645 ;; This function is called by:
  6646 ;;		_Timer0_Initialize
  6647 ;;		_Timer0_OverflowISR
  6648 ;;		_Timer1_Tasks
  6649 ;;		_TMR2_Tasks
  6650 ;; This function uses a non-reentrant model
  6651 ;;
  6652                           
  6653                           	psect	text67
  6654   0024EE                     __ptext67:
  6655                           	callstack 0
  6656   0024EE                     _Timer0_DefaultOverflowCallback:
  6657                           	callstack 114
  6658                           
  6659                           ; BSR set to: 5
  6660                           
  6661                           ;incstack = 0
  6662   0024EE  0012               	return		;funcret
  6663   0024F0                     __end_of_Timer0_DefaultOverflowCallback:
  6664                           	callstack 0
  6665                           
  6666 ;; *************** function _TMR2_DefaultOverflowCallback *****************
  6667 ;; Defined at:
  6668 ;;		line 126 in file "mcc_generated_files/timer/src/tmr2.c"
  6669 ;; Parameters:    Size  Location     Type
  6670 ;;		None
  6671 ;; Auto vars:     Size  Location     Type
  6672 ;;		None
  6673 ;; Return value:  Size  Location     Type
  6674 ;;                  1    wreg      void 
  6675 ;; Registers used:
  6676 ;;		None
  6677 ;; Tracked objects:
  6678 ;;		On entry : 3F/5
  6679 ;;		On exit  : 3F/5
  6680 ;;		Unchanged: 3E/0
  6681 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6686 ;;Total ram usage:        0 bytes
  6687 ;; Hardware stack levels used: 1
  6688 ;; This function calls:
  6689 ;;		Nothing
  6690 ;; This function is called by:
  6691 ;;		_TMR2_Initialize
  6692 ;;		_Timer0_OverflowISR
  6693 ;;		_Timer1_Tasks
  6694 ;;		_TMR2_Tasks
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           	psect	text68
  6699   0024F0                     __ptext68:
  6700                           	callstack 0
  6701   0024F0                     _TMR2_DefaultOverflowCallback:
  6702                           	callstack 114
  6703                           
  6704                           ; BSR set to: 5
  6705                           
  6706                           ; BSR set to: 5
  6707                           ;incstack = 0
  6708   0024F0  0012               	return		;funcret
  6709   0024F2                     __end_of_TMR2_DefaultOverflowCallback:
  6710                           	callstack 0
  6711                           
  6712 ;; *************** function _LAB_ISR *****************
  6713 ;; Defined at:
  6714 ;;		line 89 in file "Labs/Lab08_Interrupts/Interrupt.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;		None
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;		None
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  1    wreg      void 
  6721 ;; Registers used:
  6722 ;;		wreg, status,2, status,0
  6723 ;; Tracked objects:
  6724 ;;		On entry : 3F/5
  6725 ;;		On exit  : 3F/5
  6726 ;;		Unchanged: 3E/0
  6727 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6730 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6731 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6732 ;;Total ram usage:        1 bytes
  6733 ;; Hardware stack levels used: 1
  6734 ;; This function calls:
  6735 ;;		Nothing
  6736 ;; This function is called by:
  6737 ;;		_Interrupt
  6738 ;;		_Timer0_OverflowISR
  6739 ;;		_Timer1_Tasks
  6740 ;;		_TMR2_Tasks
  6741 ;; This function uses a non-reentrant model
  6742 ;;
  6743                           
  6744                           	psect	text69
  6745   001D9C                     __ptext69:
  6746                           	callstack 0
  6747   001D9C                     _LAB_ISR:
  6748                           	callstack 114
  6749                           
  6750                           ; BSR set to: 5
  6751                           ;Labs/Lab08_Interrupts/Interrupt.c: 91:     if (rotateReg == 1) {
  6752                           
  6753                           ; BSR set to: 5
  6754                           ;incstack = 0
  6755   001D9C  0451               	decf	_rotateReg@Interrupt$F496^(0+1280),w,c
  6756   001D9E  E102               	bnz	i2l3436
  6757                           
  6758                           ; BSR set to: 5
  6759                           ;Labs/Lab08_Interrupts/Interrupt.c: 92:         rotateReg = 16;
  6760   001DA0  0E10               	movlw	16
  6761   001DA2  6E51               	movwf	_rotateReg@Interrupt$F496^(0+1280),c
  6762   001DA4                     i2l3436:
  6763                           
  6764                           ; BSR set to: 5
  6765                           ;Labs/Lab08_Interrupts/Interrupt.c: 95:     rotateReg >>= 1;
  6766   001DA4  90D8               	bcf	status,0,c
  6767   001DA6  3251               	rrcf	_rotateReg@Interrupt$F496^(0+1280),f,c
  6768                           
  6769                           ; BSR set to: 5
  6770                           ;Labs/Lab08_Interrupts/Interrupt.c: 99:     LATAbits.LATA5 = rotateReg & 1;
  6771   001DA8  C551  F501         	movff	_rotateReg@Interrupt$F496,??_LAB_ISR
  6772   001DAC  0E01               	movlw	1
  6773   001DAE  1601               	andwf	??_LAB_ISR^(0+1280),f,c
  6774   001DB0  3A01               	swapf	??_LAB_ISR^(0+1280),f,c
  6775   001DB2  4601               	rlncf	??_LAB_ISR^(0+1280),f,c
  6776   001DB4  50BE               	movf	190,w,c	;volatile
  6777   001DB6  1801               	xorwf	??_LAB_ISR^(0+1280),w,c
  6778   001DB8  0BDF               	andlw	-33
  6779   001DBA  1801               	xorwf	??_LAB_ISR^(0+1280),w,c
  6780   001DBC  6EBE               	movwf	190,c	;volatile
  6781                           
  6782                           ; BSR set to: 5
  6783                           ;Labs/Lab08_Interrupts/Interrupt.c: 100:     LATAbits.LATA1 = (rotateReg & 2) >> 1;
  6784   001DBE  C551  F501         	movff	_rotateReg@Interrupt$F496,??_LAB_ISR
  6785   001DC2  90D8               	bcf	status,0,c
  6786   001DC4  3201               	rrcf	??_LAB_ISR^(0+1280),f,c
  6787   001DC6  0E01               	movlw	1
  6788   001DC8  1601               	andwf	??_LAB_ISR^(0+1280),f,c
  6789   001DCA  4601               	rlncf	??_LAB_ISR^(0+1280),f,c
  6790   001DCC  50BE               	movf	190,w,c	;volatile
  6791   001DCE  1801               	xorwf	??_LAB_ISR^(0+1280),w,c
  6792   001DD0  0BFD               	andlw	-3
  6793   001DD2  1801               	xorwf	??_LAB_ISR^(0+1280),w,c
  6794   001DD4  6EBE               	movwf	190,c	;volatile
  6795                           
  6796                           ; BSR set to: 5
  6797                           ;Labs/Lab08_Interrupts/Interrupt.c: 101:     LATAbits.LATA2 = (rotateReg & 4) >> 2;
  6798   001DD6  C551  F501         	movff	_rotateReg@Interrupt$F496,??_LAB_ISR
  6799   001DDA  90D8               	bcf	status,0,c
  6800   001DDC  3201               	rrcf	??_LAB_ISR^(0+1280),f,c
  6801   001DDE  90D8               	bcf	status,0,c
  6802   001DE0  3201               	rrcf	??_LAB_ISR^(0+1280),f,c
  6803   001DE2  0E01               	movlw	1
  6804   001DE4  1601               	andwf	??_LAB_ISR^(0+1280),f,c
  6805   001DE6  4601               	rlncf	??_LAB_ISR^(0+1280),f,c
  6806   001DE8  4601               	rlncf	??_LAB_ISR^(0+1280),f,c
  6807   001DEA  50BE               	movf	190,w,c	;volatile
  6808   001DEC  1801               	xorwf	??_LAB_ISR^(0+1280),w,c
  6809   001DEE  0BFB               	andlw	-5
  6810   001DF0  1801               	xorwf	??_LAB_ISR^(0+1280),w,c
  6811   001DF2  6EBE               	movwf	190,c	;volatile
  6812                           
  6813                           ; BSR set to: 5
  6814                           ;Labs/Lab08_Interrupts/Interrupt.c: 102:     LATCbits.LATC5 = (rotateReg & 8) >> 3;
  6815   001DF4  C551  F501         	movff	_rotateReg@Interrupt$F496,??_LAB_ISR
  6816   001DF8  90D8               	bcf	status,0,c
  6817   001DFA  3201               	rrcf	??_LAB_ISR^(0+1280),f,c
  6818   001DFC  90D8               	bcf	status,0,c
  6819   001DFE  3201               	rrcf	??_LAB_ISR^(0+1280),f,c
  6820   001E00  90D8               	bcf	status,0,c
  6821   001E02  3201               	rrcf	??_LAB_ISR^(0+1280),f,c
  6822   001E04  0E01               	movlw	1
  6823   001E06  1601               	andwf	??_LAB_ISR^(0+1280),f,c
  6824   001E08  3A01               	swapf	??_LAB_ISR^(0+1280),f,c
  6825   001E0A  4601               	rlncf	??_LAB_ISR^(0+1280),f,c
  6826   001E0C  50C0               	movf	192,w,c	;volatile
  6827   001E0E  1801               	xorwf	??_LAB_ISR^(0+1280),w,c
  6828   001E10  0BDF               	andlw	-33
  6829   001E12  1801               	xorwf	??_LAB_ISR^(0+1280),w,c
  6830   001E14  6EC0               	movwf	192,c	;volatile
  6831                           
  6832                           ; BSR set to: 5
  6833   001E16  0012               	return		;funcret
  6834   001E18                     __end_of_LAB_ISR:
  6835                           	callstack 0
  6836                           
  6837 ;; *************** function _Timer1_DefaultOverflowCallback *****************
  6838 ;; Defined at:
  6839 ;;		line 159 in file "mcc_generated_files/timer/src/tmr1.c"
  6840 ;; Parameters:    Size  Location     Type
  6841 ;;		None
  6842 ;; Auto vars:     Size  Location     Type
  6843 ;;		None
  6844 ;; Return value:  Size  Location     Type
  6845 ;;                  1    wreg      void 
  6846 ;; Registers used:
  6847 ;;		None
  6848 ;; Tracked objects:
  6849 ;;		On entry : 3F/5
  6850 ;;		On exit  : 3F/5
  6851 ;;		Unchanged: 3E/0
  6852 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6857 ;;Total ram usage:        0 bytes
  6858 ;; Hardware stack levels used: 1
  6859 ;; This function calls:
  6860 ;;		Nothing
  6861 ;; This function is called by:
  6862 ;;		_Timer1_Initialize
  6863 ;;		_Timer0_OverflowISR
  6864 ;;		_Timer1_Tasks
  6865 ;;		_TMR2_Tasks
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           	psect	text70
  6870   0024F2                     __ptext70:
  6871                           	callstack 0
  6872   0024F2                     _Timer1_DefaultOverflowCallback:
  6873                           	callstack 114
  6874                           
  6875                           ; BSR set to: 5
  6876                           
  6877                           ; BSR set to: 5
  6878                           ;incstack = 0
  6879   0024F2  0012               	return		;funcret
  6880   0024F4                     __end_of_Timer1_DefaultOverflowCallback:
  6881                           	callstack 0
  6882                           
  6883 ;; *************** function _PIN_MANAGER_IOC *****************
  6884 ;; Defined at:
  6885 ;;		line 116 in file "mcc_generated_files/system/src/pins.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;		None
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;		None
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  1    wreg      void 
  6892 ;; Registers used:
  6893 ;;		None
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 0/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6903 ;;Total ram usage:        0 bytes
  6904 ;; Hardware stack levels used: 1
  6905 ;; This function calls:
  6906 ;;		Nothing
  6907 ;; This function is called by:
  6908 ;;		_INTERRUPT_InterruptManager
  6909 ;; This function uses a non-reentrant model
  6910 ;;
  6911                           
  6912                           	psect	text71
  6913   0024F4                     __ptext71:
  6914                           	callstack 0
  6915   0024F4                     _PIN_MANAGER_IOC:
  6916                           	callstack 115
  6917                           
  6918                           ; BSR set to: 5
  6919                           ;incstack = 0
  6920   0024F4  0012               	return		;funcret
  6921   0024F6                     __end_of_PIN_MANAGER_IOC:
  6922                           	callstack 0
  6923                           
  6924                           ;
  6925                           ; Interrupt Vector Table @ 0x8
  6926                           ;
  6927                           
  6928                           	psect	ivt0x8
  6929   000008                     __pivt0x8:
  6930                           	callstack 0
  6931   000008                     ivt0x8_base:
  6932                           	callstack 0
  6933                           
  6934                           ; high-priority vector
  6935   000008  EF71  F011         	goto	_INTERRUPT_InterruptManager
  6936   000018                     	org	16
  6937                           
  6938                           ; low-priority vector
  6939   000018  00FF               	reset	
  6940                           
  6941                           	psect	text72
  6942   000000                     __ptext72:
  6943                           	callstack 0
  6944                           
  6945                           	psect	rparam
  6946   000000                     
  6947                           	psect	config
  6948                           
  6949                           ;Config register CONFIG1 @ 0x300000
  6950                           ;	External Oscillator Selection
  6951                           ;	FEXTOSC = OFF, Oscillator not enabled
  6952                           ;	Reset Oscillator Selection
  6953                           ;	RSTOSC = EXTOSC, EXTOSC operating per FEXTOSC bits (device manufacturing default)
  6954   300000                     	org	3145728
  6955   300000  FC                 	db	252
  6956                           
  6957                           ;Config register CONFIG2 @ 0x300001
  6958                           ;	Clock out Enable bit
  6959                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  6960                           ;	PRLOCKED One-Way Set Enable bit
  6961                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  6962                           ;	Clock Switch Enable bit
  6963                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  6964                           ;	Fail-Safe Clock Monitor Enable bit
  6965                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  6966                           ;	Fail-Safe Clock Monitor - Primary XTAL Enable bit
  6967                           ;	FCMENP = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on EXTOSC failure.
  6968                           ;	Fail-Safe Clock Monitor - Secondary XTAL Enable bit
  6969                           ;	FCMENS = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on SOSC failure.
  6970   300001                     	org	3145729
  6971   300001  FF                 	db	255
  6972                           
  6973                           ;Config register CONFIG3 @ 0x300002
  6974                           ;	MCLR Enable bit
  6975                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  6976                           ;	Power-up timer selection bits
  6977                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  6978                           ;	Multi-vector enable bit
  6979                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  6980                           ;	IVTLOCK bit One-way set enable bit
  6981                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  6982                           ;	Low Power BOR Enable bit
  6983                           ;	LPBOREN = OFF, Low-Power BOR disabled
  6984                           ;	Brown-out Reset Enable bits
  6985                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  6986   300002                     	org	3145730
  6987   300002  F7                 	db	247
  6988                           
  6989                           ;Config register CONFIG4 @ 0x300003
  6990                           ;	Brown-out Reset Voltage Selection bits
  6991                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  6992                           ;	ZCD Disable bit
  6993                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  6994                           ;	PPSLOCK bit One-Way Set Enable bit
  6995                           ;	PPS1WAY = ON, PPSLOCKED bit can be cleared and set only once; PPS registers remain loc
      +                          ked after one clear/set cycle
  6996                           ;	Stack Full/Underflow Reset Enable bit
  6997                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6998                           ;	Low Voltage Programming Enable bit
  6999                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  7000                           ;	Extended Instruction Set Enable bit
  7001                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  7002   300003                     	org	3145731
  7003   300003  FF                 	db	255
  7004                           
  7005                           ;Config register CONFIG5 @ 0x300004
  7006                           ;	WDT Period selection bits
  7007                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  7008                           ;	WDT operating mode
  7009                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
  7010   300004                     	org	3145732
  7011   300004  BF                 	db	191
  7012                           
  7013                           ;Config register CONFIG6 @ 0x300005
  7014                           ;	WDT Window Select bits
  7015                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  7016                           ;	WDT input clock selector
  7017                           ;	WDTCCS = SC, Software Control
  7018   300005                     	org	3145733
  7019   300005  FF                 	db	255
  7020                           
  7021                           ;Config register CONFIG7 @ 0x300006
  7022                           ;	Boot Block Size selection bits
  7023                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  7024                           ;	Boot Block enable bit
  7025                           ;	BBEN = OFF, Boot block disabled
  7026                           ;	Storage Area Flash enable bit
  7027                           ;	SAFEN = OFF, SAF disabled
  7028                           ;	Background Debugger
  7029                           ;	DEBUG = OFF, Background Debugger disabled
  7030   300006                     	org	3145734
  7031   300006  FF                 	db	255
  7032                           
  7033                           ;Config register CONFIG8 @ 0x300007
  7034                           ;	Boot Block Write Protection bit
  7035                           ;	WRTB = OFF, Boot Block not Write protected
  7036                           ;	Configuration Register Write Protection bit
  7037                           ;	WRTC = OFF, Configuration registers not Write protected
  7038                           ;	Data EEPROM Write Protection bit
  7039                           ;	WRTD = OFF, Data EEPROM not Write protected
  7040                           ;	SAF Write protection bit
  7041                           ;	WRTSAF = OFF, SAF not Write Protected
  7042                           ;	Application Block write protection bit
  7043                           ;	WRTAPP = OFF, Application Block not write protected
  7044   300007                     	org	3145735
  7045   300007  FF                 	db	255
  7046                           
  7047                           ;Config register CONFIG9 @ 0x300008
  7048                           ;	PFM and Data EEPROM Code Protection bit
  7049                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  7050   300008                     	org	3145736
  7051   300008  FF                 	db	255
  7052                           tosu	equ	0x4FF
  7053                           tosh	equ	0x4FE
  7054                           tosl	equ	0x4FD
  7055                           stkptr	equ	0x4FC
  7056                           pclatu	equ	0x4FB
  7057                           pclath	equ	0x4FA
  7058                           pcl	equ	0x4F9
  7059                           tblptru	equ	0x4F8
  7060                           tblptrh	equ	0x4F7
  7061                           tblptrl	equ	0x4F6
  7062                           tablat	equ	0x4F5
  7063                           prodh	equ	0x4F4
  7064                           prodl	equ	0x4F3
  7065                           indf0	equ	0x4EF
  7066                           postinc0	equ	0x4EE
  7067                           postdec0	equ	0x4ED
  7068                           preinc0	equ	0x4EC
  7069                           plusw0	equ	0x4EB
  7070                           fsr0h	equ	0x4EA
  7071                           fsr0l	equ	0x4E9
  7072                           wreg	equ	0x4E8
  7073                           indf1	equ	0x4E7
  7074                           postinc1	equ	0x4E6
  7075                           postdec1	equ	0x4E5
  7076                           preinc1	equ	0x4E4
  7077                           plusw1	equ	0x4E3
  7078                           fsr1h	equ	0x4E2
  7079                           fsr1l	equ	0x4E1
  7080                           bsr	equ	0x4E0
  7081                           indf2	equ	0x4DF
  7082                           postinc2	equ	0x4DE
  7083                           postdec2	equ	0x4DD
  7084                           preinc2	equ	0x4DC
  7085                           plusw2	equ	0x4DB
  7086                           fsr2h	equ	0x4DA
  7087                           fsr2l	equ	0x4D9
  7088                           status	equ	0x4D8

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         61
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     70      91
    BANK5           160      5      51
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0

Pointer List with Targets:

    S1752$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), Timer1_DefaultOverflowCallback(), LAB_ISR(), 

    S2430$20$0	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorCallback(), 

    S2430$21$0	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorCallback(), 

    S2430$22$0	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultParityErrorCallback(), 

    Timer1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S3490$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp...source	PTR const unsigned char  size(2) Largest target is 0

    S3490$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp...buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(COMRAM[2]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S3529$vp	PTR void  size(2) Largest target is 0

    convarg.vp	PTR void  size(2) Largest target is 0

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    printf@fmt	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 

    UART1_ParityErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultParityErrorCallback(), NULL(), 

    UART1_ParityErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultParityErrorCallback(), 

    UART1_OverrunErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorCallback(), 

    UART1_FramingErrorCallbackRegister@callbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorCallback(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorCallback(), NULL(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorCallback(), NULL(), 

    S2430$EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1.EventCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2430$ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART1_ParityErrorCallbackRegister(), 

    UART1.ParityErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART1_ParityErrorCallbackRegister(), 

    S2430$OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART1_OverrunErrorCallbackRegister(), 

    UART1.OverrunErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART1_OverrunErrorCallbackRegister(), 

    S2430$FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART1_FramingErrorCallbackRegister(), 

    UART1.FramingErrorCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> UART1_FramingErrorCallbackRegister(), 

    S2430$TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1.TxCollisionCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2430$RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1.RxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2430$TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1.TxCompleteCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2430$ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> UART1_ErrorGet(), 

    UART1.ErrorGet	PTR FTN()unsigned int  size(2) Largest target is 2
		 -> UART1_ErrorGet(), 

    S2430$BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1.BaudRateGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S2430$BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1.BaudRateSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2430$BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    UART1.BRGCountGet	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> NULL(), 

    S2430$BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    UART1.BRGCountSet	PTR FTN(unsigned long ,)void  size(2) Largest target is 1
		 -> NULL(), 

    S2430$AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    UART1.AutoBaudEventEnableGet	PTR FTN()_Bool  size(2) Largest target is 1
		 -> NULL(), 

    S2430$AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_AutoBaudQuery(), 

    UART1.AutoBaudQuery	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_AutoBaudQuery(), 

    S2430$AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> UART1_AutoBaudSet(), 

    UART1.AutoBaudSet	PTR FTN(_Bool ,)void  size(2) Largest target is 1
		 -> UART1_AutoBaudSet(), 

    S2430$TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_TransmitDisable(), 

    UART1.TransmitDisable	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_TransmitDisable(), 

    S2430$TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_TransmitEnable(), 

    UART1.TransmitEnable	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_TransmitEnable(), 

    S2430$IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_IsTxDone(), 

    UART1.IsTxDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_IsTxDone(), 

    S2430$IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_IsTxReady(), 

    UART1.IsTxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_IsTxReady(), 

    S2430$IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_IsRxReady(), 

    UART1.IsRxReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> UART1_IsRxReady(), 

    S2430$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> UART1_Write(), 

    UART1.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> UART1_Write(), 

    S2430$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> UART1_Read(), 

    UART1.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> UART1_Read(), 

    S2430$Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Deinitialize(), 

    UART1.Deinitialize	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Deinitialize(), 

    S2430$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Initialize(), 

    UART1.Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_Initialize(), 

    Timer0_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), Timer1_DefaultOverflowCallback(), LAB_ISR(), 

    Timer0_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), Timer1_DefaultOverflowCallback(), NULL(), 
		 -> LAB_ISR(), 

    Timer0.Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_Tasks(), Timer1_Tasks(), NULL(), 

    Timer0.TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR2_OverflowCallbackRegister(), Timer1_OverflowCallbackRegister(), Timer0_OverflowCallbackRegister(), 

    Timer0.PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_Reload(), TMR2_PeriodCountSet(), Timer1_Write(), 

    Timer0.Stop	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Stop(), TMR2_Stop(), Timer1_Stop(), 

    Timer0.Start	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Start(), TMR2_Start(), Timer1_Start(), 

    Timer0.Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_Initialize(), Timer1_Initialize(), Timer0_Initialize(), 

    TMR2_OverflowCallbackRegister@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), Timer1_DefaultOverflowCallback(), LAB_ISR(), 

    TMR2_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), Timer1_DefaultOverflowCallback(), NULL(), 
		 -> LAB_ISR(), 

    tmr2.Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_Tasks(), Timer1_Tasks(), NULL(), 

    tmr2.TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR2_OverflowCallbackRegister(), Timer1_OverflowCallbackRegister(), Timer0_OverflowCallbackRegister(), 

    tmr2.PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_Reload(), TMR2_PeriodCountSet(), Timer1_Write(), 

    tmr2.Stop	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Stop(), TMR2_Stop(), Timer1_Stop(), 

    tmr2.Start	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Start(), TMR2_Start(), Timer1_Start(), 

    tmr2.Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_Initialize(), Timer1_Initialize(), Timer0_Initialize(), 

    Timer1_OverflowCallbackRegister@CallbackHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), Timer1_DefaultOverflowCallback(), LAB_ISR(), 

    Timer1_OverflowCallback	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_DefaultOverflowCallback(), TMR2_DefaultOverflowCallback(), Timer1_DefaultOverflowCallback(), NULL(), 
		 -> LAB_ISR(), 

    S1752TMR_INTERFACE$Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_Tasks(), Timer1_Tasks(), NULL(), 

    Timer1.Tasks	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_Tasks(), Timer1_Tasks(), NULL(), 

    S1752TMR_INTERFACE$TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR2_OverflowCallbackRegister(), Timer1_OverflowCallbackRegister(), Timer0_OverflowCallbackRegister(), 

    Timer1.TimeoutCallbackRegister	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> TMR2_OverflowCallbackRegister(), Timer1_OverflowCallbackRegister(), Timer0_OverflowCallbackRegister(), 

    S1752TMR_INTERFACE$PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_Reload(), TMR2_PeriodCountSet(), Timer1_Write(), 

    Timer1.PeriodCountSet	PTR FTN(unsigned int ,)void  size(2) Largest target is 1
		 -> Timer0_Reload(), TMR2_PeriodCountSet(), Timer1_Write(), 

    S1752TMR_INTERFACE$Stop	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Stop(), TMR2_Stop(), Timer1_Stop(), 

    Timer1.Stop	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Stop(), TMR2_Stop(), Timer1_Stop(), 

    S1752TMR_INTERFACE$Start	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Start(), TMR2_Start(), Timer1_Start(), 

    Timer1.Start	PTR FTN()void  size(2) Largest target is 1
		 -> Timer0_Start(), TMR2_Start(), Timer1_Start(), 

    S1752TMR_INTERFACE$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_Initialize(), Timer1_Initialize(), Timer0_Initialize(), 

    Timer1.Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> TMR2_Initialize(), Timer1_Initialize(), Timer0_Initialize(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), INT2_DefaultInterruptHandler(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), INT1_DefaultInterruptHandler(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), INT0_DefaultInterruptHandler(), 

    PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Period_DefaultInterruptHandler(), 

    PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output2_DefaultInterruptHandler(), 

    PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output1_DefaultInterruptHandler(), 

    PWM1_16BIT_Period_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), PWM1_16BIT_Period_DefaultInterruptHandler(), 

    PWM1_16BIT_Slice1Output2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), PWM1_16BIT_Slice1Output2_DefaultInterruptHandler(), 

    PWM1_16BIT_Slice1Output1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), PWM1_16BIT_Slice1Output1_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_ADC
    _main->_EEPROM
    _VSR->_printf
    _SYSTEM_Initialize->_Timer1_Initialize
    _UART1_Initialize->_UART1_FramingErrorCallbackRegister
    _UART1_Initialize->_UART1_OverrunErrorCallbackRegister
    _UART1_Initialize->_UART1_ParityErrorCallbackRegister
    _Timer1_Initialize->_Timer1_OverflowCallbackRegister
    _Timer0_Initialize->_Timer0_OverflowCallbackRegister
    _TMR2_Initialize->_TMR2_OverflowCallbackRegister
    _PWM1_16BIT_Initialize->_PWM1_16BIT_Period_SetInterruptHandler
    _PWM1_16BIT_Initialize->_PWM1_16BIT_Slice1Output1_SetInterruptHandler
    _PWM1_16BIT_Initialize->_PWM1_16BIT_Slice1Output2_SetInterruptHandler
    _INTERRUPT_Initialize->_INT0_SetInterruptHandler
    _INTERRUPT_Initialize->_INT1_SetInterruptHandler
    _INTERRUPT_Initialize->_INT2_SetInterruptHandler
    _PWM->_printf
    _Interrupt->_Timer0_OverflowCallbackRegister
    _EEPROM->_printf
    _Timer1_Reload->_Timer1_Write
    _ADC->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_IsTxReady
    _putch->_UART1_Write
    _abs->___awmod

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _Timer0_OverflowISR->_LAB_ISR

Critical Paths under _main in BANK5

    _main->_VSR

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   25518
                                              3 BANK5      2     2      0
                                _ADC
                              _Blink
                             _EEPROM
                         _HelloWorld
                          _Interrupt
                                _PWM
                             _Rotate
                  _SYSTEM_Initialize
                        _SleepWakeUp
                         _Timer1_Lab
                                _VSR
                      _checkButtonS1
                            _nextLab
 ---------------------------------------------------------------------------------
 (1) _nextLab                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkButtonS1                                        1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _VSR                                                  3     3      0    5780
                                              0 BANK5      3     3      0
           _ADCC_GetSingleConversion
                             _printf
 ---------------------------------------------------------------------------------
 (1) _Timer1_Lab                                           1     1      0     166
                                              5 COMRAM     1     1      0
                      _Timer1_Reload
                       _Timer1_Start
                        _Timer1_Stop
 ---------------------------------------------------------------------------------
 (1) _SleepWakeUp                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    1241
                    _ADCC_Initialize
                   _CLOCK_Initialize
               _INTERRUPT_Initialize
                     _NVM_Initialize
             _PIN_MANAGER_Initialize
              _PWM1_16BIT_Initialize
                    _TMR2_Initialize
                  _Timer0_Initialize
                  _Timer1_Initialize
                   _UART1_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     349
 _UART1_FramingErrorCallbackRegister
 _UART1_OverrunErrorCallbackRegister
  _UART1_ParityErrorCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _UART1_ParityErrorCallbackRegister                    2     0      2     109
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_OverrunErrorCallbackRegister                   2     0      2     120
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_FramingErrorCallbackRegister                   2     0      2     120
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Timer1_Initialize                                    2     2      0      98
                                              5 COMRAM     2     2      0
    _Timer1_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _Timer1_OverflowCallbackRegister                      2     0      2      98
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _Timer0_Initialize                                    0     0      0     174
    _Timer0_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0      98
      _TMR2_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _TMR2_OverflowCallbackRegister                        2     0      2      98
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_16BIT_Initialize                                0     0      0     261
_PWM1_16BIT_Period_SetInterruptHandl
_PWM1_16BIT_Slice1Output1_SetInterru
_PWM1_16BIT_Slice1Output2_SetInterru
 ---------------------------------------------------------------------------------
 (3) _PWM1_16BIT_Slice1Output2_SetInterruptHandler         2     0      2      87
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM1_16BIT_Slice1Output1_SetInterruptHandler         2     0      2      87
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM1_16BIT_Period_SetInterruptHandler                2     0      2      87
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NVM_Initialize                                       0     0      0       0
                    _NVM_StatusClear
 ---------------------------------------------------------------------------------
 (3) _NVM_StatusClear                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0     261
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             2     0      2      87
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             2     0      2      87
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             2     0      2      87
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _CLOCK_Initialize                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Rotate                                               1     1      0       0
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM                                                  0     0      0    5901
           _ADCC_GetSingleConversion
                 _PWM1_16BIT_Disable
                  _PWM1_16BIT_Enable
     _PWM1_16BIT_LoadBufferRegisters
_PWM1_16BIT_SetSlice1Output1DutyCycl
                         _TMR2_Start
                          _TMR2_Stop
                             _printf
 ---------------------------------------------------------------------------------
 (2) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_16BIT_SetSlice1Output1DutyCycleRegister         2     0      2     121
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_16BIT_LoadBufferRegisters                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_16BIT_Enable                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_16BIT_Disable                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupt                                            0     0      0     174
    _Timer0_OverflowCallbackRegister
 ---------------------------------------------------------------------------------
 (3) _Timer0_OverflowCallbackRegister                      2     0      2     174
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _HelloWorld                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROM                                               1     1      0    6310
                                             69 COMRAM     1     1      0
           _ADCC_GetSingleConversion
                        _EEPROM_Read
                       _EEPROM_Write
                 _NVM_UnlockKeyClear
                   _NVM_UnlockKeySet
                             _printf
 ---------------------------------------------------------------------------------
 (2) _NVM_UnlockKeySet                                     2     0      2     121
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _NVM_UnlockKeyClear                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Write                                         5     1      4     265
                                              3 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _EEPROM_Read                                          3     0      3     144
                                              3 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (1) _Blink                                                1     1      0     166
                                              5 COMRAM     1     1      0
                      _Timer1_Reload
                       _Timer1_Start
                        _Timer1_Stop
 ---------------------------------------------------------------------------------
 (2) _Timer1_Stop                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Timer1_Start                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Timer1_Reload                                        0     0      0     166
                       _Timer1_Write
 ---------------------------------------------------------------------------------
 (3) _Timer1_Write                                         2     0      2     166
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  1     1      0    5780
                                             69 COMRAM     1     1      0
           _ADCC_GetSingleConversion
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               7     4      3    5758
                                             64 COMRAM     5     2      3
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             6     1      5    5400
                                             58 COMRAM     6     1      5
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           18    12      6    5050
                                             45 COMRAM    13     7      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                13     9      4    3762
                                             32 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2135
                                             21 COMRAM    11     5      6
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4     999
                                             14 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     750
                                              5 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      68
                                              4 COMRAM     1     1      0
                    _UART1_IsTxReady
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (7) _UART1_Write                                          1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _UART1_IsTxReady                                      1     1      0      24
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                              9 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     448
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     452
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetSingleConversion                             5     3      2      22
                                              3 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          2     2      0       0
                                              1 COMRAM     2     2      0
                    _PIN_MANAGER_IOC
                 _Timer0_OverflowISR
 ---------------------------------------------------------------------------------
 (12) _Timer0_OverflowISR                                  0     0      0       0
                                NULL *
                            _LAB_ISR *
       _TMR2_DefaultOverflowCallback *
     _Timer0_DefaultOverflowCallback *
     _Timer1_DefaultOverflowCallback *
 ---------------------------------------------------------------------------------
 (13) _Timer1_DefaultOverflowCallback                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _Timer0_DefaultOverflowCallback                      0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _TMR2_DefaultOverflowCallback                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _LAB_ISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _PIN_MANAGER_IOC                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
     _ADCC_GetSingleConversion
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___awdiv
             ___awmod
             _abs
               ___awmod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_IsTxReady
                   _UART1_Write
               _fputs
                 _fputc
           _fputc
   _Blink
     _Timer1_Reload
       _Timer1_Write
     _Timer1_Start
     _Timer1_Stop
   _EEPROM
     _ADCC_GetSingleConversion
     _EEPROM_Read
     _EEPROM_Write
     _NVM_UnlockKeyClear
     _NVM_UnlockKeySet
     _printf
   _HelloWorld
   _Interrupt
     _Timer0_OverflowCallbackRegister
   _PWM
     _ADCC_GetSingleConversion
     _PWM1_16BIT_Disable
     _PWM1_16BIT_Enable
     _PWM1_16BIT_LoadBufferRegisters
     _PWM1_16BIT_SetSlice1Output1DutyCycleRegister
     _TMR2_Start
     _TMR2_Stop
     _printf
   _Rotate
   _SYSTEM_Initialize
     _ADCC_Initialize
     _CLOCK_Initialize
     _INTERRUPT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _NVM_Initialize
       _NVM_StatusClear
     _PIN_MANAGER_Initialize
     _PWM1_16BIT_Initialize
       _PWM1_16BIT_Period_SetInterruptHandler
       _PWM1_16BIT_Slice1Output1_SetInterruptHandler
       _PWM1_16BIT_Slice1Output2_SetInterruptHandler
     _TMR2_Initialize
       _TMR2_OverflowCallbackRegister
     _Timer0_Initialize
       _Timer0_OverflowCallbackRegister
     _Timer1_Initialize
       _Timer1_OverflowCallbackRegister
     _UART1_Initialize
       _UART1_FramingErrorCallbackRegister
       _UART1_OverrunErrorCallbackRegister
       _UART1_ParityErrorCallbackRegister
   _SleepWakeUp
   _Timer1_Lab
     _Timer1_Reload
     _Timer1_Start
     _Timer1_Stop
   _VSR
     _ADCC_GetSingleConversion
     _printf
   _checkButtonS1
   _nextLab

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
   _Timer0_OverflowISR
     NULL(Fake) *
     _LAB_ISR *
     _TMR2_DefaultOverflowCallback *
     _Timer0_DefaultOverflowCallback *
     _Timer1_DefaultOverflowCallback *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             200      0       0       0        0.0%
BITBIGSFRllllhh    162      0       0      56        0.0%
BITBIGSFR_1        100      0       0      36        0.0%
BITBANK20          100      0       0      34        0.0%
BANK20             100      0       0      35        0.0%
BITBANK19          100      0       0      32        0.0%
BANK19             100      0       0      33        0.0%
BITBANK18          100      0       0      30        0.0%
BANK18             100      0       0      31        0.0%
BITBANK17          100      0       0      28        0.0%
BANK17             100      0       0      29        0.0%
BITBANK16          100      0       0      26        0.0%
BANK16             100      0       0      27        0.0%
BITBANK15          100      0       0      24        0.0%
BANK15             100      0       0      25        0.0%
BITBANK14          100      0       0      22        0.0%
BANK14             100      0       0      23        0.0%
BITBANK13          100      0       0      20        0.0%
BANK13             100      0       0      21        0.0%
BITBANK12          100      0       0      18        0.0%
BANK12             100      0       0      19        0.0%
BITBANK11          100      0       0      16        0.0%
BANK11             100      0       0      17        0.0%
BITBANK10          100      0       0      14        0.0%
BANK10             100      0       0      15        0.0%
BITBANK9           100      0       0      12        0.0%
BANK9              100      0       0      13        0.0%
BITBANK8           100      0       0      10        0.0%
BANK8              100      0       0      11        0.0%
BITBANK7           100      0       0       8        0.0%
BANK7              100      0       0       9        0.0%
BITBANK6           100      0       0       6        0.0%
BANK6              100      0       0       7        0.0%
BITBIGSFRlllhlh     B7      0       0      51        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      5      33       5       31.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     46      5B       1       95.8%
BITBIGSFRlllhlh     5E      0       0      52        0.0%
BITBIGSFRlllhll     5A      0       0      55        0.0%
BITBIGSFRllhlhh     48      0       0      48        0.0%
BITBIGSFRllllll     40      0       0      61        0.0%
BITBIGSFRllhlhh     39      0       0      47        0.0%
BITBIGSFRllllhl     33      0       0      59        0.0%
BITBIGSFRlllllh     30      0       0      60        0.0%
BITBIGSFRhhhl       1E      0       0      39        0.0%
BITBIGSFRlllhlh     19      0       0      53        0.0%
BITBIGSFRlllhll     13      0       0      54        0.0%
BITBIGSFRhhlhl       7      0       0      41        0.0%
BITBIGSFRhhhh        7      0       0      38        0.0%
BITBIGSFRllhhl       6      0       0      45        0.0%
BITBIGSFRhhlhh       5      0       0      40        0.0%
BITBIGSFRllhlhh      5      0       0      49        0.0%
BITBIGSFRhhll        5      0       0      42        0.0%
BITBIGSFRlhh         3      0       0      43        0.0%
BITBIGSFRllhlhh      2      0       0      46        0.0%
BITBIGSFRllllhh      1      0       0      57        0.0%
BITBIGSFRllllhh      1      0       0      58        0.0%
BITBIGSFRllhll       1      0       0      50        0.0%
BITBIGSFRlhl         1      0       0      44        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      8E      62        0.0%
DATA                 0      0      8E       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Jun 16 14:25:39 2023

                              ?_TMR2_OverflowCallbackRegister 0504  
                                                          l90 1BCA  
                                                ___awdiv@sign 0509  
                                        ??_Timer0_OverflowISR 0502  
                                                         l155 19A2  
                                                         l237 1B1E  
                                                         _ADC 1BD2  
                                                         l488 233A  
                                                         _PR2 031D  
                                                         _PWM 1F60  
                                                         _VSR 18CC  
                                  ??_INT0_SetInterruptHandler 0506  
                                             _timer1ReloadVal 0549  
                                                         _abs 220C  
                                                         _pad 0000  
                                                ___awmod@sign 0509  
                                             _TMR2_Initialize 2352  
                                                         tosl 04FD  
                                                         wreg 04E8  
                                              _UART1_IsTxDone 0000  
                                             __end_of_LAB_ISR 1E18  
                      __end_of_Timer1_DefaultOverflowCallback 24F4  
                              _Timer1_DefaultOverflowCallback 24F2  
                                                        ?_ADC 0501  
                                              _UART1_ErrorGet 0000  
                                                        ?_PWM 0501  
                            ??_PWM1_16BIT_LoadBufferRegisters 0504  
                             ?_PWM1_16BIT_LoadBufferRegisters 0501  
                                                        ?_VSR 0501  
                                                        l1021 2386  
                                                        ?_abs 050A  
                                                        l2205 00EE  
                                                        l1350 2442  
                                                        l2215 2232  
                                                        l3204 21E0  
                                                        l3300 004C  
                                                        l2173 0012  
                                                        l3230 1E4A  
                                                        l3310 0018  
                                                        l1470 2286  
                                                        l2175 0016  
                                                        l3232 1E52  
                                                        l3224 1E3A  
                                                        l3208 21F6  
                                                        l3320 0052  
                                                        l2184 0032  
                                                        l3312 0020  
                                                        l3250 1E86  
                                                        l3242 1E70  
                                                        l3218 1E2A  
                                                        l3330 007E  
                                                        l3322 005C  
                                                        l2186 003A  
                                                        l3314 0028  
                                                        l3306 0000  
                                                        l2179 0060  
                                                        l2187 0072  
                                                        l3180 2458  
                                                        l3332 0084  
                                                        l3340 00DE  
                                                        l3324 0066  
                                                        l3316 0042  
                                                        l3308 000E  
                                                        l3246 1E7A  
                                                        l3270 1F22  
                                                        l3262 1F0A  
                                                        l2198 014E  
                                                        l3350 011E  
                                                        l3342 00F0  
                                                        l3334 00B6  
                                                        l3326 006E  
                                                        l3318 004C  
                                                        l3272 1F2A  
                                                        l3352 012E  
                                                        l3344 00FC  
                                                        l3336 00BC  
                                                        l3328 007A  
                                                        l3360 002A  
                                                        l3408 161A  
                                                        l3282 1F4A  
                                                        l3266 1F16  
                                                        l3194 1C8A  
                                                        l3290 0000  
                                                        l3346 010E  
                                                        l3338 00C2  
                                                        l3370 0070  
                                                        l3362 0030  
                                                        l3292 0008  
                                                        l3348 0118  
                                                        l3372 00A4  
                                                        l3364 0034  
                                                        l3380 00C6  
                                                        l3356 0000  
                                                        l3604 20B2  
                                                        l2804 1B5C  
                                                        l3286 1F56  
                                                        l3278 1F40  
                                                        l3294 001C  
                                                        l3366 0040  
                                                        l3358 0020  
                                                        l3614 1BDE  
                                                        l3462 20E6  
                                                        l3296 0030  
                                                        l3376 00BA  
                                                        l3368 0058  
                                                        l2760 23DC  
                                                        l3704 1AB0  
                                                        l3298 0034  
                                                        l3628 1C70  
                                                        l3732 21CC  
                                                        l3590 2082  
                                                        l2758 23D6  
                                                        l3902 18DA  
                                                        ?_pad 0516  
                                                        l3760 1A76  
                                                        l3664 1F7A  
                                                        l2944 2190  
                                                        l3738 19B6  
                                                        l3674 1FAC  
                                                        l2794 1B3C  
                                                        l3930 1D26  
                                                        l2948 21A0  
                                                        l3692 1A94  
                                                        l3908 1916  
                                                        l3940 1D44  
                                                        l3932 1D2C  
                                                        l3942 1D4A  
                                                        l3934 1D32  
                                                        l3950 1D5C  
                                                        l3926 1D1A  
                                                        l3944 1D50  
                                                        l3936 1D38  
                                                        l3952 1D92  
                                                        l3928 1D20  
                                                        l3946 1D56  
                                                        l3938 1D3E  
                                                        STR_1 1601  
                                                        STR_2 1601  
                                                        STR_3 1601  
                                                        STR_4 1601  
                                                        u1100 1C84  
                                                        u1120 1CC8  
                                                        u1300 000C  
                                                        u1230 1F2E  
                                                        u1310 0018  
                                                        u1311 0016  
                                                        u1320 0028  
                                                        u1400 0058  
                                                        u1321 0026  
                                                        u1401 0056  
                                                        u2017 2276  
                                                        u1170 1E56  
                                                        u1330 004C  
                                                        u1410 0070  
                                                        u1331 004A  
                                                        u1411 006E  
                                                        u2027 1918  
                                                        u1260 0008  
                                                        u1340 005C  
                                                        u1500 2086  
                                                        u1261 0006  
                                                        u1341 005A  
                                                        u2037 1B46  
                                                        _LATA 04BE  
                                                        u1270 004C  
                                                        u1350 00F0  
                                                        _LATB 04BF  
                                                        u1271 004A  
                                                        u1351 00EE  
                                                        _LATC 04C0  
                                                        u1280 2218  
                                                        u1360 00FC  
                                                        u1361 00FA  
                                                        u1370 010E  
                                                        u1290 000A  
                                                        u1371 010C  
                                                        u1291 0006  
                                                        u1380 0118  
                                                        u1381 0116  
                                                        u1390 0020  
                                                        u1391 001E  
                                                        _T2PR 031D  
                                                        u1485 20F8  
                                                        u1486 20FA  
                                                        u1680 1A98  
                                                        u1965 1900  
                                                        _WPUA 0401  
                                                        _WPUB 0409  
                                                        _WPUC 0411  
                                     __end_of_NVM_StatusClear 24B2  
                                                        abs@a 050A  
                                                        _dbuf 0568  
                                                        _main 1D10  
                                                        _dtoa 0000  
                                                        _prec 0562  
                                                        pad@i 051D  
                                                        pad@p 051A  
                                                        fsr1h 04E2  
                                                        fsr2h 04DA  
                                                        indf2 04DF  
                                                        fsr1l 04E1  
                                                        pad@w 051F  
                                                        fsr2l 04D9  
                                                _unlockKeyLow 054E  
                                   ?_INT2_SetInterruptHandler 0504  
                                                        start 001A  
                                             _UART1_IsRxReady 0000  
                                             _UART1_IsTxReady 2434  
                                                 _switchEvent 055A  
                                                ___param_bank 0000  
                                                       ??_ADC 0546  
                                                       ??_PWM 0546  
                                                       ??_VSR 058E  
                                                       ??_abs 050C  
                                     _Timer1_OverflowCallback 058C  
                                        __end_of_EEPROM_Write 2102  
                                                       ??_pad 051C  
   PWM1_16BIT_SetSlice1Output1DutyCycleRegister@registerValue 0504  
                                                       _ADACT 03F9  
                                                       _ADCAP 03F0  
                                                       ?_main 0501  
                                                       ?_dtoa 0521  
                                                       _ADCLK 03FA  
                                                       _ADCNT 03E6  
                                                       _ADPCH 03EC  
                                                       _ADREF 03F8  
                                             __end_of___awdiv 1E90  
                                                       _ADRES 03EA  
                                             __end_of___awmod 1F60  
                                                       _ADRPT 03E7  
                                                       _T1CLK 0317  
                                             ___awdiv@divisor 0506  
                                                       _T1CON 0314  
                                                       _U1P1H 02A6  
                                                       _U1P2H 02A8  
                                                       _U1P1L 02A5  
                                                       _U1P3H 02AA  
                                                       _U1P2L 02A7  
                                                       _T2CON 031E  
                                                       _U1P3L 02A9  
                                                       _IOCAF 0407  
                                                       _T2HLT 031F  
                                                       _IOCBF 040F  
                                                       _IOCCF 0417  
                                                       _IOCAN 0406  
                                                       _IOCAP 0405  
                                                       _IOCBN 040E  
                                                       _IOCCN 0416  
                                                       _IOCBP 040D  
                                                       _IOCCP 0415  
                                                       _T2TMR 031C  
                                                       _U1UIR 02B1  
                                                       _T2RST 0321  
                                                       _U1RXB 02A1  
                                                       _U1TXB 02A3  
                                                       i2l853 2300  
                                      ?_PWM1_16BIT_Initialize 0501  
                                                       i2l849 22F6  
                                             ___awdiv@counter 0508  
                                    _rotateReg@Interrupt$F496 0551  
                                                       _OSCEN 00B3  
                                                vfpfcnvrt@fmt 0530  
                                                       _TMR0H 0319  
                                                       _TMR1H 0313  
                                                       _TMR0L 0318  
                                                       _TMR1L 0312  
                                        _UART1_IsTxReady$2941 0504  
                                                       _TRISA 04C6  
                                                       _TRISB 04C7  
                                                       _TRISC 04C8  
                                                       _Blink 2072  
                                    __end_of_NVM_UnlockKeySet 24A4  
                                                  _HelloWorld 23CA  
                  __end_of_UART1_FramingErrorCallbackRegister 2434  
                        ??_UART1_FramingErrorCallbackRegister 0506  
                         ?_UART1_FramingErrorCallbackRegister 0504  
                          _UART1_FramingErrorCallbackRegister 2422  
            _PWM1_16BIT_Slice1Output1_DefaultInterruptHandler 0000  
                                                       _delay 0554  
                                     __end_of_PIN_MANAGER_IOC 24F6  
                                                 ?_TMR2_Start 0501  
                                                       _fputc 1C78  
                                                       _fputs 21DA  
                                                       pad@fp 0516  
                                                       _width 0560  
                                             __end_of_nextLab 2456  
                                                       _putch 2456  
                                                       dtoa@d 0523  
                                                       dtoa@i 052B  
                                                       dtoa@p 0527  
                                                       dtoa@s 052D  
                                                       dtoa@w 0529  
                                    _INT1_SetInterruptHandler 24EA  
                                               _unlockKeyHigh 054D  
                                                       pclath 04FA  
                                                       pclatu 04FB  
                                                       tablat 04F5  
                                                       status 04D8  
                                       __end_of_Timer1_Reload 2472  
                                            EEPROM_Write@data 0507  
                                             __initialization 223C  
                                        _UART1_TransmitEnable 0000  
                                                __end_of_main 1D9C  
                                                __end_of_dtoa 0000  
                                     __end_of_TMR2_Initialize 2372  
                                 ?_INTERRUPT_InterruptManager 0501  
                                                ?_UART1_Write 0501  
                                                      ??_main 0591  
                                                      ??_dtoa 0525  
                                                   ??_LAB_ISR 0501  
                                               __activetblptr 0003  
                                  __end_of_NVM_UnlockKeyClear 24C4  
               __end_of_PWM1_16BIT_Period_SetInterruptHandler 24E8  
                     ??_PWM1_16BIT_Period_SetInterruptHandler 0506  
                      ?_PWM1_16BIT_Period_SetInterruptHandler 0504  
                       _PWM1_16BIT_Period_SetInterruptHandler 24E6  
                                                      ?_Blink 0501  
                                            _UART1_Initialize 201C  
            UART1_ParityErrorCallbackRegister@callbackHandler 0504  
           UART1_OverrunErrorCallbackRegister@callbackHandler 0504  
           UART1_FramingErrorCallbackRegister@callbackHandler 0504  
                                                      _ADACCH 03E4  
                                                      _ADACCL 03E3  
                                                      _ADACCU 03E5  
                                                      _ADACQH 03EF  
                                                      _ADACQL 03EE  
                                                      _ADCON0 03F3  
                                                      _ADCON1 03F4  
                                                      _ADCON2 03F5  
                                                      _ADCON3 03F6  
                                                      _ADERRH 03DE  
                                                      _ADERRL 03DD  
                                                      ?_fputc 0506  
                                                      _ACTCON 00AC  
                                                      _ADLTHH 03DA  
                                                      _ADLTHL 03D9  
                                                      ?_fputs 050F  
                                                      _ADRESH 03EB  
                                                      _ADRESL 03EA  
                                                      _ADPREH 03F2  
                                                      _ADPREL 03F1  
                                                      _ADSTAT 03F7  
                                                      _ADUTHH 03DC  
                                            ___awdiv@dividend 0504  
                                                      _ADUTHL 03DB  
                                                      _ANSELA 0400  
                                                      ?_putch 0501  
                                                      _ANSELB 0408  
                                                      _ANSELC 0410  
                                                      _T0CON0 031A  
                                                      _T0CON1 031B  
                                                      _EEPROM 19AA  
                                                      _T1GATE 0316  
                                                      _T1GCON 0315  
                                                      _RB4I2C 0287  
                                                      _U1CON0 02AB  
                                                      _U1CON1 02AC  
                                                      _U1CON2 02AD  
                                                      _RB6I2C 0286  
                                                      _U1BRGH 02AF  
                                                      _U1FIFO 02B0  
                                                      _U1BRGL 02AE  
                                                      _RC5PPS 0216  
                                                      _ODCONA 0402  
                                                      _ODCONB 040A  
                                                      _ODCONC 0412  
                                                      _RC6PPS 0217  
                                                      i2l3436 1DA4  
                                                      _INLVLA 0404  
                                                      _INLVLB 040C  
                                                      _INLVLC 0414  
                                                      _TABLAT 04F5  
                                     __end_of_UART1_IsTxReady 2446  
                                                      _OSCFRQ 00B1  
                                                      _TMR0IE 255F  
                                            ?_NVM_StatusClear 0501  
                                               ??_SleepWakeUp 0504  
                                               ??_Timer1_Stop 0504  
                                                  _Timer1_Lab 1A7E  
                                                vfprintf@cfmt 0540  
                                                      _Rotate 1B2C  
                        __end_of_TMR2_DefaultOverflowCallback 24F2  
                                _TMR2_DefaultOverflowCallback 24F0  
                                                   ??___awdiv 0508  
                                                   ??___awmod 0508  
                                           __end_of_TMR2_Stop 24B8  
                                                      clear_0 2242  
                                                      clear_1 224E  
                                            ___awdiv@quotient 050A  
                                             ___awmod@divisor 0506  
                                                      isa$std 0001  
                                             ___awmod@counter 0508  
                                                      _printf 23AE  
                                                      pad@buf 0518  
                                                      dtoa@fp 0521  
                                           ?_CLOCK_Initialize 0501  
                                             _ADCC_Initialize 213C  
                                                      fputc@c 0506  
                                _INT2_DefaultInterruptHandler 0000  
                                                      fputs@c 0513  
                                                      fputs@i 0514  
                                                      fputs@s 050F  
                                          ??_CLOCK_Initialize 0504  
                                                   ??_nextLab 0504  
                                                __mediumconst 0000  
                                                 ?_HelloWorld 0501  
                                                      tblptrh 04F7  
                                                      tblptrl 04F6  
                                                      tblptru 04F8  
                  __end_of_UART1_OverrunErrorCallbackRegister 2422  
                        ??_UART1_OverrunErrorCallbackRegister 0506  
                         ?_UART1_OverrunErrorCallbackRegister 0504  
                          _UART1_OverrunErrorCallbackRegister 2410  
                                            __end_of_vfprintf 18CC  
                                   ?_ADCC_GetSingleConversion 0504  
                    INT2_SetInterruptHandler@InterruptHandler 0504  
                    INT1_SetInterruptHandler@InterruptHandler 0504  
                    INT0_SetInterruptHandler@InterruptHandler 0504  
       PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler 0504  
PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler 0504  
PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler 0504  
                                            ?_PIN_MANAGER_IOC 0501  
                                            ??_NVM_Initialize 0504  
                                           _UART1_AutoBaudSet 0000  
                                           _SYSTEM_Initialize 2292  
                     __end_of_Timer0_OverflowCallbackRegister 249A  
                           ??_Timer0_OverflowCallbackRegister 0506  
                            ?_Timer0_OverflowCallbackRegister 0504  
                             _Timer0_OverflowCallbackRegister 2490  
                                                  __accesstop 0560  
                                     __end_of__initialization 2262  
                                          ?_SYSTEM_Initialize 0501  
                                               ___rparam_used 0001  
                                               __end_of_Blink 20C0  
                                              __pcstackCOMRAM 0501  
                                         ??_SYSTEM_Initialize 0508  
                                       _UART1_TransmitDisable 0000  
                                         __end_of_SleepWakeUp 21A8  
                                               __end_of_fputc 1D10  
                                               __end_of_fputs 220C  
                               ?_TMR2_DefaultOverflowCallback 0501  
                                               __end_of_putch 2466  
                                            ?_TMR2_Initialize 0501  
                                         __end_of_Timer1_Stop 24CA  
                                                     ??_Blink 0506  
                            __end_of_INT2_SetInterruptHandler 24EA  
                                   _UART1_FramingErrorHandler 0547  
                             ??_TMR2_OverflowCallbackRegister 0506  
                                           __end_of_Interrupt 21DA  
                                                     ??_fputc 050A  
                                   __end_of_SYSTEM_Initialize 22BA  
                                                     ??_fputs 0513  
                                                     ??_putch 0505  
                                                     ?_EEPROM 0501  
                                                _EEPROM_Write 20C0  
                                                  __pbssBANK5 0560  
                                            ?_UART1_IsTxReady 0501  
                                                     IVTBASEH 045E  
                                                     IVTBASEL 045D  
                                                     IVTBASEU 045F  
                                          _UART1_Deinitialize 0000  
                                               ?_Timer1_Start 0501  
                                               ?_Timer1_Write 0504  
                                                 ?_Timer1_Lab 0501  
                                                     ?_Rotate 0501  
                                     __end_of_ADCC_Initialize 2176  
                                                     _ADFLTRH 03E2  
                                                     _ADFLTRL 03E1  
                                     ??_PWM1_16BIT_Initialize 0506  
                                                  _ledDisplay 054F  
                                                     _ADPREVH 03E9  
                                                     _ADPREVL 03E8  
                                                     _ADSTPTH 03E0  
                                                     _ADSTPTL 03DF  
                                                     ?_printf 0541  
                                                     _LAB_ISR 1D9C  
                                                     _U1ERRIE 02B3  
                                                     _U1ERRIR 02B2  
                                  ??_INT1_SetInterruptHandler 0506  
                                                     _U1RXCHK 02A2  
                                                     _U1TXCHK 02A4  
                                                     _U1RXPPS 0272  
                                                     _OSCCON1 00AD  
                                                     _OSCCON3 00AF  
                                                     _TBLPTRH 04F7  
                                                     _TBLPTRL 04F6  
                                                     _TBLPTRU 04F8  
                                                     _NVMADRH 0044  
                                                     _NVMADRL 0043  
                                           ?_NVM_UnlockKeySet 0504  
                                                     _NVMADRU 0045  
                                                     _NVMDATH 0047  
                                                     _OSCTUNE 00B0  
                                                     _PWM1CLK 0461  
                                                     _NVMDATL 0046  
                                           _PWM1_16BIT_Enable 24D8  
                                                     _PWM1GIE 0468  
                                                     _PWM1CON 0469  
                                                     _PWM1GIR 0467  
                                                     _PWM1ERS 0460  
                                                     _PWM1LDS 0462  
                                                     _PWM1PRH 0464  
                                                     _PWM1PRL 0463  
                                                     _NVMLOCK 0042  
                                                     _SLRCONA 0403  
                                                     _SLRCONB 040B  
                                                     _SLRCONC 0413  
                                                ??_TMR2_Start 0504  
                                          ??_NVM_UnlockKeySet 0506  
                                          ?_PWM1_16BIT_Enable 0501  
                                   ?_INT0_SetInterruptHandler 0504  
                                         ??_PWM1_16BIT_Enable 0504  
                                              ??_Timer1_Start 0504  
                                              ??_Timer1_Write 0506  
                                                 _SleepWakeUp 2176  
                                                     __Hparam 0000  
                                                     __Lparam 0000  
                                    __end_of_UART1_Initialize 2072  
                                                 _Timer0_Stop 0000  
                                                 _Timer1_Stop 24C4  
                            ??_Timer0_DefaultOverflowCallback 0501  
                             ?_Timer0_DefaultOverflowCallback 0501  
                                                     ___awdiv 1E18  
                                                     ___awmod 1EF8  
                                           _Timer0_Initialize 230A  
                                                   ?_vfprintf 053B  
                                                __psmallconst 1600  
                                          __end_of_TMR2_Start 24BE  
                                                     __pcinit 223C  
                                          ?_Timer0_Initialize 0501  
                                                     __ramtop 1600  
                                                     __ptext0 1D10  
                                                     __ptext1 2446  
                                                     __ptext2 2268  
                                                     __ptext3 18CC  
                                                     __ptext4 1A7E  
                                                     __ptext5 2176  
                                                     __ptext6 2292  
                                                     __ptext7 201C  
                                                     __ptext8 24E0  
                                                     __ptext9 2410  
        __end_of_PWM1_16BIT_Slice1Output1_SetInterruptHandler 24E6  
              ??_PWM1_16BIT_Slice1Output1_SetInterruptHandler 0506  
               ?_PWM1_16BIT_Slice1Output1_SetInterruptHandler 0504  
                _PWM1_16BIT_Slice1Output1_SetInterruptHandler 24E4  
                                                   _T1CONbits 0314  
                                                   _T2CONbits 031E  
                                   __end_of_PWM1_16BIT_Enable 24DC  
                              ??_TMR2_DefaultOverflowCallback 0501  
                                            ___awmod@dividend 0504  
                                                     _nextLab 2446  
                                    ??_PIN_MANAGER_Initialize 0504  
                                         ??_Timer0_Initialize 0506  
               TMR2_OverflowCallbackRegister@InterruptHandler 0504  
                                           _Timer1_Initialize 2102  
                                        end_of_initialization 2262  
                                  __end_of_PWM1_16BIT_Disable 24E0  
            _PWM1_16BIT_Slice1Output2_DefaultInterruptHandler 0000  
                                                   _U1UIRbits 02B1  
                                    _INT2_SetInterruptHandler 24E8  
                                                   _PIR10bits 04BD  
                                          ?_Timer1_Initialize 0501  
                                               ??_EEPROM_Read 0507  
                                                     fputc@fp 0508  
                                          _NVM_UnlockKeyClear 24BE  
                                                     fputs@fp 0511  
                                         ??_Timer1_Initialize 0506  
                                   __end_of_Timer0_Initialize 232E  
                                           __end_of_vfpfcnvrt 0000  
                                         ?_NVM_UnlockKeyClear 0501  
                                                     postdec2 04DD  
                                                   _PWM1S1CFG 046A  
                                                   _PWM1S1P1H 046C  
                                               _checkButtonS1 2268  
                                                   _PWM1S1P2H 046E  
                                                   _PWM1S1P1L 046B  
                                                   _PWM1S1P2L 046D  
                                                     postinc0 04EE  
                                                     postinc1 04E6  
                                                     postinc2 04DE  
                                            vfpfcnvrt@convarg 0536  
                                                   _PWM1PIPOS 0466  
                                            ?_ADCC_Initialize 0501  
                                                  ??_vfprintf 0540  
                            __end_of_ADCC_GetSingleConversion 2352  
                                           UART1_Write@txData 0504  
                            _UART1_DefaultParityErrorCallback 0000  
                                                   _PORTCbits 04D0  
                                                   _TMR2_Stop 24B2  
                                                ??_HelloWorld 0504  
              Timer0_OverflowCallbackRegister@CallbackHandler 0504  
              Timer1_OverflowCallbackRegister@CallbackHandler 0504  
                                        ??_NVM_UnlockKeyClear 0504  
                                   __end_of_Timer1_Initialize 213C  
                                              __end_of_EEPROM 1A7E  
                                   NVM_UnlockKeySet@unlockKey 0504  
                                              ?_checkButtonS1 0501  
                                         __end_of_EEPROM_Read 23FC  
                                          __end_of_HelloWorld 23E4  
                                __end_of_INTERRUPT_Initialize 22E2  
                                              __end_of_Rotate 1BD2  
                                _INT0_DefaultInterruptHandler 0000  
                                                 vfpfcnvrt@ap 0532  
                                                 vfpfcnvrt@cp 053A  
                                                 vfpfcnvrt@fp 052E  
                                                  ?_TMR2_Stop 0501  
                                              __end_of_printf 23CA  
                                          _rotateReg@VSR$F279 0553  
                                        __end_of_Timer1_Start 24D0  
                                         start_initialization 223C  
                                        __end_of_Timer1_Write 2390  
                                                 __end_of_ADC 1C78  
                                                 __end_of_PWM 1FC2  
                                                 __end_of_VSR 19AA  
                                                 __end_of_abs 223C  
                                                 __end_of_pad 0000  
                                                 putch@txData 0505  
                                                    ??_EEPROM 0546  
                                                  ivt0x8_base 0008  
                                                   _Interrupt 21A8  
                                               _Timer0_Reload 0000  
                                               _Timer1_Reload 2466  
                                                ??_Timer1_Lab 0506  
                                                 vfprintf@fmt 053D  
                                                    ??_Rotate 0504  
                                                    ??_printf 0544  
                               __end_of_PWM1_16BIT_Initialize 201C  
                                                    ?_LAB_ISR 0501  
                                    _ADCC_GetSingleConversion 232E  
                                                 __pbssCOMRAM 0547  
                            __end_of_INT0_SetInterruptHandler 24EE  
                                                   _adcResult 0555  
                                               __pcstackBANK5 058E  
                                          __end_of_Timer1_Lab 1B2C  
                                        Timer1_Write@timerVal 0504  
                                                  ?_Interrupt 0501  
                                       _adcResult@EEPROM$F644 0550  
                                                 _EEPROM_Read 23E4  
                                       _TMR2_OverflowCallback 058A  
                                              ?_Timer1_Reload 0501  
                                                   __pnvBANK5 0588  
                                                ?_SleepWakeUp 0501  
                                             ??_checkButtonS1 0504  
                                      _PIN_MANAGER_Initialize 1E90  
                                                ?_Timer1_Stop 0501  
                                                   _dtoa$3558 0525  
                                           ?_UART1_Initialize 0501  
                                                   _labNumber 055B  
                             ADCC_GetSingleConversion@channel 0508  
                                  __end_of_Timer0_OverflowISR 23AE  
                                                    ?___awdiv 0504  
                                                    ?___awmod 0504  
                                                 _flagCounter 0557  
                                          ??_UART1_Initialize 0506  
                                            _uart1RxLastError 0566  
                                               ??_UART1_Write 0504  
                                ??_INTERRUPT_InterruptManager 0502  
                                                 ??_TMR2_Stop 0504  
                                           ??_NVM_StatusClear 0504  
                                                 __smallconst 1600  
                                  ??_INT2_SetInterruptHandler 0506  
                                                    ?_nextLab 0501  
                      __end_of_Timer0_DefaultOverflowCallback 24F0  
                              _Timer0_DefaultOverflowCallback 24EE  
                                                    _T2CLKCON 0320  
                                                 _U1ERRIRbits 02B2  
                                        _INTERRUPT_Initialize 22BA  
                   _PWM1_16BIT_Period_DefaultInterruptHandler 0000  
                                            _CLOCK_Initialize 23FC  
                                                    _LATAbits 04BE  
                                                    _LATCbits 04C0  
                                   ?_INT1_SetInterruptHandler 0504  
                                                    _PIE0bits 04A8  
                                                    _PIE3bits 04AB  
                                                    _PIE4bits 04AC  
                                                    _PIR0bits 04B3  
                                                    _PIR1bits 04B4  
                                                    _PIR2bits 04B5  
                                                    _PIR3bits 04B6  
                                                    _PIR4bits 04B7  
                                                    _PIR6bits 04B9  
                                                    _PWM1CPRE 0465  
                                          _PWM1_16BIT_Disable 24DC  
        __end_of_PWM1_16BIT_SetSlice1Output1DutyCycleRegister 2490  
              ??_PWM1_16BIT_SetSlice1Output1DutyCycleRegister 0506  
               ?_PWM1_16BIT_SetSlice1Output1DutyCycleRegister 0504  
                _PWM1_16BIT_SetSlice1Output1DutyCycleRegister 2486  
                            ??_Timer1_DefaultOverflowCallback 0501  
                             ?_Timer1_DefaultOverflowCallback 0501  
                                           ??_PIN_MANAGER_IOC 0501  
                      __end_of_PWM1_16BIT_LoadBufferRegisters 24D8  
                              _PWM1_16BIT_LoadBufferRegisters 24D4  
                                                   _vfpfcnvrt 0000  
                                                   _rotateReg 0556  
                                                  _ADCON0bits 03F3  
                                         ?_PWM1_16BIT_Disable 0501  
        __end_of_PWM1_16BIT_Slice1Output2_SetInterruptHandler 24E4  
              ??_PWM1_16BIT_Slice1Output2_SetInterruptHandler 0506  
               ?_PWM1_16BIT_Slice1Output2_SetInterruptHandler 0504  
                _PWM1_16BIT_Slice1Output2_SetInterruptHandler 24E2  
                                         __end_of_UART1_Write 24AC  
                                                 _INTCON0bits 04D6  
                                       ?_INTERRUPT_Initialize 0501  
                                    _INT0_SetInterruptHandler 24EC  
                                             ??_Timer1_Reload 0506  
                                                 ??_Interrupt 0506  
                                           ??_TMR2_Initialize 0506  
                                        ??_PWM1_16BIT_Disable 0504  
                                                    __Hrparam 0000  
                                                _Timer1_Tasks 0000  
                                                _Timer0_Start 0000  
                                                _Timer1_Start 24CA  
                                                _Timer1_Write 2372  
                                                  vfprintf@ap 053E  
                                                    __Lrparam 0000  
                                                  vfprintf@fp 053B  
                                                  ?_vfpfcnvrt 052E  
                                           ??_UART1_IsTxReady 0504  
                           _UART1_DefaultFramingErrorCallback 0000  
                                                  _T0CON0bits 031A  
                                                    __pivt0x8 0008  
                                                    _labState 0559  
                                                    __ptext10 2422  
                                                    __ptext11 2102  
                                                    __ptext20 1E90  
                                                    __ptext12 2472  
                                                    __ptext21 24D0  
                                                    __ptext13 230A  
                                                    __ptext30 1F60  
                                                    __ptext22 24AC  
                                                    __ptext14 2352  
                                                    __ptext31 24B2  
                                                    __ptext23 22BA  
                                                    __ptext15 247C  
                                                    __ptext40 19AA  
                                                    __ptext32 24B8  
                                                    __ptext24 24E8  
                                                    __ptext16 1FC2  
                                                    __ptext41 249A  
                                                    __ptext33 2486  
                                                    __ptext25 24EA  
                                                    __ptext17 24E2  
                                                    __ptext50 1BD2  
                                                    __ptext42 24BE  
                                                    __ptext34 24D4  
                                                    __ptext26 24EC  
                                                    __ptext18 24E4  
                                                    __ptext51 23AE  
                                                    __ptext43 20C0  
                                                    __ptext35 24D8  
                                                    __ptext27 23FC  
                                                    __ptext19 24E6  
                                                    __ptext60 2434  
                                                    __ptext52 1614  
                                                    __ptext44 23E4  
                                                    __ptext36 24DC  
                                                    __ptext28 213C  
                                                    __ptext61 220C  
                                                    __ptext53 0000  
                                                    __ptext45 2072  
                                                    __ptext37 21A8  
                                                    __ptext29 1B2C  
                                                    __ptext70 24F2  
                                                    __ptext62 1EF8  
                                                    __ptext54 0000  
                                                    __ptext46 24C4  
                                                    __ptext38 2490  
                                                    __ptext71 24F4  
                                                    __ptext63 1E18  
                                                    __ptext55 0000  
                                                    __ptext47 24CA  
                                                    __ptext39 23CA  
                                                    __ptext72 0000  
                                                    __ptext64 232E  
                                                    __ptext56 21DA  
                                                    __ptext48 2466  
                                                    __ptext65 22E2  
                                                    __ptext57 1C78  
                                                    __ptext49 2372  
                                                    __ptext66 2390  
                                                    __ptext58 2456  
                                                    __ptext67 24EE  
                                                    __ptext59 24A4  
                                                    __ptext68 24F0  
                                                    __ptext69 1D9C  
                                                    _btnState 0558  
                                                  _U1CON0bits 02AB  
                                               ?_EEPROM_Write 0504  
                                                  _U1FIFObits 02B0  
                       __end_of_TMR2_OverflowCallbackRegister 2486  
                               _TMR2_OverflowCallbackRegister 247C  
                                          _adcResult@PWM$F336 054B  
                                            _NVM_UnlockKeySet 249A  
                                   _UART1_OverrunErrorHandler 0564  
                                              _NVM_Initialize 24D0  
                                                    isa$xinst 0000  
                                  ??_ADCC_GetSingleConversion 0506  
                                                    _vfprintf 1614  
                          __end_of_INTERRUPT_InterruptManager 230A  
                                  _INTERRUPT_InterruptManager 22E2  
                                                   printf@fmt 0541  
                                                 _UART1_Write 24A4  
                                _INT1_DefaultInterruptHandler 0000  
                                                 _NVMCON0bits 0040  
                                                 _PWM1CONbits 0469  
                                                 _NVMCON1bits 0041  
                                                 _PWM1GIRbits 0467  
                                      ??_INTERRUPT_Initialize 0506  
                                         _TMR2_PeriodCountSet 0000  
                                              ??_EEPROM_Write 0508  
                                     _Timer0_OverflowCallback 0588  
                                                    intlevel2 0000  
                                                ?_EEPROM_Read 0504  
                                     ?_PIN_MANAGER_Initialize 0501  
                                                 _WDTCON0bits 0078  
                                      __end_of_NVM_Initialize 24D4  
                                          EEPROM_Read@address 0504  
                     __end_of_Timer1_OverflowCallbackRegister 247C  
                           ??_Timer1_OverflowCallbackRegister 0506  
                            ?_Timer1_OverflowCallbackRegister 0504  
                             _Timer1_OverflowCallbackRegister 2472  
                                             _NVM_StatusClear 24AC  
                                       _rotateReg@Timer1$F381 0552  
                                                    printf@ap 0544  
                                                  _UART1_Read 0000  
                                                 ??_vfpfcnvrt 0534  
                                    __end_of_CLOCK_Initialize 2410  
                                       _PWM1_16BIT_Initialize 1FC2  
                            __end_of_INT1_SetInterruptHandler 24EC  
                                          _Timer0_OverflowISR 2390  
                           _UART1_DefaultOverrunErrorCallback 0000  
                                                  _TMR2_Tasks 0000  
                                                  _TMR2_Start 24B8  
                         EEPROM_Write@globalInterruptBitValue 0508  
                              __end_of_PIN_MANAGER_Initialize 1EF8  
                                           ??_ADCC_Initialize 0504  
                                         ?_Timer0_OverflowISR 0501  
                   __end_of_UART1_ParityErrorCallbackRegister 24E2  
                         ??_UART1_ParityErrorCallbackRegister 0506  
                          ?_UART1_ParityErrorCallbackRegister 0504  
                           _UART1_ParityErrorCallbackRegister 24E0  
                                             _PIN_MANAGER_IOC 24F4  
                                         _UART1_AutoBaudQuery 0000  
                                             ?_NVM_Initialize 0501  
                                         EEPROM_Write@address 0504  
                                       __end_of_checkButtonS1 2292  
