

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Wed Mar 03 23:10:10 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F16Q40
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	text0,global,reloc=2,class=CODE,delta=1
     6                           	psect	nvBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1
    76                           	psect	text64,global,reloc=2,class=CODE,delta=1
    77                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
    78                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    79                           	psect	text65,global,reloc=2,class=CODE,delta=1
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    82                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    83  0000                     
    84                           ; Version 2.20
    85                           ; Generated 29/04/2020 GMT
    86                           ; 
    87                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    88                           ; All rights reserved.
    89                           ; 
    90                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    91                           ; 
    92                           ; Redistribution and use in source and binary forms, with or without modification, are
    93                           ; permitted provided that the following conditions are met:
    94                           ; 
    95                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    96                           ;        conditions and the following disclaimer.
    97                           ; 
    98                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    99                           ;        of conditions and the following disclaimer in the documentation and/or other
   100                           ;        materials provided with the distribution.
   101                           ; 
   102                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   103                           ;        software without specific prior written permission.
   104                           ; 
   105                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   106                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   107                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   108                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   109                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   110                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   111                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   112                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   113                           ; 
   114                           ; 
   115                           ; Code-generator required, PIC18F16Q40 Definitions
   116                           ; 
   117                           ; SFR Addresses
   118  0000                     
   119 ;; Function _UART1_DefaultFramingErrorHandler is unused but had its address taken
   120  0000                     
   121 ;; Function _UART1_DefaultOverrunErrorHandler is unused but had its address taken
   122  0000                     
   123 ;; Function _UART1_DefaultErrorHandler is unused but had its address taken
   124  0000                     
   125 ;; Function _PWM1_16BIT_Slice1Output1_DefaultInterruptHandler is unused but had its address taken
   126  0000                     
   127 ;; Function _PWM1_16BIT_Slice1Output2_DefaultInterruptHandler is unused but had its address taken
   128  0000                     
   129 ;; Function _PWM1_16BIT_Period_DefaultInterruptHandler is unused but had its address taken
   130  0000                     
   131 ;;
   132 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   133 ;;
   134 ;; *************** function _main *****************
   135 ;; Defined at:
   136 ;;		line 52 in file "main.c"
   137 ;; Parameters:    Size  Location     Type
   138 ;;		None
   139 ;; Auto vars:     Size  Location     Type
   140 ;;		None
   141 ;; Return value:  Size  Location     Type
   142 ;;                  1    wreg      void 
   143 ;; Registers used:
   144 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   145 ;; Tracked objects:
   146 ;;		On entry : 0/0
   147 ;;		On exit  : 0/0
   148 ;;		Unchanged: 0/0
   149 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   152 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   153 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   154 ;;Total ram usage:        2 bytes
   155 ;; Hardware stack levels required when called:   13
   156 ;; This function calls:
   157 ;;		_ADC
   158 ;;		_Blink
   159 ;;		_EEPROM
   160 ;;		_HelloWorld
   161 ;;		_Interrupt
   162 ;;		_PWM
   163 ;;		_Rotate
   164 ;;		_SYSTEM_Initialize
   165 ;;		_SleepWakeUp
   166 ;;		_Timer1
   167 ;;		_VSR
   168 ;;		_checkButtonS1
   169 ;;		_nextLab
   170 ;; This function is called by:
   171 ;;		Startup code after reset
   172 ;; This function uses a non-reentrant model
   173 ;;
   174                           
   175                           	psect	text0
   176  00211C                     __ptext0:
   177                           	callstack 0
   178  00211C                     _main:
   179                           	callstack 115
   180  00211C                     
   181                           ;main.c: 55:     SYSTEM_Initialize();
   182  00211C  EC7E  F015         	call	_SYSTEM_Initialize	;wreg free
   183  002120  9EAB               	bcf	1195,7,c	;volatile
   184  002122                     l4116:
   185                           
   186                           ;main.c: 61:         checkButtonS1();
   187  002122  EC32  F014         	call	_checkButtonS1	;wreg free
   188                           
   189                           ;main.c: 62:         switch (labNumber) {
   190  002126  EFBD  F010         	goto	l4140
   191  00212A                     l4118:
   192                           
   193                           ; BSR set to: 5
   194  00212A  ECAB  F014         	call	_HelloWorld	;wreg free
   195                           
   196                           ;main.c: 64:                 break;
   197  00212E  EFF3  F010         	goto	l4142
   198  002132                     l4120:
   199                           
   200                           ; BSR set to: 5
   201  002132  ECD6  F011         	call	_Blink	;wreg free
   202                           
   203                           ;main.c: 66:                 break;
   204  002136  EFF3  F010         	goto	l4142
   205  00213A                     l4122:
   206                           
   207                           ; BSR set to: 5
   208  00213A  EC02  F011         	call	_Rotate	;wreg free
   209                           
   210                           ;main.c: 68:                 break;
   211  00213E  EFF3  F010         	goto	l4142
   212  002142                     l4124:
   213                           
   214                           ; BSR set to: 5
   215  002142  EC94  F00F         	call	_ADC	;wreg free
   216                           
   217                           ;main.c: 70:                 break;
   218  002146  EFF3  F010         	goto	l4142
   219  00214A                     l4126:
   220                           
   221                           ; BSR set to: 5
   222  00214A  EC6D  F00E         	call	_VSR	;wreg free
   223                           
   224                           ;main.c: 72:                 break;
   225  00214E  EFF3  F010         	goto	l4142
   226  002152                     l4128:
   227                           
   228                           ; BSR set to: 5
   229  002152  EC27  F012         	call	_PWM	;wreg free
   230                           
   231                           ;main.c: 74:                 break;
   232  002156  EFF3  F010         	goto	l4142
   233  00215A                     l4130:
   234                           
   235                           ; BSR set to: 5
   236  00215A  EC12  F010         	call	_Timer1	;wreg free
   237                           
   238                           ;main.c: 76:                 break;
   239  00215E  EFF3  F010         	goto	l4142
   240  002162                     l4132:
   241                           
   242                           ; BSR set to: 5
   243  002162  EC84  F014         	call	_Interrupt	;wreg free
   244                           
   245                           ;main.c: 78:                 break;
   246  002166  EFF3  F010         	goto	l4142
   247  00216A                     l4134:
   248                           
   249                           ; BSR set to: 5
   250  00216A  EC05  F014         	call	_SleepWakeUp	;wreg free
   251                           
   252                           ;main.c: 80:                 break;
   253  00216E  EFF3  F010         	goto	l4142
   254  002172                     l4136:
   255                           
   256                           ; BSR set to: 5
   257  002172  EC05  F00F         	call	_EEPROM	;wreg free
   258                           
   259                           ;main.c: 82:                 break;
   260  002176  EFF3  F010         	goto	l4142
   261  00217A                     l4140:
   262  00217A  0105               	movlb	5	; () banked
   263  00217C  5176               	movf	_labNumber& (0+255),w,b
   264  00217E  6FAF               	movwf	??_main& (0+255),b
   265  002180  6BB0               	clrf	(??_main+1)& (0+255),b
   266                           
   267                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   268                           ; Switch size 1, requested type "simple"
   269                           ; Number of cases is 1, Range of values is 0 to 0
   270                           ; switch strategies available:
   271                           ; Name         Instructions Cycles
   272                           ; simple_byte            4     3 (average)
   273                           ;	Chosen strategy is simple_byte
   274  002182  51B0               	movf	(??_main+1)& (0+255),w,b
   275  002184  0A00               	xorlw	0	; case 0
   276  002186  B4D8               	btfsc	status,2,c
   277  002188  EFC8  F010         	goto	l4182
   278  00218C  EFF3  F010         	goto	l4142
   279  002190                     l4182:
   280                           
   281                           ; BSR set to: 5
   282                           ; Switch size 1, requested type "simple"
   283                           ; Number of cases is 10, Range of values is 1 to 10
   284                           ; switch strategies available:
   285                           ; Name         Instructions Cycles
   286                           ; simple_byte           31    16 (average)
   287                           ;	Chosen strategy is simple_byte
   288  002190  51AF               	movf	??_main& (0+255),w,b
   289  002192  0A01               	xorlw	1	; case 1
   290  002194  B4D8               	btfsc	status,2,c
   291  002196  EF95  F010         	goto	l4118
   292  00219A  0A03               	xorlw	3	; case 2
   293  00219C  B4D8               	btfsc	status,2,c
   294  00219E  EF99  F010         	goto	l4120
   295  0021A2  0A01               	xorlw	1	; case 3
   296  0021A4  B4D8               	btfsc	status,2,c
   297  0021A6  EF9D  F010         	goto	l4122
   298  0021AA  0A07               	xorlw	7	; case 4
   299  0021AC  B4D8               	btfsc	status,2,c
   300  0021AE  EFA1  F010         	goto	l4124
   301  0021B2  0A01               	xorlw	1	; case 5
   302  0021B4  B4D8               	btfsc	status,2,c
   303  0021B6  EFA5  F010         	goto	l4126
   304  0021BA  0A03               	xorlw	3	; case 6
   305  0021BC  B4D8               	btfsc	status,2,c
   306  0021BE  EFA9  F010         	goto	l4128
   307  0021C2  0A01               	xorlw	1	; case 7
   308  0021C4  B4D8               	btfsc	status,2,c
   309  0021C6  EFAD  F010         	goto	l4130
   310  0021CA  0A0F               	xorlw	15	; case 8
   311  0021CC  B4D8               	btfsc	status,2,c
   312  0021CE  EFB1  F010         	goto	l4132
   313  0021D2  0A01               	xorlw	1	; case 9
   314  0021D4  B4D8               	btfsc	status,2,c
   315  0021D6  EFB5  F010         	goto	l4134
   316  0021DA  0A03               	xorlw	3	; case 10
   317  0021DC  B4D8               	btfsc	status,2,c
   318  0021DE  EFB9  F010         	goto	l4136
   319  0021E2  EFF3  F010         	goto	l4142
   320  0021E6                     l4142:
   321                           
   322                           ;main.c: 85:         if (switchEvent) {
   323  0021E6  0105               	movlb	5	; () banked
   324  0021E8  5175               	movf	_switchEvent& (0+255),w,b
   325  0021EA  B4D8               	btfsc	status,2,c
   326  0021EC  EFFA  F010         	goto	u2741
   327  0021F0  EFFC  F010         	goto	u2740
   328  0021F4                     u2741:
   329  0021F4  EF91  F010         	goto	l4116
   330  0021F8                     u2740:
   331  0021F8                     
   332                           ; BSR set to: 5
   333                           ;main.c: 86:             nextLab();
   334  0021F8  ECF5  F015         	call	_nextLab	;wreg free
   335  0021FC  EF91  F010         	goto	l4116
   336  002200  EF0D  F000         	goto	start
   337  002204                     __end_of_main:
   338                           	callstack 0
   339                           
   340                           	psect	nvBANK5
   341  000597                     __pnvBANK5:
   342                           	callstack 0
   343  000597                     _PWM1_16BIT_Period_InterruptHandler:
   344                           	callstack 0
   345  000597                     	ds	2
   346  000599                     _PWM1_16BIT_Slice1Output2_InterruptHandler:
   347                           	callstack 0
   348  000599                     	ds	2
   349  00059B                     _PWM1_16BIT_Slice1Output1_InterruptHandler:
   350                           	callstack 0
   351  00059B                     	ds	2
   352  00059D                     _UART1_ErrorHandler:
   353                           	callstack 0
   354  00059D                     	ds	2
   355  00059F                     _UART1_OverrunErrorHandler:
   356                           	callstack 0
   357  00059F                     	ds	2
   358  0005A1                     _UART1_FramingErrorHandler:
   359                           	callstack 0
   360  0005A1                     	ds	2
   361  0005A3                     _timer1ReloadVal:
   362                           	callstack 0
   363  0005A3                     	ds	2
   364  0005A5                     _TMR0_InterruptHandler:
   365                           	callstack 0
   366  0005A5                     	ds	2
   367  0000                     _WDTCON1	set	121
   368  0000                     _WDTCON0	set	120
   369  0000                     _PMD5	set	104
   370  0000                     _PMD4	set	103
   371  0000                     _PMD3	set	102
   372  0000                     _PMD2	set	101
   373  0000                     _PMD1	set	100
   374  0000                     _PMD0	set	99
   375  0000                     _ACTCON	set	172
   376  0000                     _OSCTUNE	set	176
   377  0000                     _OSCFRQ	set	177
   378  0000                     _OSCEN	set	179
   379  0000                     _OSCCON3	set	175
   380  0000                     _OSCCON1	set	173
   381  0000                     _NVMDATL	set	70
   382  0000                     _NVMCON0bits	set	64
   383  0000                     _NVMLOCK	set	66
   384  0000                     _NVMCON1bits	set	65
   385  0000                     _NVMADRL	set	67
   386  0000                     _NVMADRH	set	68
   387  0000                     _NVMADRU	set	69
   388  0000                     _WDTCON0bits	set	120
   389  0000                     _U1RXPPS	set	626
   390  0000                     _RC6PPS	set	535
   391  0000                     _PWMIN0PPS	set	599
   392  0000                     _PWM1ERSPPS	set	593
   393  0000                     _PWMIN1PPS	set	600
   394  0000                     _U1TXB	set	675
   395  0000                     _U1RXB	set	673
   396  0000                     _U1ERRIRbits	set	690
   397  0000                     _U1CON0bits	set	683
   398  0000                     _U1ERRIE	set	691
   399  0000                     _U1ERRIR	set	690
   400  0000                     _U1UIR	set	689
   401  0000                     _U1FIFO	set	688
   402  0000                     _U1BRGH	set	687
   403  0000                     _U1BRGL	set	686
   404  0000                     _U1CON2	set	685
   405  0000                     _U1CON1	set	684
   406  0000                     _U1CON0	set	683
   407  0000                     _U1P3H	set	682
   408  0000                     _U1P3L	set	681
   409  0000                     _U1P2H	set	680
   410  0000                     _U1P2L	set	679
   411  0000                     _U1P1H	set	678
   412  0000                     _U1P1L	set	677
   413  0000                     _RC5PPS	set	534
   414  0000                     _ADRES	set	1002
   415  0000                     _PR2	set	797
   416  0000                     _TMR2	set	796
   417  0000                     _T2CONbits	set	798
   418  0000                     _T2RSTbits	set	801
   419  0000                     _T2HLTbits	set	799
   420  0000                     _T2CON	set	798
   421  0000                     _T2TMR	set	796
   422  0000                     _T2PR	set	797
   423  0000                     _T2RST	set	801
   424  0000                     _T2HLT	set	799
   425  0000                     _T2CLKCON	set	800
   426  0000                     _T1GCONbits	set	789
   427  0000                     _T1CONbits	set	788
   428  0000                     _T1CON	set	788
   429  0000                     _TMR1L	set	786
   430  0000                     _TMR1H	set	787
   431  0000                     _T1CLK	set	791
   432  0000                     _T1GATE	set	790
   433  0000                     _T1GCON	set	789
   434  0000                     _T0CON0bits	set	794
   435  0000                     _T0CON0	set	794
   436  0000                     _TMR0L	set	792
   437  0000                     _TMR0H	set	793
   438  0000                     _T0CON1	set	795
   439  0000                     _ADCON1bits	set	1012
   440  0000                     _ADERRL	set	989
   441  0000                     _ADERRH	set	990
   442  0000                     _ADPREVL	set	1000
   443  0000                     _ADPREVH	set	1001
   444  0000                     _ADFLTRL	set	993
   445  0000                     _ADFLTRH	set	994
   446  0000                     _ADSTATbits	set	1015
   447  0000                     _ADACCL	set	995
   448  0000                     _ADACCH	set	996
   449  0000                     _ADCON2bits	set	1013
   450  0000                     _ADCNT	set	998
   451  0000                     _ADCON3bits	set	1014
   452  0000                     _ADRESL	set	1002
   453  0000                     _ADRESH	set	1003
   454  0000                     _ADCON0bits	set	1011
   455  0000                     _ADCON0	set	1011
   456  0000                     _ADCLK	set	1018
   457  0000                     _ADACT	set	1017
   458  0000                     _ADREF	set	1016
   459  0000                     _ADSTAT	set	1015
   460  0000                     _ADCON3	set	1014
   461  0000                     _ADCON2	set	1013
   462  0000                     _ADCON1	set	1012
   463  0000                     _ADPREH	set	1010
   464  0000                     _ADPREL	set	1009
   465  0000                     _ADCAP	set	1008
   466  0000                     _ADACQH	set	1007
   467  0000                     _ADACQL	set	1006
   468  0000                     _ADPCH	set	1004
   469  0000                     _ADRPT	set	999
   470  0000                     _ADACCU	set	997
   471  0000                     _ADSTPTH	set	992
   472  0000                     _ADSTPTL	set	991
   473  0000                     _ADUTHH	set	988
   474  0000                     _ADUTHL	set	987
   475  0000                     _ADLTHH	set	986
   476  0000                     _ADLTHL	set	985
   477  0000                     _INLVLC	set	1044
   478  0000                     _INLVLB	set	1036
   479  0000                     _INLVLA	set	1028
   480  0000                     _SLRCONC	set	1043
   481  0000                     _SLRCONB	set	1035
   482  0000                     _SLRCONA	set	1027
   483  0000                     _ODCONC	set	1042
   484  0000                     _ODCONB	set	1034
   485  0000                     _ODCONA	set	1026
   486  0000                     _WPUC	set	1041
   487  0000                     _WPUA	set	1025
   488  0000                     _WPUB	set	1033
   489  0000                     _ANSELA	set	1024
   490  0000                     _ANSELB	set	1032
   491  0000                     _ANSELC	set	1040
   492  0000                     _PORTCbits	set	1232
   493  0000                     _PWM1GIEbits	set	1128
   494  0000                     _PWM1CONbits	set	1129
   495  0000                     _PWM1CON	set	1129
   496  0000                     _PIE4bits	set	1196
   497  0000                     _PWM1GIRbits	set	1127
   498  0000                     _PWM1S1P2H	set	1134
   499  0000                     _PWM1S1P2L	set	1133
   500  0000                     _PWM1S1P1H	set	1132
   501  0000                     _PWM1S1P1L	set	1131
   502  0000                     _PWM1S1CFG	set	1130
   503  0000                     _PWM1GIE	set	1128
   504  0000                     _PWM1GIR	set	1127
   505  0000                     _PWM1PIPOS	set	1126
   506  0000                     _PWM1CPRE	set	1125
   507  0000                     _PWM1PRH	set	1124
   508  0000                     _PWM1PRL	set	1123
   509  0000                     _PWM1LDS	set	1122
   510  0000                     _PWM1CLK	set	1121
   511  0000                     _PWM1ERS	set	1120
   512  0000                     _TRISC	set	1224
   513  0000                     _TRISB	set	1223
   514  0000                     _TRISA	set	1222
   515  0000                     _LATC	set	1216
   516  0000                     _LATB	set	1215
   517  0000                     _PIR4bits	set	1207
   518  0000                     _PCON0bits	set	1264
   519  0000                     _PIR0bits	set	1203
   520  0000                     _TABLAT	set	1269
   521  0000                     _TBLPTRL	set	1270
   522  0000                     _TBLPTRH	set	1271
   523  0000                     _TBLPTRU	set	1272
   524  0000                     _PIE3bits	set	1195
   525  0000                     _PIR3bits	set	1206
   526  0000                     _INTCON0bits	set	1238
   527  0000                     _LATAbits	set	1214
   528  0000                     _LATCbits	set	1216
   529  0000                     _LATA	set	1214
   530  0000                     _GIE	set	9911
   531  0000                     _TMR0IE	set	9567
   532  0000                     _TMR1IF	set	9652
   533                           
   534                           	psect	smallconst
   535  001500                     __psmallconst:
   536                           	callstack 0
   537  001500  00                 	db	0
   538  001501                     STR_1:
   539                           
   540                           ; BSR set to: 5
   541  001501  41                 	db	65	;'A'
   542  001502  44                 	db	68	;'D'
   543  001503  43                 	db	67	;'C'
   544  001504  20                 	db	32
   545  001505  52                 	db	82	;'R'
   546  001506  65                 	db	101	;'e'
   547  001507  73                 	db	115	;'s'
   548  001508  75                 	db	117	;'u'
   549  001509  6C                 	db	108	;'l'
   550  00150A  74                 	db	116	;'t'
   551  00150B  3A                 	db	58	;':'
   552  00150C  20                 	db	32
   553  00150D  25                 	db	37
   554  00150E  64                 	db	100	;'d'
   555  00150F  0A                 	db	10
   556  001510  0D                 	db	13
   557  001511  00                 	db	0
   558  001512  00                 	db	0	; dummy byte at the end
   559  0000                     
   560                           ; #config settings
   561                           
   562                           	psect	cinit
   563  002BA6                     __pcinit:
   564                           	callstack 0
   565  002BA6                     start_initialization:
   566                           	callstack 0
   567  002BA6                     __initialization:
   568                           	callstack 0
   569                           
   570                           ; Clear objects allocated to BANK5 (55 bytes)
   571  002BA6  EE01  F160         	lfsr	0,__pbssBANK5
   572  002BAA  0E37               	movlw	55
   573  002BAC                     clear_0:
   574  002BAC  6AEE               	clrf	postinc0,c
   575  002BAE  06E8               	decf	wreg,f,c
   576  002BB0  E1FD               	bnz	clear_0
   577                           
   578                           ; Clear objects allocated to COMRAM (1 bytes)
   579  002BB2  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   580                           
   581                           ;
   582                           ; Setup IVTBASE
   583                           ;
   584  002BB4  0104               	movlb	4
   585  002BB6  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
   586  002BB8  6F5D               	movwf	93,b
   587  002BBA  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
   588  002BBC  6F5E               	movwf	94,b
   589  002BBE  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
   590  002BC0  6F5F               	movwf	95,b
   591  002BC2                     end_of_initialization:
   592                           	callstack 0
   593  002BC2                     __end_of__initialization:
   594                           	callstack 0
   595  002BC2  0100               	movlb	0
   596  002BC4  EF8E  F010         	goto	_main	;jump to C main() function
   597                           
   598                           	psect	bssCOMRAM
   599  00055E                     __pbssCOMRAM:
   600                           	callstack 0
   601  00055E                     _labState:
   602                           	callstack 0
   603  00055E                     	ds	1
   604                           
   605                           	psect	bssBANK5
   606  000560                     __pbssBANK5:
   607                           	callstack 0
   608  000560                     _nout:
   609                           	callstack 0
   610  000560                     	ds	2
   611  000562                     _width:
   612                           	callstack 0
   613  000562                     	ds	2
   614  000564                     _prec:
   615                           	callstack 0
   616  000564                     	ds	2
   617  000566                     _flags:
   618                           	callstack 0
   619  000566                     	ds	2
   620  000568                     _adcResult@PWM$F309:
   621                           	callstack 0
   622  000568                     	ds	2
   623  00056A                     _uart1RxLastError:
   624                           	callstack 0
   625  00056A                     	ds	1
   626  00056B                     _ledDisplay:
   627                           	callstack 0
   628  00056B                     	ds	1
   629  00056C                     _adcResult@EEPROM$F550:
   630                           	callstack 0
   631  00056C                     	ds	1
   632  00056D                     _rotateReg@Interrupt$F412:
   633                           	callstack 0
   634  00056D                     	ds	1
   635  00056E                     _rotateReg@Timer1$F346:
   636                           	callstack 0
   637  00056E                     	ds	1
   638  00056F                     _rotateReg@VSR$F253:
   639                           	callstack 0
   640  00056F                     	ds	1
   641  000570                     _delay:
   642                           	callstack 0
   643  000570                     	ds	1
   644  000571                     _adcResult:
   645                           	callstack 0
   646  000571                     	ds	1
   647  000572                     _rotateReg:
   648                           	callstack 0
   649  000572                     	ds	1
   650  000573                     _flagCounter:
   651                           	callstack 0
   652  000573                     	ds	1
   653  000574                     _btnState:
   654                           	callstack 0
   655  000574                     	ds	1
   656  000575                     _switchEvent:
   657                           	callstack 0
   658  000575                     	ds	1
   659  000576                     _labNumber:
   660                           	callstack 0
   661  000576                     	ds	1
   662  000577                     _dbuf:
   663                           	callstack 0
   664  000577                     	ds	32
   665                           
   666                           	psect	cstackBANK5
   667  0005A7                     __pcstackBANK5:
   668                           	callstack 0
   669  0005A7                     ?_printf:
   670                           	callstack 0
   671  0005A7                     printf@fmt:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x0
   675  0005A7                     	ds	6
   676  0005AD                     printf@ap:
   677                           	callstack 0
   678                           
   679                           ; 2 bytes @ 0x6
   680  0005AD                     	ds	2
   681  0005AF                     ??_main:
   682                           
   683                           ; 1 bytes @ 0x8
   684  0005AF                     	ds	2
   685                           
   686                           	psect	cstackCOMRAM
   687  000501                     __pcstackCOMRAM:
   688                           	callstack 0
   689  000501                     ??_LAB_ISR:
   690  000501                     
   691                           ; 1 bytes @ 0x0
   692  000501                     	ds	1
   693  000502                     ??_checkButtonS1:
   694  000502                     ??_Rotate:
   695  000502                     ??_TMR1_Initialize:
   696  000502                     ?_ADCC_GetSingleConversion:
   697                           	callstack 0
   698  000502                     ?_strlen:
   699                           	callstack 0
   700  000502                     ?___aodiv:
   701                           	callstack 0
   702  000502                     ?___aomod:
   703                           	callstack 0
   704  000502                     UART1_Write@txData:
   705                           	callstack 0
   706  000502                     TMR0_SetInterruptHandler@InterruptHandler:
   707                           	callstack 0
   708  000502                     TMR1_WriteTimer@timerVal:
   709                           	callstack 0
   710  000502                     DATAEE_WriteByte@bAdd:
   711                           	callstack 0
   712  000502                     DATAEE_ReadByte@bAdd:
   713                           	callstack 0
   714  000502                     UART1_SetFramingErrorHandler@interruptHandler:
   715                           	callstack 0
   716  000502                     UART1_SetOverrunErrorHandler@interruptHandler:
   717                           	callstack 0
   718  000502                     UART1_SetErrorHandler@interruptHandler:
   719                           	callstack 0
   720  000502                     PWM1_16BIT_SetSlice1Output1DutyCycleRegister@registerValue:
   721                           	callstack 0
   722  000502                     PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler:
   723                           	callstack 0
   724  000502                     PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler:
   725                           	callstack 0
   726  000502                     PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler:
   727                           	callstack 0
   728  000502                     strlen@s:
   729                           	callstack 0
   730  000502                     ___aodiv@dividend:
   731                           	callstack 0
   732  000502                     ___aomod@dividend:
   733                           	callstack 0
   734                           
   735                           ; 8 bytes @ 0x1
   736  000502                     	ds	1
   737  000503                     putch@txData:
   738                           	callstack 0
   739                           
   740                           ; 1 bytes @ 0x2
   741  000503                     	ds	1
   742  000504                     ??_ADCC_GetSingleConversion:
   743  000504                     ??_Blink:
   744  000504                     ??_Timer1:
   745  000504                     DATAEE_WriteByte@bData:
   746                           	callstack 0
   747  000504                     fputc@c:
   748                           	callstack 0
   749  000504                     strlen@a:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x3
   753  000504                     	ds	1
   754  000505                     DATAEE_WriteByte@GIEBitValue:
   755                           	callstack 0
   756                           
   757                           ; 1 bytes @ 0x4
   758  000505                     	ds	1
   759  000506                     ADCC_GetSingleConversion@channel:
   760                           	callstack 0
   761  000506                     fputc@fp:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x5
   765  000506                     	ds	2
   766  000508                     ??_fputc:
   767                           
   768                           ; 1 bytes @ 0x7
   769  000508                     	ds	2
   770  00050A                     ___aodiv@divisor:
   771                           	callstack 0
   772  00050A                     ___aomod@divisor:
   773                           	callstack 0
   774                           
   775                           ; 8 bytes @ 0x9
   776  00050A                     	ds	3
   777  00050D                     fputs@s:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0xC
   781  00050D                     	ds	2
   782  00050F                     fputs@fp:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0xE
   786  00050F                     	ds	2
   787  000511                     fputs@c:
   788                           	callstack 0
   789                           
   790                           ; 1 bytes @ 0x10
   791  000511                     	ds	1
   792  000512                     ___aodiv@counter:
   793                           	callstack 0
   794  000512                     ___aomod@counter:
   795                           	callstack 0
   796  000512                     fputs@i:
   797                           	callstack 0
   798                           
   799                           ; 2 bytes @ 0x11
   800  000512                     	ds	1
   801  000513                     ___aodiv@sign:
   802                           	callstack 0
   803  000513                     ___aomod@sign:
   804                           	callstack 0
   805                           
   806                           ; 1 bytes @ 0x12
   807  000513                     	ds	1
   808  000514                     ?_abs:
   809                           	callstack 0
   810  000514                     ?_pad:
   811                           	callstack 0
   812  000514                     pad@fp:
   813                           	callstack 0
   814  000514                     abs@a:
   815                           	callstack 0
   816  000514                     ___aodiv@quotient:
   817                           	callstack 0
   818                           
   819                           ; 8 bytes @ 0x13
   820  000514                     	ds	2
   821  000516                     ??_abs:
   822  000516                     pad@buf:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x15
   826  000516                     	ds	2
   827  000518                     pad@p:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x17
   831  000518                     	ds	2
   832  00051A                     ??_pad:
   833                           
   834                           ; 1 bytes @ 0x19
   835  00051A                     	ds	1
   836  00051B                     pad@i:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x1A
   840  00051B                     	ds	2
   841  00051D                     pad@w:
   842                           	callstack 0
   843                           
   844                           ; 2 bytes @ 0x1C
   845  00051D                     	ds	2
   846  00051F                     ?_dtoa:
   847                           	callstack 0
   848  00051F                     dtoa@fp:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x1E
   852  00051F                     	ds	2
   853  000521                     dtoa@d:
   854                           	callstack 0
   855                           
   856                           ; 8 bytes @ 0x20
   857  000521                     	ds	8
   858  000529                     ??_dtoa:
   859                           
   860                           ; 1 bytes @ 0x28
   861  000529                     	ds	8
   862  000531                     _dtoa$2841:
   863                           	callstack 0
   864                           
   865                           ; 2 bytes @ 0x30
   866  000531                     	ds	2
   867  000533                     dtoa@p:
   868                           	callstack 0
   869                           
   870                           ; 2 bytes @ 0x32
   871  000533                     	ds	2
   872  000535                     dtoa@w:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x34
   876  000535                     	ds	2
   877  000537                     dtoa@s:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x36
   881  000537                     	ds	2
   882  000539                     dtoa@n:
   883                           	callstack 0
   884                           
   885                           ; 8 bytes @ 0x38
   886  000539                     	ds	8
   887  000541                     dtoa@i:
   888                           	callstack 0
   889                           
   890                           ; 2 bytes @ 0x40
   891  000541                     	ds	2
   892  000543                     ?_vfpfcnvrt:
   893                           	callstack 0
   894  000543                     vfpfcnvrt@fp:
   895                           	callstack 0
   896                           
   897                           ; 2 bytes @ 0x42
   898  000543                     	ds	2
   899  000545                     vfpfcnvrt@fmt:
   900                           	callstack 0
   901                           
   902                           ; 2 bytes @ 0x44
   903  000545                     	ds	2
   904  000547                     vfpfcnvrt@ap:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x46
   908  000547                     	ds	2
   909  000549                     ??_vfpfcnvrt:
   910                           
   911                           ; 1 bytes @ 0x48
   912  000549                     	ds	2
   913  00054B                     vfpfcnvrt@ll:
   914                           	callstack 0
   915                           
   916                           ; 8 bytes @ 0x4A
   917  00054B                     	ds	8
   918  000553                     ?_vfprintf:
   919                           	callstack 0
   920  000553                     vfprintf@fp:
   921                           	callstack 0
   922                           
   923                           ; 2 bytes @ 0x52
   924  000553                     	ds	2
   925  000555                     vfprintf@fmt:
   926                           	callstack 0
   927                           
   928                           ; 2 bytes @ 0x54
   929  000555                     	ds	2
   930  000557                     vfprintf@ap:
   931                           	callstack 0
   932                           
   933                           ; 2 bytes @ 0x56
   934  000557                     	ds	2
   935  000559                     vfprintf@cfmt:
   936                           	callstack 0
   937                           
   938                           ; 2 bytes @ 0x58
   939  000559                     	ds	2
   940  00055B                     ??_ADC:
   941  00055B                     ??_VSR:
   942  00055B                     ??_PWM:
   943  00055B                     ??_EEPROM:
   944                           
   945                           ; 1 bytes @ 0x5A
   946  00055B                     	ds	3
   947                           
   948 ;; *************** function _nextLab *****************
   949 ;; Defined at:
   950 ;;		line 103 in file "main.c"
   951 ;; Parameters:    Size  Location     Type
   952 ;;		None
   953 ;; Auto vars:     Size  Location     Type
   954 ;;		None
   955 ;; Return value:  Size  Location     Type
   956 ;;                  1    wreg      void 
   957 ;; Registers used:
   958 ;;		wreg, status,2, status,0
   959 ;; Tracked objects:
   960 ;;		On entry : 0/0
   961 ;;		On exit  : 0/0
   962 ;;		Unchanged: 0/0
   963 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
   964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   968 ;;Total ram usage:        0 bytes
   969 ;; Hardware stack levels used:    1
   970 ;; Hardware stack levels required when called:    3
   971 ;; This function calls:
   972 ;;		Nothing
   973 ;; This function is called by:
   974 ;;		_main
   975 ;; This function uses a non-reentrant model
   976 ;;
   977                           
   978                           	psect	text1
   979  002BEA                     __ptext1:
   980                           	callstack 0
   981  002BEA                     _nextLab:
   982                           	callstack 124
   983  002BEA                     
   984                           ;main.c: 104:     switchEvent = 0;
   985  002BEA  0E00               	movlw	0
   986  002BEC  0105               	movlb	5	; () banked
   987  002BEE  6F75               	movwf	_switchEvent& (0+255),b
   988  002BF0                     
   989                           ; BSR set to: 5
   990                           ;main.c: 105:     labNumber++;
   991  002BF0  2B76               	incf	_labNumber& (0+255),f,b
   992  002BF2                     
   993                           ; BSR set to: 5
   994                           ;main.c: 107:     if (labNumber > 10) {
   995  002BF2  0E0A               	movlw	10
   996  002BF4  6576               	cpfsgt	_labNumber& (0+255),b
   997  002BF6  EFFF  F015         	goto	u2401
   998  002BFA  EF01  F016         	goto	u2400
   999  002BFE                     u2401:
  1000  002BFE  EF03  F016         	goto	l1204
  1001  002C02                     u2400:
  1002  002C02                     
  1003                           ; BSR set to: 5
  1004                           ;main.c: 108:         labNumber = 1;
  1005  002C02  0E01               	movlw	1
  1006  002C04  6F76               	movwf	_labNumber& (0+255),b
  1007  002C06                     l1204:
  1008                           
  1009                           ; BSR set to: 5
  1010  002C06  0012               	return		;funcret
  1011  002C08                     __end_of_nextLab:
  1012                           	callstack 0
  1013                           
  1014 ;; *************** function _checkButtonS1 *****************
  1015 ;; Defined at:
  1016 ;;		line 91 in file "main.c"
  1017 ;; Parameters:    Size  Location     Type
  1018 ;;		None
  1019 ;; Auto vars:     Size  Location     Type
  1020 ;;		None
  1021 ;; Return value:  Size  Location     Type
  1022 ;;                  1    wreg      void 
  1023 ;; Registers used:
  1024 ;;		wreg, status,2
  1025 ;; Tracked objects:
  1026 ;;		On entry : 0/0
  1027 ;;		On exit  : 0/0
  1028 ;;		Unchanged: 0/0
  1029 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1032 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1033 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1034 ;;Total ram usage:        1 bytes
  1035 ;; Hardware stack levels used:    1
  1036 ;; Hardware stack levels required when called:    3
  1037 ;; This function calls:
  1038 ;;		Nothing
  1039 ;; This function is called by:
  1040 ;;		_main
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           	psect	text2
  1045  002864                     __ptext2:
  1046                           	callstack 0
  1047  002864                     _checkButtonS1:
  1048                           	callstack 124
  1049  002864                     
  1050                           ;main.c: 92:     if (btnState == 0) {
  1051  002864  0105               	movlb	5	; () banked
  1052  002866  5174               	movf	_btnState& (0+255),w,b
  1053  002868  A4D8               	btfss	status,2,c
  1054  00286A  EF39  F014         	goto	u2371
  1055  00286E  EF3B  F014         	goto	u2370
  1056  002872                     u2371:
  1057  002872  EF4F  F014         	goto	l1196
  1058  002876                     u2370:
  1059  002876                     
  1060                           ; BSR set to: 5
  1061                           ;main.c: 93:         if (PORTCbits.RC4 == 0) {
  1062  002876  B8D0               	btfsc	208,4,c	;volatile
  1063  002878  EF40  F014         	goto	u2381
  1064  00287C  EF42  F014         	goto	u2380
  1065  002880                     u2381:
  1066  002880  EF5A  F014         	goto	l1200
  1067  002884                     u2380:
  1068  002884                     
  1069                           ; BSR set to: 5
  1070                           ;main.c: 94:             _delay((unsigned long)((100)*(500000/4000.0)));
  1071  002884  0E11               	movlw	17
  1072  002886  6E02               	movwf	??_checkButtonS1^(0+1280),c
  1073  002888  0E3A               	movlw	58
  1074  00288A                     u2757:
  1075  00288A  2EE8               	decfsz	wreg,f,c
  1076  00288C  D7FE               	bra	u2757
  1077  00288E  2E02               	decfsz	??_checkButtonS1^(0+1280),f,c
  1078  002890  D7FC               	bra	u2757
  1079  002892  D000               	nop2	
  1080  002894                     
  1081                           ;main.c: 95:             btnState = 1;
  1082  002894  0E01               	movlw	1
  1083  002896  0105               	movlb	5	; () banked
  1084  002898  6F74               	movwf	_btnState& (0+255),b
  1085  00289A  EF5A  F014         	goto	l1200
  1086  00289E                     l1196:
  1087                           
  1088                           ; BSR set to: 5
  1089  00289E  A8D0               	btfss	208,4,c	;volatile
  1090  0028A0  EF54  F014         	goto	u2391
  1091  0028A4  EF56  F014         	goto	u2390
  1092  0028A8                     u2391:
  1093  0028A8  EF5A  F014         	goto	l1200
  1094  0028AC                     u2390:
  1095  0028AC                     
  1096                           ; BSR set to: 5
  1097                           ;main.c: 98:         btnState = 0;
  1098  0028AC  0E00               	movlw	0
  1099  0028AE  6F74               	movwf	_btnState& (0+255),b
  1100                           
  1101                           ;main.c: 99:         switchEvent = 1;
  1102  0028B0  0E01               	movlw	1
  1103  0028B2  6F75               	movwf	_switchEvent& (0+255),b
  1104  0028B4                     l1200:
  1105                           
  1106                           ; BSR set to: 5
  1107  0028B4  0012               	return		;funcret
  1108  0028B6                     __end_of_checkButtonS1:
  1109                           	callstack 0
  1110                           
  1111 ;; *************** function _VSR *****************
  1112 ;; Defined at:
  1113 ;;		line 56 in file "Labs/Lab05_VariableSpeedRotate/VSR.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;		None
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;		None
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1129 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1130 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1131 ;;Total ram usage:        3 bytes
  1132 ;; Hardware stack levels used:    1
  1133 ;; Hardware stack levels required when called:   12
  1134 ;; This function calls:
  1135 ;;		_ADCC_GetSingleConversion
  1136 ;;		_printf
  1137 ;; This function is called by:
  1138 ;;		_main
  1139 ;; This function uses a non-reentrant model
  1140 ;;
  1141                           
  1142                           	psect	text3
  1143  001CDA                     __ptext3:
  1144                           	callstack 0
  1145  001CDA                     _VSR:
  1146                           	callstack 115
  1147  001CDA                     
  1148                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 57:     if (labState == 0) {
  1149  001CDA  505E               	movf	_labState^(0+1280),w,c
  1150  001CDC  A4D8               	btfss	status,2,c
  1151  001CDE  EF73  F00E         	goto	u2591
  1152  001CE2  EF75  F00E         	goto	u2590
  1153  001CE6                     u2591:
  1154  001CE6  EF7D  F00E         	goto	l4040
  1155  001CEA                     u2590:
  1156  001CEA  0E00               	movlw	0
  1157  001CEC  6EBE               	movwf	190,c	;volatile
  1158  001CEE  9AC0               	bcf	192,5,c	;volatile
  1159  001CF0                     
  1160                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 61:         rotateReg = 1;
  1161  001CF0  0E01               	movlw	1
  1162  001CF2  0105               	movlb	5	; () banked
  1163  001CF4  6F6F               	movwf	_rotateReg@VSR$F253& (0+255),b
  1164                           
  1165                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 63:         labState = 1;
  1166  001CF6  0E01               	movlw	1
  1167  001CF8  6E5E               	movwf	_labState^(0+1280),c
  1168  001CFA                     l4040:
  1169                           
  1170                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 66:     if (labState == 1) {
  1171  001CFA  045E               	decf	_labState^(0+1280),w,c
  1172  001CFC  A4D8               	btfss	status,2,c
  1173  001CFE  EF83  F00E         	goto	u2601
  1174  001D02  EF85  F00E         	goto	u2600
  1175  001D06                     u2601:
  1176  001D06  EFF9  F00E         	goto	l155
  1177  001D0A                     u2600:
  1178  001D0A                     
  1179                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 68:         delay = ADCC_GetSingleConversion(POT_
      +                          CHANNEL) >> 8;
  1180  001D0A  0E10               	movlw	16
  1181  001D0C  EC49  F015         	call	_ADCC_GetSingleConversion
  1182  001D10  C503  F502         	movff	?_ADCC_GetSingleConversion+1,?_ADCC_GetSingleConversion
  1183  001D14  6A03               	clrf	(?_ADCC_GetSingleConversion+1)^(0+1280),c
  1184  001D16  5002               	movf	?_ADCC_GetSingleConversion^(0+1280),w,c
  1185  001D18  0105               	movlb	5	; () banked
  1186  001D1A  6F70               	movwf	_delay& (0+255),b
  1187  001D1C                     
  1188                           ; BSR set to: 5
  1189                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 70:         printf("ADC Result: %d\n\r", ADRES >>
      +                           4);
  1190  001D1C  0E01               	movlw	low STR_1
  1191  001D1E  6FA7               	movwf	printf@fmt& (0+255),b
  1192  001D20  0E15               	movlw	high STR_1
  1193  001D22  6FA8               	movwf	(printf@fmt+1)& (0+255),b
  1194  001D24  0060 FFA8  F55B    	movff	1002,??_VSR	;volatile
  1195  001D2A  0060 FFAC  F55C    	movff	1003,??_VSR+1	;volatile
  1196  001D30  0E04               	movlw	4
  1197  001D32  6E5D               	movwf	(??_VSR+2)^(0+1280),c
  1198  001D34                     u2615:
  1199  001D34  90D8               	bcf	status,0,c
  1200  001D36  325C               	rrcf	(??_VSR+1)^(0+1280),f,c
  1201  001D38  325B               	rrcf	??_VSR^(0+1280),f,c
  1202  001D3A  2E5D               	decfsz	(??_VSR+2)^(0+1280),f,c
  1203  001D3C  EF9A  F00E         	goto	u2615
  1204  001D40  C55B  F5A9         	movff	??_VSR,?_printf+2
  1205  001D44  C55C  F5AA         	movff	??_VSR+1,?_printf+3
  1206  001D48  ECAC  F015         	call	_printf	;wreg free
  1207  001D4C                     l4046:
  1208                           
  1209                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 71:         _delay((unsigned long)((2)*(500000/40
      +                          00.0)));
  1210  001D4C  0E53               	movlw	83
  1211  001D4E                     u2767:
  1212  001D4E  2EE8               	decfsz	wreg,f,c
  1213  001D50  D7FE               	bra	u2767
  1214  001D52  F000               	nop	
  1215  001D54                     
  1216                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 74:         while (delay-- != 0) {
  1217  001D54  0105               	movlb	5	; () banked
  1218  001D56  0770               	decf	_delay& (0+255),f,b
  1219  001D58  2970               	incf	_delay& (0+255),w,b
  1220  001D5A  A4D8               	btfss	status,2,c
  1221  001D5C  EFB2  F00E         	goto	u2621
  1222  001D60  EFB4  F00E         	goto	u2620
  1223  001D64                     u2621:
  1224  001D64  EFA6  F00E         	goto	l4046
  1225  001D68                     u2620:
  1226  001D68                     
  1227                           ; BSR set to: 5
  1228                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 79:         LATAbits.LATA5 = rotateReg & 1;
  1229  001D68  C56F  F55B         	movff	_rotateReg@VSR$F253,??_VSR
  1230  001D6C  0E01               	movlw	1
  1231  001D6E  165B               	andwf	??_VSR^(0+1280),f,c
  1232  001D70  3A5B               	swapf	??_VSR^(0+1280),f,c
  1233  001D72  465B               	rlncf	??_VSR^(0+1280),f,c
  1234  001D74  50BE               	movf	190,w,c	;volatile
  1235  001D76  185B               	xorwf	??_VSR^(0+1280),w,c
  1236  001D78  0BDF               	andlw	-33
  1237  001D7A  185B               	xorwf	??_VSR^(0+1280),w,c
  1238  001D7C  6EBE               	movwf	190,c	;volatile
  1239                           
  1240                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 80:         LATAbits.LATA1 = (rotateReg & 2) >> 1
      +                          ;
  1241  001D7E  C56F  F55B         	movff	_rotateReg@VSR$F253,??_VSR
  1242  001D82  90D8               	bcf	status,0,c
  1243  001D84  325B               	rrcf	??_VSR^(0+1280),f,c
  1244  001D86  0E01               	movlw	1
  1245  001D88  165B               	andwf	??_VSR^(0+1280),f,c
  1246  001D8A  465B               	rlncf	??_VSR^(0+1280),f,c
  1247  001D8C  50BE               	movf	190,w,c	;volatile
  1248  001D8E  185B               	xorwf	??_VSR^(0+1280),w,c
  1249  001D90  0BFD               	andlw	-3
  1250  001D92  185B               	xorwf	??_VSR^(0+1280),w,c
  1251  001D94  6EBE               	movwf	190,c	;volatile
  1252                           
  1253                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 81:         LATAbits.LATA2 = (rotateReg & 4) >> 2
      +                          ;
  1254  001D96  C56F  F55B         	movff	_rotateReg@VSR$F253,??_VSR
  1255  001D9A  90D8               	bcf	status,0,c
  1256  001D9C  325B               	rrcf	??_VSR^(0+1280),f,c
  1257  001D9E  90D8               	bcf	status,0,c
  1258  001DA0  325B               	rrcf	??_VSR^(0+1280),f,c
  1259  001DA2  0E01               	movlw	1
  1260  001DA4  165B               	andwf	??_VSR^(0+1280),f,c
  1261  001DA6  465B               	rlncf	??_VSR^(0+1280),f,c
  1262  001DA8  465B               	rlncf	??_VSR^(0+1280),f,c
  1263  001DAA  50BE               	movf	190,w,c	;volatile
  1264  001DAC  185B               	xorwf	??_VSR^(0+1280),w,c
  1265  001DAE  0BFB               	andlw	-5
  1266  001DB0  185B               	xorwf	??_VSR^(0+1280),w,c
  1267  001DB2  6EBE               	movwf	190,c	;volatile
  1268                           
  1269                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 82:         LATCbits.LATC5 = (rotateReg & 8) >> 3
      +                          ;
  1270  001DB4  C56F  F55B         	movff	_rotateReg@VSR$F253,??_VSR
  1271  001DB8  90D8               	bcf	status,0,c
  1272  001DBA  325B               	rrcf	??_VSR^(0+1280),f,c
  1273  001DBC  90D8               	bcf	status,0,c
  1274  001DBE  325B               	rrcf	??_VSR^(0+1280),f,c
  1275  001DC0  90D8               	bcf	status,0,c
  1276  001DC2  325B               	rrcf	??_VSR^(0+1280),f,c
  1277  001DC4  0E01               	movlw	1
  1278  001DC6  165B               	andwf	??_VSR^(0+1280),f,c
  1279  001DC8  3A5B               	swapf	??_VSR^(0+1280),f,c
  1280  001DCA  465B               	rlncf	??_VSR^(0+1280),f,c
  1281  001DCC  50C0               	movf	192,w,c	;volatile
  1282  001DCE  185B               	xorwf	??_VSR^(0+1280),w,c
  1283  001DD0  0BDF               	andlw	-33
  1284  001DD2  185B               	xorwf	??_VSR^(0+1280),w,c
  1285  001DD4  6EC0               	movwf	192,c	;volatile
  1286                           
  1287                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 84:         rotateReg = rotateReg << 1;
  1288  001DD6  516F               	movf	_rotateReg@VSR$F253& (0+255),w,b
  1289  001DD8  256F               	addwf	_rotateReg@VSR$F253& (0+255),w,b
  1290  001DDA  6F6F               	movwf	_rotateReg@VSR$F253& (0+255),b
  1291                           
  1292                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 87:         if (rotateReg == 16) {
  1293  001DDC  0E10               	movlw	16
  1294  001DDE  196F               	xorwf	_rotateReg@VSR$F253& (0+255),w,b
  1295  001DE0  A4D8               	btfss	status,2,c
  1296  001DE2  EFF5  F00E         	goto	u2631
  1297  001DE6  EFF7  F00E         	goto	u2630
  1298  001DEA                     u2631:
  1299  001DEA  EFF9  F00E         	goto	l155
  1300  001DEE                     u2630:
  1301  001DEE                     
  1302                           ; BSR set to: 5
  1303                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 88:             rotateReg = 1;
  1304  001DEE  0E01               	movlw	1
  1305  001DF0  6F6F               	movwf	_rotateReg@VSR$F253& (0+255),b
  1306  001DF2                     l155:
  1307                           
  1308                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 92:     if (switchEvent) {
  1309  001DF2  0105               	movlb	5	; () banked
  1310  001DF4  5175               	movf	_switchEvent& (0+255),w,b
  1311  001DF6  B4D8               	btfsc	status,2,c
  1312  001DF8  EF00  F00F         	goto	u2641
  1313  001DFC  EF02  F00F         	goto	u2640
  1314  001E00                     u2641:
  1315  001E00  EF04  F00F         	goto	l161
  1316  001E04                     u2640:
  1317  001E04                     
  1318                           ; BSR set to: 5
  1319                           ;Labs/Lab05_VariableSpeedRotate/VSR.c: 93:         labState = 0;
  1320  001E04  0E00               	movlw	0
  1321  001E06  6E5E               	movwf	_labState^(0+1280),c
  1322  001E08                     l161:
  1323                           
  1324                           ; BSR set to: 5
  1325  001E08  0012               	return		;funcret
  1326  001E0A                     __end_of_VSR:
  1327                           	callstack 0
  1328                           
  1329 ;; *************** function _Timer1 *****************
  1330 ;; Defined at:
  1331 ;;		line 55 in file "Labs/Lab07_Timers/Timer1.c"
  1332 ;; Parameters:    Size  Location     Type
  1333 ;;		None
  1334 ;; Auto vars:     Size  Location     Type
  1335 ;;		None
  1336 ;; Return value:  Size  Location     Type
  1337 ;;                  1    wreg      void 
  1338 ;; Registers used:
  1339 ;;		wreg, status,2, status,0, cstack
  1340 ;; Tracked objects:
  1341 ;;		On entry : 0/0
  1342 ;;		On exit  : 0/0
  1343 ;;		Unchanged: 0/0
  1344 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1349 ;;Total ram usage:        1 bytes
  1350 ;; Hardware stack levels used:    1
  1351 ;; Hardware stack levels required when called:    5
  1352 ;; This function calls:
  1353 ;;		_TMR1_HasOverflowOccured
  1354 ;;		_TMR1_Reload
  1355 ;;		_TMR1_StartTimer
  1356 ;;		_TMR1_StopTimer
  1357 ;; This function is called by:
  1358 ;;		_main
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           	psect	text4
  1363  002024                     __ptext4:
  1364                           	callstack 0
  1365  002024                     _Timer1:
  1366                           	callstack 122
  1367  002024                     
  1368                           ;Labs/Lab07_Timers/Timer1.c: 56:     if (labState == 0) {
  1369  002024  505E               	movf	_labState^(0+1280),w,c
  1370  002026  A4D8               	btfss	status,2,c
  1371  002028  EF18  F010         	goto	u2131
  1372  00202C  EF1A  F010         	goto	u2130
  1373  002030                     u2131:
  1374  002030  EF25  F010         	goto	l3740
  1375  002034                     u2130:
  1376  002034  0E00               	movlw	0
  1377  002036  6EBE               	movwf	190,c	;volatile
  1378  002038  9AC0               	bcf	192,5,c	;volatile
  1379  00203A  8ABE               	bsf	190,5,c	;volatile
  1380  00203C                     
  1381                           ;Labs/Lab07_Timers/Timer1.c: 61:         rotateReg = 1;
  1382  00203C  0E01               	movlw	1
  1383  00203E  0105               	movlb	5	; () banked
  1384  002040  6F6E               	movwf	_rotateReg@Timer1$F346& (0+255),b
  1385  002042                     
  1386                           ; BSR set to: 5
  1387                           ;Labs/Lab07_Timers/Timer1.c: 63:         TMR1_StartTimer();
  1388  002042  ECA6  F016         	call	_TMR1_StartTimer	;wreg free
  1389  002046                     
  1390                           ;Labs/Lab07_Timers/Timer1.c: 65:         labState = 1;
  1391  002046  0E01               	movlw	1
  1392  002048  6E5E               	movwf	_labState^(0+1280),c
  1393  00204A                     l3740:
  1394                           
  1395                           ;Labs/Lab07_Timers/Timer1.c: 68:     if (labState == 1) {
  1396  00204A  045E               	decf	_labState^(0+1280),w,c
  1397  00204C  A4D8               	btfss	status,2,c
  1398  00204E  EF2B  F010         	goto	u2141
  1399  002052  EF2D  F010         	goto	u2140
  1400  002056                     u2141:
  1401  002056  EF80  F010         	goto	l241
  1402  00205A                     u2140:
  1403  00205A                     l3744:
  1404  00205A  EC4A  F016         	call	_TMR1_HasOverflowOccured	;wreg free
  1405  00205E  0900               	iorlw	0
  1406  002060  B4D8               	btfsc	status,2,c
  1407  002062  EF35  F010         	goto	u2151
  1408  002066  EF37  F010         	goto	u2150
  1409  00206A                     u2151:
  1410  00206A  EF2D  F010         	goto	l3744
  1411  00206E                     u2150:
  1412  00206E                     
  1413                           ;Labs/Lab07_Timers/Timer1.c: 70:         TMR1IF = 0;
  1414  00206E  98B6               	bcf	1206,4,c	;volatile
  1415  002070                     
  1416                           ;Labs/Lab07_Timers/Timer1.c: 71:         TMR1_Reload();
  1417  002070  EC54  F016         	call	_TMR1_Reload	;wreg free
  1418  002074                     
  1419                           ;Labs/Lab07_Timers/Timer1.c: 73:         rotateReg = rotateReg << 1;
  1420  002074  0105               	movlb	5	; () banked
  1421  002076  516E               	movf	_rotateReg@Timer1$F346& (0+255),w,b
  1422  002078  256E               	addwf	_rotateReg@Timer1$F346& (0+255),w,b
  1423  00207A  6F6E               	movwf	_rotateReg@Timer1$F346& (0+255),b
  1424  00207C                     
  1425                           ; BSR set to: 5
  1426                           ;Labs/Lab07_Timers/Timer1.c: 76:         if (rotateReg == 16) {
  1427  00207C  0E10               	movlw	16
  1428  00207E  196E               	xorwf	_rotateReg@Timer1$F346& (0+255),w,b
  1429  002080  A4D8               	btfss	status,2,c
  1430  002082  EF45  F010         	goto	u2161
  1431  002086  EF47  F010         	goto	u2160
  1432  00208A                     u2161:
  1433  00208A  EF49  F010         	goto	l3754
  1434  00208E                     u2160:
  1435  00208E                     
  1436                           ; BSR set to: 5
  1437                           ;Labs/Lab07_Timers/Timer1.c: 77:             rotateReg = 1;
  1438  00208E  0E01               	movlw	1
  1439  002090  6F6E               	movwf	_rotateReg@Timer1$F346& (0+255),b
  1440  002092                     l3754:
  1441                           
  1442                           ; BSR set to: 5
  1443                           ;Labs/Lab07_Timers/Timer1.c: 81:         LATAbits.LATA5 = rotateReg & 1;
  1444  002092  C56E  F504         	movff	_rotateReg@Timer1$F346,??_Timer1
  1445  002096  0E01               	movlw	1
  1446  002098  1604               	andwf	??_Timer1^(0+1280),f,c
  1447  00209A  3A04               	swapf	??_Timer1^(0+1280),f,c
  1448  00209C  4604               	rlncf	??_Timer1^(0+1280),f,c
  1449  00209E  50BE               	movf	190,w,c	;volatile
  1450  0020A0  1804               	xorwf	??_Timer1^(0+1280),w,c
  1451  0020A2  0BDF               	andlw	-33
  1452  0020A4  1804               	xorwf	??_Timer1^(0+1280),w,c
  1453  0020A6  6EBE               	movwf	190,c	;volatile
  1454  0020A8                     
  1455                           ; BSR set to: 5
  1456                           ;Labs/Lab07_Timers/Timer1.c: 82:         LATAbits.LATA1 = (rotateReg & 2) >> 1;
  1457  0020A8  C56E  F504         	movff	_rotateReg@Timer1$F346,??_Timer1
  1458  0020AC  90D8               	bcf	status,0,c
  1459  0020AE  3204               	rrcf	??_Timer1^(0+1280),f,c
  1460  0020B0  0E01               	movlw	1
  1461  0020B2  1604               	andwf	??_Timer1^(0+1280),f,c
  1462  0020B4  4604               	rlncf	??_Timer1^(0+1280),f,c
  1463  0020B6  50BE               	movf	190,w,c	;volatile
  1464  0020B8  1804               	xorwf	??_Timer1^(0+1280),w,c
  1465  0020BA  0BFD               	andlw	-3
  1466  0020BC  1804               	xorwf	??_Timer1^(0+1280),w,c
  1467  0020BE  6EBE               	movwf	190,c	;volatile
  1468  0020C0                     
  1469                           ; BSR set to: 5
  1470                           ;Labs/Lab07_Timers/Timer1.c: 83:         LATAbits.LATA2 = (rotateReg & 4) >> 2;
  1471  0020C0  C56E  F504         	movff	_rotateReg@Timer1$F346,??_Timer1
  1472  0020C4  90D8               	bcf	status,0,c
  1473  0020C6  3204               	rrcf	??_Timer1^(0+1280),f,c
  1474  0020C8  90D8               	bcf	status,0,c
  1475  0020CA  3204               	rrcf	??_Timer1^(0+1280),f,c
  1476  0020CC  0E01               	movlw	1
  1477  0020CE  1604               	andwf	??_Timer1^(0+1280),f,c
  1478  0020D0  4604               	rlncf	??_Timer1^(0+1280),f,c
  1479  0020D2  4604               	rlncf	??_Timer1^(0+1280),f,c
  1480  0020D4  50BE               	movf	190,w,c	;volatile
  1481  0020D6  1804               	xorwf	??_Timer1^(0+1280),w,c
  1482  0020D8  0BFB               	andlw	-5
  1483  0020DA  1804               	xorwf	??_Timer1^(0+1280),w,c
  1484  0020DC  6EBE               	movwf	190,c	;volatile
  1485  0020DE                     
  1486                           ; BSR set to: 5
  1487                           ;Labs/Lab07_Timers/Timer1.c: 84:         LATCbits.LATC5 = (rotateReg & 8) >> 3;
  1488  0020DE  C56E  F504         	movff	_rotateReg@Timer1$F346,??_Timer1
  1489  0020E2  90D8               	bcf	status,0,c
  1490  0020E4  3204               	rrcf	??_Timer1^(0+1280),f,c
  1491  0020E6  90D8               	bcf	status,0,c
  1492  0020E8  3204               	rrcf	??_Timer1^(0+1280),f,c
  1493  0020EA  90D8               	bcf	status,0,c
  1494  0020EC  3204               	rrcf	??_Timer1^(0+1280),f,c
  1495  0020EE  0E01               	movlw	1
  1496  0020F0  1604               	andwf	??_Timer1^(0+1280),f,c
  1497  0020F2  3A04               	swapf	??_Timer1^(0+1280),f,c
  1498  0020F4  4604               	rlncf	??_Timer1^(0+1280),f,c
  1499  0020F6  50C0               	movf	192,w,c	;volatile
  1500  0020F8  1804               	xorwf	??_Timer1^(0+1280),w,c
  1501  0020FA  0BDF               	andlw	-33
  1502  0020FC  1804               	xorwf	??_Timer1^(0+1280),w,c
  1503  0020FE  6EC0               	movwf	192,c	;volatile
  1504  002100                     l241:
  1505                           
  1506                           ;Labs/Lab07_Timers/Timer1.c: 88:     if (switchEvent) {
  1507  002100  0105               	movlb	5	; () banked
  1508  002102  5175               	movf	_switchEvent& (0+255),w,b
  1509  002104  B4D8               	btfsc	status,2,c
  1510  002106  EF87  F010         	goto	u2171
  1511  00210A  EF89  F010         	goto	u2170
  1512  00210E                     u2171:
  1513  00210E  EF8D  F010         	goto	l247
  1514  002112                     u2170:
  1515  002112                     
  1516                           ; BSR set to: 5
  1517                           ;Labs/Lab07_Timers/Timer1.c: 89:         TMR1_StopTimer();
  1518  002112  ECA3  F016         	call	_TMR1_StopTimer	;wreg free
  1519  002116                     
  1520                           ;Labs/Lab07_Timers/Timer1.c: 90:         labState = 0;
  1521  002116  0E00               	movlw	0
  1522  002118  6E5E               	movwf	_labState^(0+1280),c
  1523  00211A                     l247:
  1524  00211A  0012               	return		;funcret
  1525  00211C                     __end_of_Timer1:
  1526                           	callstack 0
  1527                           
  1528 ;; *************** function _SleepWakeUp *****************
  1529 ;; Defined at:
  1530 ;;		line 57 in file "Labs/Lab09_SleepWakeup/SleepWakeUp.c"
  1531 ;; Parameters:    Size  Location     Type
  1532 ;;		None
  1533 ;; Auto vars:     Size  Location     Type
  1534 ;;		None
  1535 ;; Return value:  Size  Location     Type
  1536 ;;                  1    wreg      void 
  1537 ;; Registers used:
  1538 ;;		wreg, status,2, status,0
  1539 ;; Tracked objects:
  1540 ;;		On entry : 0/0
  1541 ;;		On exit  : 0/0
  1542 ;;		Unchanged: 0/0
  1543 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1548 ;;Total ram usage:        0 bytes
  1549 ;; Hardware stack levels used:    1
  1550 ;; Hardware stack levels required when called:    3
  1551 ;; This function calls:
  1552 ;;		Nothing
  1553 ;; This function is called by:
  1554 ;;		_main
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text5
  1559  00280A                     __ptext5:
  1560                           	callstack 0
  1561  00280A                     _SleepWakeUp:
  1562                           	callstack 124
  1563  00280A                     
  1564                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 59:     if (labState == 0) {
  1565  00280A  505E               	movf	_labState^(0+1280),w,c
  1566  00280C  A4D8               	btfss	status,2,c
  1567  00280E  EF0B  F014         	goto	u2201
  1568  002812  EF0D  F014         	goto	u2200
  1569  002816                     u2201:
  1570  002816  EF18  F014         	goto	l3794
  1571  00281A                     u2200:
  1572  00281A                     
  1573                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 60:         LATAbits.LATA5 = LATAbits.LATA2 = 1;
  1574  00281A  84BE               	bsf	190,2,c	;volatile
  1575  00281C  8ABE               	bsf	190,5,c	;volatile
  1576                           
  1577                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 61:         LATAbits.LATA1 = LATCbits.LATC5 = 0;
  1578  00281E  9AC0               	bcf	192,5,c	;volatile
  1579  002820  92BE               	bcf	190,1,c	;volatile
  1580                           
  1581                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 62:         (WDTCON0bits.SWDTEN = 1);
  1582  002822  0100               	movlb	0	; () banked
  1583  002824  8178               	bsf	120,0,b	;volatile
  1584  002826  0003               	sleep		;# 
  1585                           
  1586                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 65:         __nop();
  1587  002828  F000               	nop	
  1588                           
  1589                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 66:         __nop();
  1590  00282A  F000               	nop	
  1591  00282C                     
  1592                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 68:         labState = 1;
  1593  00282C  0E01               	movlw	1
  1594  00282E  6E5E               	movwf	_labState^(0+1280),c
  1595  002830                     l3794:
  1596                           
  1597                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 71:     if (labState == 1) {
  1598  002830  045E               	decf	_labState^(0+1280),w,c
  1599  002832  A4D8               	btfss	status,2,c
  1600  002834  EF1E  F014         	goto	u2211
  1601  002838  EF20  F014         	goto	u2210
  1602  00283C                     u2211:
  1603  00283C  EF26  F014         	goto	l3798
  1604  002840                     u2210:
  1605  002840                     
  1606                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 74:         LATAbits.LATA5 = LATAbits.LATA2 = 0;
  1607  002840  94BE               	bcf	190,2,c	;volatile
  1608  002842  9ABE               	bcf	190,5,c	;volatile
  1609                           
  1610                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 75:         LATAbits.LATA1 = LATCbits.LATC5 = 1;
  1611  002844  8AC0               	bsf	192,5,c	;volatile
  1612  002846  82BE               	bsf	190,1,c	;volatile
  1613                           
  1614                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 77:         (WDTCON0bits.SWDTEN = 0);
  1615  002848  0100               	movlb	0	; () banked
  1616  00284A  9178               	bcf	120,0,b	;volatile
  1617  00284C                     l3798:
  1618                           
  1619                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 80:     if (switchEvent) {
  1620  00284C  0105               	movlb	5	; () banked
  1621  00284E  5175               	movf	_switchEvent& (0+255),w,b
  1622  002850  B4D8               	btfsc	status,2,c
  1623  002852  EF2D  F014         	goto	u2221
  1624  002856  EF2F  F014         	goto	u2220
  1625  00285A                     u2221:
  1626  00285A  EF31  F014         	goto	l311
  1627  00285E                     u2220:
  1628  00285E                     
  1629                           ; BSR set to: 5
  1630                           ;Labs/Lab09_SleepWakeup/SleepWakeUp.c: 81:         labState = 0;
  1631  00285E  0E00               	movlw	0
  1632  002860  6E5E               	movwf	_labState^(0+1280),c
  1633  002862                     l311:
  1634                           
  1635                           ; BSR set to: 5
  1636  002862  0012               	return		;funcret
  1637  002864                     __end_of_SleepWakeUp:
  1638                           	callstack 0
  1639                           
  1640 ;; *************** function _SYSTEM_Initialize *****************
  1641 ;; Defined at:
  1642 ;;		line 50 in file "mcc_generated_files/mcc.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1657 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;Total ram usage:        0 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    5
  1663 ;; This function calls:
  1664 ;;		_ADCC_Initialize
  1665 ;;		_INTERRUPT_Initialize
  1666 ;;		_OSCILLATOR_Initialize
  1667 ;;		_PIN_MANAGER_Initialize
  1668 ;;		_PMD_Initialize
  1669 ;;		_PWM1_16BIT_Initialize
  1670 ;;		_TMR0_Initialize
  1671 ;;		_TMR1_Initialize
  1672 ;;		_TMR2_Initialize
  1673 ;;		_UART1_Initialize
  1674 ;;		_WWDT_Initialize
  1675 ;; This function is called by:
  1676 ;;		_main
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           	psect	text6
  1681  002AFC                     __ptext6:
  1682                           	callstack 0
  1683  002AFC                     _SYSTEM_Initialize:
  1684                           	callstack 122
  1685  002AFC                     
  1686                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
  1687  002AFC  ECA9  F016         	call	_INTERRUPT_Initialize	;wreg free
  1688  002B00                     
  1689                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  1690  002B00  EC21  F016         	call	_PMD_Initialize	;wreg free
  1691  002B04                     
  1692                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  1693  002B04  EC6E  F013         	call	_PIN_MANAGER_Initialize	;wreg free
  1694  002B08                     
  1695                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  1696  002B08  EC2F  F016         	call	_OSCILLATOR_Initialize	;wreg free
  1697  002B0C                     
  1698                           ;mcc_generated_files/mcc.c: 56:     WWDT_Initialize();
  1699  002B0C  EC5B  F016         	call	_WWDT_Initialize	;wreg free
  1700  002B10                     
  1701                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
  1702  002B10  ECD7  F013         	call	_ADCC_Initialize	;wreg free
  1703  002B14                     
  1704                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
  1705  002B14  EC13  F016         	call	_TMR2_Initialize	;wreg free
  1706  002B18                     
  1707                           ;mcc_generated_files/mcc.c: 59:     TMR1_Initialize();
  1708  002B18  EC0F  F015         	call	_TMR1_Initialize	;wreg free
  1709  002B1C                     
  1710                           ;mcc_generated_files/mcc.c: 60:     TMR0_Initialize();
  1711  002B1C  ECC0  F015         	call	_TMR0_Initialize	;wreg free
  1712  002B20                     
  1713                           ;mcc_generated_files/mcc.c: 61:     UART1_Initialize();
  1714  002B20  EC39  F013         	call	_UART1_Initialize	;wreg free
  1715  002B24                     
  1716                           ;mcc_generated_files/mcc.c: 62:     PWM1_16BIT_Initialize();
  1717  002B24  EC02  F013         	call	_PWM1_16BIT_Initialize	;wreg free
  1718  002B28  0012               	return		;funcret
  1719  002B2A                     __end_of_SYSTEM_Initialize:
  1720                           	callstack 0
  1721                           
  1722 ;; *************** function _WWDT_Initialize *****************
  1723 ;; Defined at:
  1724 ;;		line 98 in file "mcc_generated_files/mcc.c"
  1725 ;; Parameters:    Size  Location     Type
  1726 ;;		None
  1727 ;; Auto vars:     Size  Location     Type
  1728 ;;		None
  1729 ;; Return value:  Size  Location     Type
  1730 ;;                  1    wreg      void 
  1731 ;; Registers used:
  1732 ;;		wreg, status,2
  1733 ;; Tracked objects:
  1734 ;;		On entry : 0/0
  1735 ;;		On exit  : 0/0
  1736 ;;		Unchanged: 0/0
  1737 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1739 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1741 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1742 ;;Total ram usage:        0 bytes
  1743 ;; Hardware stack levels used:    1
  1744 ;; Hardware stack levels required when called:    3
  1745 ;; This function calls:
  1746 ;;		Nothing
  1747 ;; This function is called by:
  1748 ;;		_SYSTEM_Initialize
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752                           	psect	text7
  1753  002CB6                     __ptext7:
  1754                           	callstack 0
  1755  002CB6                     _WWDT_Initialize:
  1756                           	callstack 123
  1757  002CB6                     
  1758                           ;mcc_generated_files/mcc.c: 101:     WDTCON0 = 24;
  1759  002CB6  0E18               	movlw	24
  1760  002CB8  0100               	movlb	0	; () banked
  1761  002CBA  6F78               	movwf	120,b	;volatile
  1762                           
  1763                           ;mcc_generated_files/mcc.c: 102:     WDTCON1 = 7|16;
  1764  002CBC  0E17               	movlw	23
  1765  002CBE  6F79               	movwf	121,b	;volatile
  1766  002CC0                     
  1767                           ; BSR set to: 0
  1768  002CC0  0012               	return		;funcret
  1769  002CC2                     __end_of_WWDT_Initialize:
  1770                           	callstack 0
  1771                           
  1772 ;; *************** function _UART1_Initialize *****************
  1773 ;; Defined at:
  1774 ;;		line 66 in file "mcc_generated_files/uart1.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;		None
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, status,2, status,0, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1791 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1792 ;;Total ram usage:        0 bytes
  1793 ;; Hardware stack levels used:    1
  1794 ;; Hardware stack levels required when called:    4
  1795 ;; This function calls:
  1796 ;;		_UART1_SetErrorHandler
  1797 ;;		_UART1_SetFramingErrorHandler
  1798 ;;		_UART1_SetOverrunErrorHandler
  1799 ;; This function is called by:
  1800 ;;		_SYSTEM_Initialize
  1801 ;; This function uses a non-reentrant model
  1802 ;;
  1803                           
  1804                           	psect	text8
  1805  002672                     __ptext8:
  1806                           	callstack 0
  1807  002672                     _UART1_Initialize:
  1808                           	callstack 122
  1809  002672                     
  1810                           ;mcc_generated_files/uart1.c: 73:     U1P1L = 0x00;
  1811  002672  0E00               	movlw	0
  1812  002674  0102               	movlb	2	; () banked
  1813  002676  6FA5               	movwf	165,b	;volatile
  1814                           
  1815                           ;mcc_generated_files/uart1.c: 76:     U1P1H = 0x00;
  1816  002678  0E00               	movlw	0
  1817  00267A  6FA6               	movwf	166,b	;volatile
  1818                           
  1819                           ;mcc_generated_files/uart1.c: 79:     U1P2L = 0x00;
  1820  00267C  0E00               	movlw	0
  1821  00267E  6FA7               	movwf	167,b	;volatile
  1822                           
  1823                           ;mcc_generated_files/uart1.c: 82:     U1P2H = 0x00;
  1824  002680  0E00               	movlw	0
  1825  002682  6FA8               	movwf	168,b	;volatile
  1826                           
  1827                           ;mcc_generated_files/uart1.c: 85:     U1P3L = 0x00;
  1828  002684  0E00               	movlw	0
  1829  002686  6FA9               	movwf	169,b	;volatile
  1830                           
  1831                           ;mcc_generated_files/uart1.c: 88:     U1P3H = 0x00;
  1832  002688  0E00               	movlw	0
  1833  00268A  6FAA               	movwf	170,b	;volatile
  1834                           
  1835                           ;mcc_generated_files/uart1.c: 91:     U1CON0 = 0xA0;
  1836  00268C  0EA0               	movlw	160
  1837  00268E  6FAB               	movwf	171,b	;volatile
  1838                           
  1839                           ;mcc_generated_files/uart1.c: 94:     U1CON1 = 0x80;
  1840  002690  0E80               	movlw	128
  1841  002692  6FAC               	movwf	172,b	;volatile
  1842                           
  1843                           ;mcc_generated_files/uart1.c: 97:     U1CON2 = 0x00;
  1844  002694  0E00               	movlw	0
  1845  002696  6FAD               	movwf	173,b	;volatile
  1846                           
  1847                           ;mcc_generated_files/uart1.c: 100:     U1BRGL = 0x0C;
  1848  002698  0E0C               	movlw	12
  1849  00269A  6FAE               	movwf	174,b	;volatile
  1850                           
  1851                           ;mcc_generated_files/uart1.c: 103:     U1BRGH = 0x00;
  1852  00269C  0E00               	movlw	0
  1853  00269E  6FAF               	movwf	175,b	;volatile
  1854                           
  1855                           ;mcc_generated_files/uart1.c: 106:     U1FIFO = 0x00;
  1856  0026A0  0E00               	movlw	0
  1857  0026A2  6FB0               	movwf	176,b	;volatile
  1858                           
  1859                           ;mcc_generated_files/uart1.c: 109:     U1UIR = 0x00;
  1860  0026A4  0E00               	movlw	0
  1861  0026A6  6FB1               	movwf	177,b	;volatile
  1862                           
  1863                           ;mcc_generated_files/uart1.c: 112:     U1ERRIR = 0x00;
  1864  0026A8  0E00               	movlw	0
  1865  0026AA  6FB2               	movwf	178,b	;volatile
  1866                           
  1867                           ;mcc_generated_files/uart1.c: 115:     U1ERRIE = 0x00;
  1868  0026AC  0E00               	movlw	0
  1869  0026AE  6FB3               	movwf	179,b	;volatile
  1870  0026B0                     
  1871                           ; BSR set to: 2
  1872                           ;mcc_generated_files/uart1.c: 118:     UART1_SetFramingErrorHandler(UART1_DefaultFraming
      +                          ErrorHandler);
  1873  0026B0  0E00               	movlw	0
  1874  0026B2  6E02               	movwf	UART1_SetFramingErrorHandler@interruptHandler^(0+1280),c
  1875  0026B4  0E00               	movlw	0
  1876  0026B6  6E03               	movwf	(UART1_SetFramingErrorHandler@interruptHandler+1)^(0+1280),c
  1877  0026B8  EC6C  F016         	call	_UART1_SetFramingErrorHandler	;wreg free
  1878  0026BC                     
  1879                           ;mcc_generated_files/uart1.c: 119:     UART1_SetOverrunErrorHandler(UART1_DefaultOverrun
      +                          ErrorHandler);
  1880  0026BC  0E00               	movlw	0
  1881  0026BE  6E02               	movwf	UART1_SetOverrunErrorHandler@interruptHandler^(0+1280),c
  1882  0026C0  0E00               	movlw	0
  1883  0026C2  6E03               	movwf	(UART1_SetOverrunErrorHandler@interruptHandler+1)^(0+1280),c
  1884  0026C4  EC67  F016         	call	_UART1_SetOverrunErrorHandler	;wreg free
  1885  0026C8                     
  1886                           ;mcc_generated_files/uart1.c: 120:     UART1_SetErrorHandler(UART1_DefaultErrorHandler);
  1887  0026C8  0E00               	movlw	0
  1888  0026CA  6E02               	movwf	UART1_SetErrorHandler@interruptHandler^(0+1280),c
  1889  0026CC  0E00               	movlw	0
  1890  0026CE  6E03               	movwf	(UART1_SetErrorHandler@interruptHandler+1)^(0+1280),c
  1891  0026D0  EC71  F016         	call	_UART1_SetErrorHandler	;wreg free
  1892  0026D4                     
  1893                           ;mcc_generated_files/uart1.c: 122:     uart1RxLastError.status = 0;
  1894  0026D4  0E00               	movlw	0
  1895  0026D6  0105               	movlb	5	; () banked
  1896  0026D8  6F6A               	movwf	_uart1RxLastError& (0+255),b	;volatile
  1897  0026DA                     
  1898                           ; BSR set to: 5
  1899  0026DA  0012               	return		;funcret
  1900  0026DC                     __end_of_UART1_Initialize:
  1901                           	callstack 0
  1902                           
  1903 ;; *************** function _UART1_SetOverrunErrorHandler *****************
  1904 ;; Defined at:
  1905 ;;		line 206 in file "mcc_generated_files/uart1.c"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
  1908 ;;		 -> UART1_DefaultOverrunErrorHandler(1), 
  1909 ;; Auto vars:     Size  Location     Type
  1910 ;;		None
  1911 ;; Return value:  Size  Location     Type
  1912 ;;                  1    wreg      void 
  1913 ;; Registers used:
  1914 ;;		wreg, status,2, status,0
  1915 ;; Tracked objects:
  1916 ;;		On entry : 0/0
  1917 ;;		On exit  : 0/0
  1918 ;;		Unchanged: 0/0
  1919 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1920 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1923 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1924 ;;Total ram usage:        2 bytes
  1925 ;; Hardware stack levels used:    1
  1926 ;; Hardware stack levels required when called:    3
  1927 ;; This function calls:
  1928 ;;		Nothing
  1929 ;; This function is called by:
  1930 ;;		_UART1_Initialize
  1931 ;; This function uses a non-reentrant model
  1932 ;;
  1933                           
  1934                           	psect	text9
  1935  002CCE                     __ptext9:
  1936                           	callstack 0
  1937  002CCE                     _UART1_SetOverrunErrorHandler:
  1938                           	callstack 122
  1939  002CCE                     
  1940                           ;mcc_generated_files/uart1.c: 207:     UART1_OverrunErrorHandler = interruptHandler;
  1941  002CCE  C502  F59F         	movff	UART1_SetOverrunErrorHandler@interruptHandler,_UART1_OverrunErrorHandler
  1942  002CD2  C503  F5A0         	movff	UART1_SetOverrunErrorHandler@interruptHandler+1,_UART1_OverrunErrorHandler+1
  1943  002CD6  0012               	return		;funcret
  1944  002CD8                     __end_of_UART1_SetOverrunErrorHandler:
  1945                           	callstack 0
  1946                           
  1947 ;; *************** function _UART1_SetFramingErrorHandler *****************
  1948 ;; Defined at:
  1949 ;;		line 202 in file "mcc_generated_files/uart1.c"
  1950 ;; Parameters:    Size  Location     Type
  1951 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
  1952 ;;		 -> UART1_DefaultFramingErrorHandler(1), 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;		None
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  1    wreg      void 
  1957 ;; Registers used:
  1958 ;;		wreg, status,2, status,0
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  1964 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;Total ram usage:        2 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    3
  1971 ;; This function calls:
  1972 ;;		Nothing
  1973 ;; This function is called by:
  1974 ;;		_UART1_Initialize
  1975 ;; This function uses a non-reentrant model
  1976 ;;
  1977                           
  1978                           	psect	text10
  1979  002CD8                     __ptext10:
  1980                           	callstack 0
  1981  002CD8                     _UART1_SetFramingErrorHandler:
  1982                           	callstack 122
  1983  002CD8                     
  1984                           ;mcc_generated_files/uart1.c: 203:     UART1_FramingErrorHandler = interruptHandler;
  1985  002CD8  C502  F5A1         	movff	UART1_SetFramingErrorHandler@interruptHandler,_UART1_FramingErrorHandler
  1986  002CDC  C503  F5A2         	movff	UART1_SetFramingErrorHandler@interruptHandler+1,_UART1_FramingErrorHandler+1
  1987  002CE0  0012               	return		;funcret
  1988  002CE2                     __end_of_UART1_SetFramingErrorHandler:
  1989                           	callstack 0
  1990                           
  1991 ;; *************** function _UART1_SetErrorHandler *****************
  1992 ;; Defined at:
  1993 ;;		line 210 in file "mcc_generated_files/uart1.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  interruptHan    2    1[COMRAM] PTR FTN()void 
  1996 ;;		 -> UART1_DefaultErrorHandler(1), 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;		None
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		wreg, status,2, status,0
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2008 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2011 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2012 ;;Total ram usage:        2 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:    3
  2015 ;; This function calls:
  2016 ;;		Nothing
  2017 ;; This function is called by:
  2018 ;;		_UART1_Initialize
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           	psect	text11
  2023  002CE2                     __ptext11:
  2024                           	callstack 0
  2025  002CE2                     _UART1_SetErrorHandler:
  2026                           	callstack 122
  2027  002CE2                     
  2028                           ;mcc_generated_files/uart1.c: 211:     UART1_ErrorHandler = interruptHandler;
  2029  002CE2  C502  F59D         	movff	UART1_SetErrorHandler@interruptHandler,_UART1_ErrorHandler
  2030  002CE6  C503  F59E         	movff	UART1_SetErrorHandler@interruptHandler+1,_UART1_ErrorHandler+1
  2031  002CEA  0012               	return		;funcret
  2032  002CEC                     __end_of_UART1_SetErrorHandler:
  2033                           	callstack 0
  2034                           
  2035 ;; *************** function _TMR2_Initialize *****************
  2036 ;; Defined at:
  2037 ;;		line 62 in file "mcc_generated_files/tmr2.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;		None
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;		None
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, status,2
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2055 ;;Total ram usage:        0 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; Hardware stack levels required when called:    3
  2058 ;; This function calls:
  2059 ;;		Nothing
  2060 ;; This function is called by:
  2061 ;;		_SYSTEM_Initialize
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	text12
  2066  002C26                     __ptext12:
  2067                           	callstack 0
  2068  002C26                     _TMR2_Initialize:
  2069                           	callstack 123
  2070  002C26                     
  2071                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
  2072  002C26  0E01               	movlw	1
  2073  002C28  0103               	movlb	3	; () banked
  2074  002C2A  6F20               	movwf	32,b	;volatile
  2075                           
  2076                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
  2077  002C2C  0E00               	movlw	0
  2078  002C2E  6F1F               	movwf	31,b	;volatile
  2079                           
  2080                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
  2081  002C30  0E00               	movlw	0
  2082  002C32  6F21               	movwf	33,b	;volatile
  2083  002C34                     
  2084                           ; BSR set to: 3
  2085                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0xFF;
  2086  002C34  691D               	setf	29,b	;volatile
  2087                           
  2088                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
  2089  002C36  0E00               	movlw	0
  2090  002C38  6F1C               	movwf	28,b	;volatile
  2091  002C3A                     
  2092                           ; BSR set to: 3
  2093                           ;mcc_generated_files/tmr2.c: 82:     PIR3bits.TMR2IF = 0;
  2094  002C3A  96B6               	bcf	182,3,c	;volatile
  2095                           
  2096                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0x80;
  2097  002C3C  0E80               	movlw	128
  2098  002C3E  6F1E               	movwf	30,b	;volatile
  2099  002C40                     
  2100                           ; BSR set to: 3
  2101  002C40  0012               	return		;funcret
  2102  002C42                     __end_of_TMR2_Initialize:
  2103                           	callstack 0
  2104                           
  2105 ;; *************** function _TMR1_Initialize *****************
  2106 ;; Defined at:
  2107 ;;		line 63 in file "mcc_generated_files/tmr1.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;		None
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;		None
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      void 
  2114 ;; Registers used:
  2115 ;;		wreg, status,2, status,0
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2123 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2124 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2125 ;;Total ram usage:        2 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:    3
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_SYSTEM_Initialize
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           	psect	text13
  2136  002A1E                     __ptext13:
  2137                           	callstack 0
  2138  002A1E                     _TMR1_Initialize:
  2139                           	callstack 123
  2140  002A1E                     
  2141                           ;mcc_generated_files/tmr1.c: 68:     T1GCON = 0x00;
  2142  002A1E  0E00               	movlw	0
  2143  002A20  0103               	movlb	3	; () banked
  2144  002A22  6F15               	movwf	21,b	;volatile
  2145                           
  2146                           ;mcc_generated_files/tmr1.c: 71:     T1GATE = 0x00;
  2147  002A24  0E00               	movlw	0
  2148  002A26  6F16               	movwf	22,b	;volatile
  2149                           
  2150                           ;mcc_generated_files/tmr1.c: 74:     T1CLK = 0x01;
  2151  002A28  0E01               	movlw	1
  2152  002A2A  6F17               	movwf	23,b	;volatile
  2153                           
  2154                           ;mcc_generated_files/tmr1.c: 77:     TMR1H = 0x0B;
  2155  002A2C  0E0B               	movlw	11
  2156  002A2E  6F13               	movwf	19,b	;volatile
  2157                           
  2158                           ;mcc_generated_files/tmr1.c: 80:     TMR1L = 0xDC;
  2159  002A30  0EDC               	movlw	220
  2160  002A32  6F12               	movwf	18,b	;volatile
  2161  002A34                     
  2162                           ; BSR set to: 3
  2163                           ;mcc_generated_files/tmr1.c: 83:     PIR3bits.TMR1IF = 0;
  2164  002A34  98B6               	bcf	182,4,c	;volatile
  2165  002A36                     
  2166                           ; BSR set to: 3
  2167                           ;mcc_generated_files/tmr1.c: 86:     timer1ReloadVal=(uint16_t)((TMR1H << 8) | TMR1L);
  2168  002A36  5112               	movf	18,w,b	;volatile
  2169  002A38  0060 FC4C  F502    	movff	787,??_TMR1_Initialize	;volatile
  2170  002A3E  6A03               	clrf	(??_TMR1_Initialize+1)^(0+1280),c
  2171  002A40  C502  F503         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  2172  002A44  6A02               	clrf	??_TMR1_Initialize^(0+1280),c
  2173  002A46  1002               	iorwf	??_TMR1_Initialize^(0+1280),w,c
  2174  002A48  0105               	movlb	5	; () banked
  2175  002A4A  6FA3               	movwf	_timer1ReloadVal& (0+255),b	;volatile
  2176  002A4C  5003               	movf	(??_TMR1_Initialize+1)^(0+1280),w,c
  2177  002A4E  6FA4               	movwf	(_timer1ReloadVal+1)& (0+255),b	;volatile
  2178  002A50                     
  2179                           ; BSR set to: 5
  2180                           ;mcc_generated_files/tmr1.c: 89:     T1CON = 0x01;
  2181  002A50  0E01               	movlw	1
  2182  002A52  0103               	movlb	3	; () banked
  2183  002A54  6F14               	movwf	20,b	;volatile
  2184  002A56                     
  2185                           ; BSR set to: 3
  2186  002A56  0012               	return		;funcret
  2187  002A58                     __end_of_TMR1_Initialize:
  2188                           	callstack 0
  2189                           
  2190 ;; *************** function _TMR0_Initialize *****************
  2191 ;; Defined at:
  2192 ;;		line 61 in file "mcc_generated_files/tmr0.c"
  2193 ;; Parameters:    Size  Location     Type
  2194 ;;		None
  2195 ;; Auto vars:     Size  Location     Type
  2196 ;;		None
  2197 ;; Return value:  Size  Location     Type
  2198 ;;                  1    wreg      void 
  2199 ;; Registers used:
  2200 ;;		wreg, status,2, status,0, cstack
  2201 ;; Tracked objects:
  2202 ;;		On entry : 0/0
  2203 ;;		On exit  : 0/0
  2204 ;;		Unchanged: 0/0
  2205 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2210 ;;Total ram usage:        0 bytes
  2211 ;; Hardware stack levels used:    1
  2212 ;; Hardware stack levels required when called:    4
  2213 ;; This function calls:
  2214 ;;		_TMR0_SetInterruptHandler
  2215 ;; This function is called by:
  2216 ;;		_SYSTEM_Initialize
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           	psect	text14
  2221  002B80                     __ptext14:
  2222                           	callstack 0
  2223  002B80                     _TMR0_Initialize:
  2224                           	callstack 122
  2225  002B80                     
  2226                           ;mcc_generated_files/tmr0.c: 66:     T0CON1 = 0x58;
  2227  002B80  0E58               	movlw	88
  2228  002B82  0103               	movlb	3	; () banked
  2229  002B84  6F1B               	movwf	27,b	;volatile
  2230                           
  2231                           ;mcc_generated_files/tmr0.c: 69:     TMR0H = 0xF3;
  2232  002B86  0EF3               	movlw	243
  2233  002B88  6F19               	movwf	25,b	;volatile
  2234                           
  2235                           ;mcc_generated_files/tmr0.c: 72:     TMR0L = 0x00;
  2236  002B8A  0E00               	movlw	0
  2237  002B8C  6F18               	movwf	24,b	;volatile
  2238  002B8E                     
  2239                           ; BSR set to: 3
  2240                           ;mcc_generated_files/tmr0.c: 75:     PIR3bits.TMR0IF = 0;
  2241  002B8E  9EB6               	bcf	182,7,c	;volatile
  2242  002B90                     
  2243                           ; BSR set to: 3
  2244                           ;mcc_generated_files/tmr0.c: 78:     PIE3bits.TMR0IE = 1;
  2245  002B90  8EAB               	bsf	171,7,c	;volatile
  2246  002B92                     
  2247                           ; BSR set to: 3
  2248                           ;mcc_generated_files/tmr0.c: 81:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  2249  002B92  0E5A               	movlw	low _TMR0_DefaultInterruptHandler
  2250  002B94  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+1280),c
  2251  002B96  0E2D               	movlw	high _TMR0_DefaultInterruptHandler
  2252  002B98  6E03               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  2253  002B9A  EC85  F016         	call	_TMR0_SetInterruptHandler	;wreg free
  2254  002B9E                     
  2255                           ;mcc_generated_files/tmr0.c: 84:     T0CON0 = 0x80;
  2256  002B9E  0E80               	movlw	128
  2257  002BA0  0103               	movlb	3	; () banked
  2258  002BA2  6F1A               	movwf	26,b	;volatile
  2259  002BA4                     
  2260                           ; BSR set to: 3
  2261  002BA4  0012               	return		;funcret
  2262  002BA6                     __end_of_TMR0_Initialize:
  2263                           	callstack 0
  2264                           
  2265 ;; *************** function _PWM1_16BIT_Initialize *****************
  2266 ;; Defined at:
  2267 ;;		line 63 in file "mcc_generated_files/pwm1_16bit.c"
  2268 ;; Parameters:    Size  Location     Type
  2269 ;;		None
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;		None
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  1    wreg      void 
  2274 ;; Registers used:
  2275 ;;		wreg, status,2, status,0, cstack
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2285 ;;Total ram usage:        0 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    4
  2288 ;; This function calls:
  2289 ;;		_PWM1_16BIT_Period_SetInterruptHandler
  2290 ;;		_PWM1_16BIT_Slice1Output1_SetInterruptHandler
  2291 ;;		_PWM1_16BIT_Slice1Output2_SetInterruptHandler
  2292 ;; This function is called by:
  2293 ;;		_SYSTEM_Initialize
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           	psect	text15
  2298  002604                     __ptext15:
  2299                           	callstack 0
  2300  002604                     _PWM1_16BIT_Initialize:
  2301                           	callstack 122
  2302  002604                     
  2303                           ;mcc_generated_files/pwm1_16bit.c: 66:     PWM1ERS = 0x00;
  2304  002604  0E00               	movlw	0
  2305  002606  6E60               	movwf	96,c	;volatile
  2306                           
  2307                           ;mcc_generated_files/pwm1_16bit.c: 69:     PWM1CLK = 0x03;
  2308  002608  0E03               	movlw	3
  2309  00260A  6E61               	movwf	97,c	;volatile
  2310                           
  2311                           ;mcc_generated_files/pwm1_16bit.c: 72:     PWM1LDS = 0x00;
  2312  00260C  0E00               	movlw	0
  2313  00260E  6E62               	movwf	98,c	;volatile
  2314                           
  2315                           ;mcc_generated_files/pwm1_16bit.c: 75:     PWM1PRL = 0x00;
  2316  002610  0E00               	movlw	0
  2317  002612  6E63               	movwf	99,c	;volatile
  2318                           
  2319                           ;mcc_generated_files/pwm1_16bit.c: 78:     PWM1PRH = 0x10;
  2320  002614  0E10               	movlw	16
  2321  002616  6E64               	movwf	100,c	;volatile
  2322                           
  2323                           ;mcc_generated_files/pwm1_16bit.c: 81:     PWM1CPRE = 0x09;
  2324  002618  0E09               	movlw	9
  2325  00261A  6E65               	movwf	101,c	;volatile
  2326                           
  2327                           ;mcc_generated_files/pwm1_16bit.c: 84:     PWM1PIPOS = 0x00;
  2328  00261C  0E00               	movlw	0
  2329  00261E  6E66               	movwf	102,c	;volatile
  2330                           
  2331                           ;mcc_generated_files/pwm1_16bit.c: 87:     PWM1GIR = 0x00;
  2332  002620  0E00               	movlw	0
  2333  002622  6E67               	movwf	103,c	;volatile
  2334                           
  2335                           ;mcc_generated_files/pwm1_16bit.c: 90:     PWM1GIE = 0x00;
  2336  002624  0E00               	movlw	0
  2337  002626  6E68               	movwf	104,c	;volatile
  2338                           
  2339                           ;mcc_generated_files/pwm1_16bit.c: 93:     PWM1S1CFG = 0x00;
  2340  002628  0E00               	movlw	0
  2341  00262A  6E6A               	movwf	106,c	;volatile
  2342                           
  2343                           ;mcc_generated_files/pwm1_16bit.c: 96:     PWM1S1P1L = 0xCD;
  2344  00262C  0ECD               	movlw	205
  2345  00262E  6E6B               	movwf	107,c	;volatile
  2346                           
  2347                           ;mcc_generated_files/pwm1_16bit.c: 99:     PWM1S1P1H = 0x0C;
  2348  002630  0E0C               	movlw	12
  2349  002632  6E6C               	movwf	108,c	;volatile
  2350                           
  2351                           ;mcc_generated_files/pwm1_16bit.c: 102:     PWM1S1P2L = 0x00;
  2352  002634  0E00               	movlw	0
  2353  002636  6E6D               	movwf	109,c	;volatile
  2354                           
  2355                           ;mcc_generated_files/pwm1_16bit.c: 105:     PWM1S1P2H = 0x08;
  2356  002638  0E08               	movlw	8
  2357  00263A  6E6E               	movwf	110,c	;volatile
  2358  00263C                     
  2359                           ;mcc_generated_files/pwm1_16bit.c: 108:     PIR4bits.PWM1PIF = 0;
  2360  00263C  9CB7               	bcf	183,6,c	;volatile
  2361  00263E                     
  2362                           ;mcc_generated_files/pwm1_16bit.c: 111:     PIR4bits.PWM1IF = 0;
  2363  00263E  9EB7               	bcf	183,7,c	;volatile
  2364  002640                     
  2365                           ;mcc_generated_files/pwm1_16bit.c: 114:     PWM1GIRbits.S1P1IF = 0;
  2366  002640  9067               	bcf	103,0,c	;volatile
  2367  002642                     
  2368                           ;mcc_generated_files/pwm1_16bit.c: 117:     PWM1GIRbits.S1P2IF = 0;
  2369  002642  9267               	bcf	103,1,c	;volatile
  2370  002644                     
  2371                           ;mcc_generated_files/pwm1_16bit.c: 120:     PIE4bits.PWM1IE = 0;
  2372  002644  9EAC               	bcf	172,7,c	;volatile
  2373  002646                     
  2374                           ;mcc_generated_files/pwm1_16bit.c: 123:     PIE4bits.PWM1PIE = 0;
  2375  002646  9CAC               	bcf	172,6,c	;volatile
  2376  002648                     
  2377                           ;mcc_generated_files/pwm1_16bit.c: 126:     PWM1_16BIT_Slice1Output1_SetInterruptHandler
      +                          (PWM1_16BIT_Slice1Output1_DefaultInterruptHandler);
  2378  002648  0E00               	movlw	0
  2379  00264A  6E02               	movwf	PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler^(0+1280),c
  2380  00264C  0E00               	movlw	0
  2381  00264E  6E03               	movwf	(PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  2382  002650  EC7B  F016         	call	_PWM1_16BIT_Slice1Output1_SetInterruptHandler	;wreg free
  2383  002654                     
  2384                           ;mcc_generated_files/pwm1_16bit.c: 127:     PWM1_16BIT_Slice1Output2_SetInterruptHandler
      +                          (PWM1_16BIT_Slice1Output2_DefaultInterruptHandler);
  2385  002654  0E00               	movlw	0
  2386  002656  6E02               	movwf	PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler^(0+1280),c
  2387  002658  0E00               	movlw	0
  2388  00265A  6E03               	movwf	(PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  2389  00265C  EC76  F016         	call	_PWM1_16BIT_Slice1Output2_SetInterruptHandler	;wreg free
  2390  002660                     
  2391                           ;mcc_generated_files/pwm1_16bit.c: 128:     PWM1_16BIT_Period_SetInterruptHandler(PWM1_1
      +                          6BIT_Period_DefaultInterruptHandler);
  2392  002660  0E00               	movlw	0
  2393  002662  6E02               	movwf	PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler^(0+1280),c
  2394  002664  0E00               	movlw	0
  2395  002666  6E03               	movwf	(PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  2396  002668  EC80  F016         	call	_PWM1_16BIT_Period_SetInterruptHandler	;wreg free
  2397  00266C                     
  2398                           ;mcc_generated_files/pwm1_16bit.c: 131:     PWM1CON = 0x80;
  2399  00266C  0E80               	movlw	128
  2400  00266E  6E69               	movwf	105,c	;volatile
  2401  002670  0012               	return		;funcret
  2402  002672                     __end_of_PWM1_16BIT_Initialize:
  2403                           	callstack 0
  2404                           
  2405 ;; *************** function _PWM1_16BIT_Slice1Output2_SetInterruptHandler *****************
  2406 ;; Defined at:
  2407 ;;		line 197 in file "mcc_generated_files/pwm1_16bit.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
  2410 ;;		 -> PWM1_16BIT_Slice1Output2_DefaultInterruptHandler(1), 
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;		None
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      void 
  2415 ;; Registers used:
  2416 ;;		wreg, status,2, status,0
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2422 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2425 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2426 ;;Total ram usage:        2 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:    3
  2429 ;; This function calls:
  2430 ;;		Nothing
  2431 ;; This function is called by:
  2432 ;;		_PWM1_16BIT_Initialize
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text16
  2437  002CEC                     __ptext16:
  2438                           	callstack 0
  2439  002CEC                     _PWM1_16BIT_Slice1Output2_SetInterruptHandler:
  2440                           	callstack 122
  2441  002CEC                     
  2442                           ;mcc_generated_files/pwm1_16bit.c: 197: void PWM1_16BIT_Slice1Output2_SetInterruptHandle
      +                          r(void (* InterruptHandler)(void));mcc_generated_files/pwm1_16bit.c: 198: {;mcc_generate
      +                          d_files/pwm1_16bit.c: 199:     PWM1_16BIT_Slice1Output2_InterruptHandler = InterruptHand
      +                          ler;
  2443  002CEC  C502  F599         	movff	PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler,_PWM1_16BIT_Slice1O
      +                          utput2_InterruptHandler
  2444  002CF0  C503  F59A         	movff	PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler+1,_PWM1_16BIT_Slice
      +                          1Output2_InterruptHandler+1
  2445  002CF4  0012               	return		;funcret
  2446  002CF6                     __end_of_PWM1_16BIT_Slice1Output2_SetInterruptHandler:
  2447                           	callstack 0
  2448                           
  2449 ;; *************** function _PWM1_16BIT_Slice1Output1_SetInterruptHandler *****************
  2450 ;; Defined at:
  2451 ;;		line 192 in file "mcc_generated_files/pwm1_16bit.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
  2454 ;;		 -> PWM1_16BIT_Slice1Output1_DefaultInterruptHandler(1), 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;		None
  2457 ;; Return value:  Size  Location     Type
  2458 ;;                  1    wreg      void 
  2459 ;; Registers used:
  2460 ;;		wreg, status,2, status,0
  2461 ;; Tracked objects:
  2462 ;;		On entry : 0/0
  2463 ;;		On exit  : 0/0
  2464 ;;		Unchanged: 0/0
  2465 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2469 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2470 ;;Total ram usage:        2 bytes
  2471 ;; Hardware stack levels used:    1
  2472 ;; Hardware stack levels required when called:    3
  2473 ;; This function calls:
  2474 ;;		Nothing
  2475 ;; This function is called by:
  2476 ;;		_PWM1_16BIT_Initialize
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           	psect	text17
  2481  002CF6                     __ptext17:
  2482                           	callstack 0
  2483  002CF6                     _PWM1_16BIT_Slice1Output1_SetInterruptHandler:
  2484                           	callstack 122
  2485  002CF6                     
  2486                           ;mcc_generated_files/pwm1_16bit.c: 192: void PWM1_16BIT_Slice1Output1_SetInterruptHandle
      +                          r(void (* InterruptHandler)(void));mcc_generated_files/pwm1_16bit.c: 193: {;mcc_generate
      +                          d_files/pwm1_16bit.c: 194:     PWM1_16BIT_Slice1Output1_InterruptHandler = InterruptHand
      +                          ler;
  2487  002CF6  C502  F59B         	movff	PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler,_PWM1_16BIT_Slice1O
      +                          utput1_InterruptHandler
  2488  002CFA  C503  F59C         	movff	PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler+1,_PWM1_16BIT_Slice
      +                          1Output1_InterruptHandler+1
  2489  002CFE  0012               	return		;funcret
  2490  002D00                     __end_of_PWM1_16BIT_Slice1Output1_SetInterruptHandler:
  2491                           	callstack 0
  2492                           
  2493 ;; *************** function _PWM1_16BIT_Period_SetInterruptHandler *****************
  2494 ;; Defined at:
  2495 ;;		line 202 in file "mcc_generated_files/pwm1_16bit.c"
  2496 ;; Parameters:    Size  Location     Type
  2497 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
  2498 ;;		 -> PWM1_16BIT_Period_DefaultInterruptHandler(1), 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;		None
  2501 ;; Return value:  Size  Location     Type
  2502 ;;                  1    wreg      void 
  2503 ;; Registers used:
  2504 ;;		wreg, status,2, status,0
  2505 ;; Tracked objects:
  2506 ;;		On entry : 0/0
  2507 ;;		On exit  : 0/0
  2508 ;;		Unchanged: 0/0
  2509 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2510 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;Total ram usage:        2 bytes
  2515 ;; Hardware stack levels used:    1
  2516 ;; Hardware stack levels required when called:    3
  2517 ;; This function calls:
  2518 ;;		Nothing
  2519 ;; This function is called by:
  2520 ;;		_PWM1_16BIT_Initialize
  2521 ;; This function uses a non-reentrant model
  2522 ;;
  2523                           
  2524                           	psect	text18
  2525  002D00                     __ptext18:
  2526                           	callstack 0
  2527  002D00                     _PWM1_16BIT_Period_SetInterruptHandler:
  2528                           	callstack 122
  2529  002D00                     
  2530                           ;mcc_generated_files/pwm1_16bit.c: 202: void PWM1_16BIT_Period_SetInterruptHandler(void 
      +                          (* InterruptHandler)(void));mcc_generated_files/pwm1_16bit.c: 203: {;mcc_generated_files
      +                          /pwm1_16bit.c: 204:     PWM1_16BIT_Period_InterruptHandler = InterruptHandler;
  2531  002D00  C502  F597         	movff	PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler,_PWM1_16BIT_Period_Interru
      +                          ptHandler
  2532  002D04  C503  F598         	movff	PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler+1,_PWM1_16BIT_Period_Inter
      +                          ruptHandler+1
  2533  002D08  0012               	return		;funcret
  2534  002D0A                     __end_of_PWM1_16BIT_Period_SetInterruptHandler:
  2535                           	callstack 0
  2536                           
  2537 ;; *************** function _PMD_Initialize *****************
  2538 ;; Defined at:
  2539 ;;		line 81 in file "mcc_generated_files/mcc.c"
  2540 ;; Parameters:    Size  Location     Type
  2541 ;;		None
  2542 ;; Auto vars:     Size  Location     Type
  2543 ;;		None
  2544 ;; Return value:  Size  Location     Type
  2545 ;;                  1    wreg      void 
  2546 ;; Registers used:
  2547 ;;		wreg, status,2
  2548 ;; Tracked objects:
  2549 ;;		On entry : 0/0
  2550 ;;		On exit  : 0/0
  2551 ;;		Unchanged: 0/0
  2552 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2557 ;;Total ram usage:        0 bytes
  2558 ;; Hardware stack levels used:    1
  2559 ;; Hardware stack levels required when called:    3
  2560 ;; This function calls:
  2561 ;;		Nothing
  2562 ;; This function is called by:
  2563 ;;		_SYSTEM_Initialize
  2564 ;; This function uses a non-reentrant model
  2565 ;;
  2566                           
  2567                           	psect	text19
  2568  002C42                     __ptext19:
  2569                           	callstack 0
  2570  002C42                     _PMD_Initialize:
  2571                           	callstack 123
  2572  002C42                     
  2573                           ;mcc_generated_files/mcc.c: 84:     PMD0 = 0x00;
  2574  002C42  0E00               	movlw	0
  2575  002C44  0100               	movlb	0	; () banked
  2576  002C46  6F63               	movwf	99,b	;volatile
  2577                           
  2578                           ;mcc_generated_files/mcc.c: 86:     PMD1 = 0x00;
  2579  002C48  0E00               	movlw	0
  2580  002C4A  6F64               	movwf	100,b	;volatile
  2581                           
  2582                           ;mcc_generated_files/mcc.c: 88:     PMD2 = 0x00;
  2583  002C4C  0E00               	movlw	0
  2584  002C4E  6F65               	movwf	101,b	;volatile
  2585                           
  2586                           ;mcc_generated_files/mcc.c: 90:     PMD3 = 0x00;
  2587  002C50  0E00               	movlw	0
  2588  002C52  6F66               	movwf	102,b	;volatile
  2589                           
  2590                           ;mcc_generated_files/mcc.c: 92:     PMD4 = 0x00;
  2591  002C54  0E00               	movlw	0
  2592  002C56  6F67               	movwf	103,b	;volatile
  2593                           
  2594                           ;mcc_generated_files/mcc.c: 94:     PMD5 = 0x00;
  2595  002C58  0E00               	movlw	0
  2596  002C5A  6F68               	movwf	104,b	;volatile
  2597  002C5C                     
  2598                           ; BSR set to: 0
  2599  002C5C  0012               	return		;funcret
  2600  002C5E                     __end_of_PMD_Initialize:
  2601                           	callstack 0
  2602                           
  2603 ;; *************** function _PIN_MANAGER_Initialize *****************
  2604 ;; Defined at:
  2605 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  2606 ;; Parameters:    Size  Location     Type
  2607 ;;		None
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;		None
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, status,2
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;Total ram usage:        0 bytes
  2624 ;; Hardware stack levels used:    1
  2625 ;; Hardware stack levels required when called:    3
  2626 ;; This function calls:
  2627 ;;		Nothing
  2628 ;; This function is called by:
  2629 ;;		_SYSTEM_Initialize
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text20
  2634  0026DC                     __ptext20:
  2635                           	callstack 0
  2636  0026DC                     _PIN_MANAGER_Initialize:
  2637                           	callstack 123
  2638  0026DC                     
  2639                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  2640  0026DC  0E00               	movlw	0
  2641  0026DE  6EBE               	movwf	190,c	;volatile
  2642                           
  2643                           ;mcc_generated_files/pin_manager.c: 61:     LATB = 0x00;
  2644  0026E0  0E00               	movlw	0
  2645  0026E2  6EBF               	movwf	191,c	;volatile
  2646                           
  2647                           ;mcc_generated_files/pin_manager.c: 62:     LATC = 0x00;
  2648  0026E4  0E00               	movlw	0
  2649  0026E6  6EC0               	movwf	192,c	;volatile
  2650                           
  2651                           ;mcc_generated_files/pin_manager.c: 67:     TRISA = 0x19;
  2652  0026E8  0E19               	movlw	25
  2653  0026EA  6EC6               	movwf	198,c	;volatile
  2654                           
  2655                           ;mcc_generated_files/pin_manager.c: 68:     TRISB = 0xF0;
  2656  0026EC  0EF0               	movlw	240
  2657  0026EE  6EC7               	movwf	199,c	;volatile
  2658                           
  2659                           ;mcc_generated_files/pin_manager.c: 69:     TRISC = 0x9F;
  2660  0026F0  0E9F               	movlw	159
  2661  0026F2  6EC8               	movwf	200,c	;volatile
  2662                           
  2663                           ;mcc_generated_files/pin_manager.c: 74:     ANSELC = 0x6F;
  2664  0026F4  0E6F               	movlw	111
  2665  0026F6  0104               	movlb	4	; () banked
  2666  0026F8  6F10               	movwf	16,b	;volatile
  2667                           
  2668                           ;mcc_generated_files/pin_manager.c: 75:     ANSELB = 0xE0;
  2669  0026FA  0EE0               	movlw	224
  2670  0026FC  6F08               	movwf	8,b	;volatile
  2671                           
  2672                           ;mcc_generated_files/pin_manager.c: 76:     ANSELA = 0x37;
  2673  0026FE  0E37               	movlw	55
  2674  002700  6F00               	movwf	0,b	;volatile
  2675                           
  2676                           ;mcc_generated_files/pin_manager.c: 81:     WPUB = 0x00;
  2677  002702  0E00               	movlw	0
  2678  002704  6F09               	movwf	9,b	;volatile
  2679                           
  2680                           ;mcc_generated_files/pin_manager.c: 82:     WPUA = 0x00;
  2681  002706  0E00               	movlw	0
  2682  002708  6F01               	movwf	1,b	;volatile
  2683                           
  2684                           ;mcc_generated_files/pin_manager.c: 83:     WPUC = 0x00;
  2685  00270A  0E00               	movlw	0
  2686  00270C  6F11               	movwf	17,b	;volatile
  2687                           
  2688                           ;mcc_generated_files/pin_manager.c: 88:     ODCONA = 0x00;
  2689  00270E  0E00               	movlw	0
  2690  002710  6F02               	movwf	2,b	;volatile
  2691                           
  2692                           ;mcc_generated_files/pin_manager.c: 89:     ODCONB = 0x00;
  2693  002712  0E00               	movlw	0
  2694  002714  6F0A               	movwf	10,b	;volatile
  2695                           
  2696                           ;mcc_generated_files/pin_manager.c: 90:     ODCONC = 0x00;
  2697  002716  0E00               	movlw	0
  2698  002718  6F12               	movwf	18,b	;volatile
  2699                           
  2700                           ;mcc_generated_files/pin_manager.c: 95:     SLRCONA = 0x37;
  2701  00271A  0E37               	movlw	55
  2702  00271C  6F03               	movwf	3,b	;volatile
  2703                           
  2704                           ;mcc_generated_files/pin_manager.c: 96:     SLRCONB = 0xF0;
  2705  00271E  0EF0               	movlw	240
  2706  002720  6F0B               	movwf	11,b	;volatile
  2707  002722                     
  2708                           ; BSR set to: 4
  2709                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONC = 0xFF;
  2710  002722  6913               	setf	19,b	;volatile
  2711                           
  2712                           ;mcc_generated_files/pin_manager.c: 102:     INLVLA = 0x3F;
  2713  002724  0E3F               	movlw	63
  2714  002726  6F04               	movwf	4,b	;volatile
  2715                           
  2716                           ;mcc_generated_files/pin_manager.c: 103:     INLVLB = 0xF0;
  2717  002728  0EF0               	movlw	240
  2718  00272A  6F0C               	movwf	12,b	;volatile
  2719  00272C                     
  2720                           ; BSR set to: 4
  2721                           ;mcc_generated_files/pin_manager.c: 104:     INLVLC = 0xFF;
  2722  00272C  6914               	setf	20,b	;volatile
  2723                           
  2724                           ;mcc_generated_files/pin_manager.c: 113:     PWMIN1PPS = 0x0C;
  2725  00272E  0E0C               	movlw	12
  2726  002730  0102               	movlb	2	; () banked
  2727  002732  6F58               	movwf	88,b	;volatile
  2728                           
  2729                           ;mcc_generated_files/pin_manager.c: 114:     PWM1ERSPPS = 0x0C;
  2730  002734  0E0C               	movlw	12
  2731  002736  6F51               	movwf	81,b	;volatile
  2732                           
  2733                           ;mcc_generated_files/pin_manager.c: 115:     PWMIN0PPS = 0x0C;
  2734  002738  0E0C               	movlw	12
  2735  00273A  6F57               	movwf	87,b	;volatile
  2736                           
  2737                           ;mcc_generated_files/pin_manager.c: 116:     RC6PPS = 0x10;
  2738  00273C  0E10               	movlw	16
  2739  00273E  6F17               	movwf	23,b	;volatile
  2740                           
  2741                           ;mcc_generated_files/pin_manager.c: 117:     U1RXPPS = 0x17;
  2742  002740  0E17               	movlw	23
  2743  002742  6F72               	movwf	114,b	;volatile
  2744  002744                     
  2745                           ; BSR set to: 2
  2746  002744  0012               	return		;funcret
  2747  002746                     __end_of_PIN_MANAGER_Initialize:
  2748                           	callstack 0
  2749                           
  2750 ;; *************** function _OSCILLATOR_Initialize *****************
  2751 ;; Defined at:
  2752 ;;		line 65 in file "mcc_generated_files/mcc.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;		None
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;		None
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg, status,2
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2770 ;;Total ram usage:        0 bytes
  2771 ;; Hardware stack levels used:    1
  2772 ;; Hardware stack levels required when called:    3
  2773 ;; This function calls:
  2774 ;;		Nothing
  2775 ;; This function is called by:
  2776 ;;		_SYSTEM_Initialize
  2777 ;; This function uses a non-reentrant model
  2778 ;;
  2779                           
  2780                           	psect	text21
  2781  002C5E                     __ptext21:
  2782                           	callstack 0
  2783  002C5E                     _OSCILLATOR_Initialize:
  2784                           	callstack 123
  2785  002C5E                     
  2786                           ;mcc_generated_files/mcc.c: 68:     OSCCON1 = 0x63;
  2787  002C5E  0E63               	movlw	99
  2788  002C60  0100               	movlb	0	; () banked
  2789  002C62  6FAD               	movwf	173,b	;volatile
  2790                           
  2791                           ;mcc_generated_files/mcc.c: 70:     OSCCON3 = 0x00;
  2792  002C64  0E00               	movlw	0
  2793  002C66  6FAF               	movwf	175,b	;volatile
  2794                           
  2795                           ;mcc_generated_files/mcc.c: 72:     OSCEN = 0x00;
  2796  002C68  0E00               	movlw	0
  2797  002C6A  6FB3               	movwf	179,b	;volatile
  2798                           
  2799                           ;mcc_generated_files/mcc.c: 74:     OSCFRQ = 0x02;
  2800  002C6C  0E02               	movlw	2
  2801  002C6E  6FB1               	movwf	177,b	;volatile
  2802                           
  2803                           ;mcc_generated_files/mcc.c: 76:     OSCTUNE = 0x00;
  2804  002C70  0E00               	movlw	0
  2805  002C72  6FB0               	movwf	176,b	;volatile
  2806                           
  2807                           ;mcc_generated_files/mcc.c: 78:     ACTCON = 0x00;
  2808  002C74  0E00               	movlw	0
  2809  002C76  6FAC               	movwf	172,b	;volatile
  2810  002C78                     
  2811                           ; BSR set to: 0
  2812  002C78  0012               	return		;funcret
  2813  002C7A                     __end_of_OSCILLATOR_Initialize:
  2814                           	callstack 0
  2815                           
  2816 ;; *************** function _INTERRUPT_Initialize *****************
  2817 ;; Defined at:
  2818 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;		None
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;		None
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      void 
  2825 ;; Registers used:
  2826 ;;		None
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;Total ram usage:        0 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    3
  2839 ;; This function calls:
  2840 ;;		Nothing
  2841 ;; This function is called by:
  2842 ;;		_SYSTEM_Initialize
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           	psect	text22
  2847  002D52                     __ptext22:
  2848                           	callstack 0
  2849  002D52                     _INTERRUPT_Initialize:
  2850                           	callstack 123
  2851  002D52                     
  2852                           ;mcc_generated_files/interrupt_manager.c: 55:     INTCON0bits.IPEN = 0;
  2853  002D52  9AD6               	bcf	214,5,c	;volatile
  2854  002D54  0012               	return		;funcret
  2855  002D56                     __end_of_INTERRUPT_Initialize:
  2856                           	callstack 0
  2857                           
  2858 ;; *************** function _ADCC_Initialize *****************
  2859 ;; Defined at:
  2860 ;;		line 62 in file "mcc_generated_files/adcc.c"
  2861 ;; Parameters:    Size  Location     Type
  2862 ;;		None
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;		None
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1    wreg      void 
  2867 ;; Registers used:
  2868 ;;		wreg, status,2
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  2874 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2875 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;Total ram usage:        0 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:    3
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_SYSTEM_Initialize
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text23
  2889  0027AE                     __ptext23:
  2890                           	callstack 0
  2891  0027AE                     _ADCC_Initialize:
  2892                           	callstack 123
  2893  0027AE                     
  2894                           ;mcc_generated_files/adcc.c: 66:     ADLTHL = 0x00;
  2895  0027AE  0E00               	movlw	0
  2896  0027B0  0103               	movlb	3	; () banked
  2897  0027B2  6FD9               	movwf	217,b	;volatile
  2898                           
  2899                           ;mcc_generated_files/adcc.c: 68:     ADLTHH = 0x00;
  2900  0027B4  0E00               	movlw	0
  2901  0027B6  6FDA               	movwf	218,b	;volatile
  2902                           
  2903                           ;mcc_generated_files/adcc.c: 70:     ADUTHL = 0x00;
  2904  0027B8  0E00               	movlw	0
  2905  0027BA  6FDB               	movwf	219,b	;volatile
  2906                           
  2907                           ;mcc_generated_files/adcc.c: 72:     ADUTHH = 0x00;
  2908  0027BC  0E00               	movlw	0
  2909  0027BE  6FDC               	movwf	220,b	;volatile
  2910                           
  2911                           ;mcc_generated_files/adcc.c: 74:     ADSTPTL = 0x00;
  2912  0027C0  0E00               	movlw	0
  2913  0027C2  6FDF               	movwf	223,b	;volatile
  2914                           
  2915                           ;mcc_generated_files/adcc.c: 76:     ADSTPTH = 0x00;
  2916  0027C4  0E00               	movlw	0
  2917  0027C6  6FE0               	movwf	224,b	;volatile
  2918                           
  2919                           ;mcc_generated_files/adcc.c: 78:     ADACCU = 0x00;
  2920  0027C8  0E00               	movlw	0
  2921  0027CA  6FE5               	movwf	229,b	;volatile
  2922                           
  2923                           ;mcc_generated_files/adcc.c: 80:     ADRPT = 0x00;
  2924  0027CC  0E00               	movlw	0
  2925  0027CE  6FE7               	movwf	231,b	;volatile
  2926                           
  2927                           ;mcc_generated_files/adcc.c: 82:     ADPCH = 0x00;
  2928  0027D0  0E00               	movlw	0
  2929  0027D2  6FEC               	movwf	236,b	;volatile
  2930                           
  2931                           ;mcc_generated_files/adcc.c: 84:     ADACQL = 0x00;
  2932  0027D4  0E00               	movlw	0
  2933  0027D6  6FEE               	movwf	238,b	;volatile
  2934                           
  2935                           ;mcc_generated_files/adcc.c: 86:     ADACQH = 0x00;
  2936  0027D8  0E00               	movlw	0
  2937  0027DA  6FEF               	movwf	239,b	;volatile
  2938                           
  2939                           ;mcc_generated_files/adcc.c: 88:     ADCAP = 0x00;
  2940  0027DC  0E00               	movlw	0
  2941  0027DE  6FF0               	movwf	240,b	;volatile
  2942                           
  2943                           ;mcc_generated_files/adcc.c: 90:     ADPREL = 0x00;
  2944  0027E0  0E00               	movlw	0
  2945  0027E2  6FF1               	movwf	241,b	;volatile
  2946                           
  2947                           ;mcc_generated_files/adcc.c: 92:     ADPREH = 0x00;
  2948  0027E4  0E00               	movlw	0
  2949  0027E6  6FF2               	movwf	242,b	;volatile
  2950                           
  2951                           ;mcc_generated_files/adcc.c: 94:     ADCON1 = 0x00;
  2952  0027E8  0E00               	movlw	0
  2953  0027EA  6FF4               	movwf	244,b	;volatile
  2954                           
  2955                           ;mcc_generated_files/adcc.c: 96:     ADCON2 = 0x00;
  2956  0027EC  0E00               	movlw	0
  2957  0027EE  6FF5               	movwf	245,b	;volatile
  2958                           
  2959                           ;mcc_generated_files/adcc.c: 98:     ADCON3 = 0x00;
  2960  0027F0  0E00               	movlw	0
  2961  0027F2  6FF6               	movwf	246,b	;volatile
  2962                           
  2963                           ;mcc_generated_files/adcc.c: 100:     ADSTAT = 0x00;
  2964  0027F4  0E00               	movlw	0
  2965  0027F6  6FF7               	movwf	247,b	;volatile
  2966                           
  2967                           ;mcc_generated_files/adcc.c: 102:     ADREF = 0x00;
  2968  0027F8  0E00               	movlw	0
  2969  0027FA  6FF8               	movwf	248,b	;volatile
  2970                           
  2971                           ;mcc_generated_files/adcc.c: 104:     ADACT = 0x00;
  2972  0027FC  0E00               	movlw	0
  2973  0027FE  6FF9               	movwf	249,b	;volatile
  2974                           
  2975                           ;mcc_generated_files/adcc.c: 106:     ADCLK = 0x00;
  2976  002800  0E00               	movlw	0
  2977  002802  6FFA               	movwf	250,b	;volatile
  2978                           
  2979                           ;mcc_generated_files/adcc.c: 108:     ADCON0 = 0x80;
  2980  002804  0E80               	movlw	128
  2981  002806  6FF3               	movwf	243,b	;volatile
  2982  002808                     
  2983                           ; BSR set to: 3
  2984  002808  0012               	return		;funcret
  2985  00280A                     __end_of_ADCC_Initialize:
  2986                           	callstack 0
  2987                           
  2988 ;; *************** function _Rotate *****************
  2989 ;; Defined at:
  2990 ;;		line 54 in file "Labs/Lab03_Rotate/Rotate.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;		None
  2995 ;; Return value:  Size  Location     Type
  2996 ;;                  1    wreg      void 
  2997 ;; Registers used:
  2998 ;;		wreg, status,2, status,0
  2999 ;; Tracked objects:
  3000 ;;		On entry : 0/0
  3001 ;;		On exit  : 0/0
  3002 ;;		Unchanged: 0/0
  3003 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3005 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;Total ram usage:        1 bytes
  3009 ;; Hardware stack levels used:    1
  3010 ;; Hardware stack levels required when called:    3
  3011 ;; This function calls:
  3012 ;;		Nothing
  3013 ;; This function is called by:
  3014 ;;		_main
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text24
  3019  002204                     __ptext24:
  3020                           	callstack 0
  3021  002204                     _Rotate:
  3022                           	callstack 124
  3023  002204                     
  3024                           ;Labs/Lab03_Rotate/Rotate.c: 55:     if (labState == 0) {
  3025  002204  505E               	movf	_labState^(0+1280),w,c
  3026  002206  A4D8               	btfss	status,2,c
  3027  002208  EF08  F011         	goto	u1941
  3028  00220C  EF0A  F011         	goto	u1940
  3029  002210                     u1941:
  3030  002210  EF13  F011         	goto	l3634
  3031  002214                     u1940:
  3032  002214  0E00               	movlw	0
  3033  002216  6EBE               	movwf	190,c	;volatile
  3034  002218  9AC0               	bcf	192,5,c	;volatile
  3035  00221A  8ABE               	bsf	190,5,c	;volatile
  3036  00221C                     
  3037                           ;Labs/Lab03_Rotate/Rotate.c: 60:         rotateReg = 1;
  3038  00221C  0E01               	movlw	1
  3039  00221E  0105               	movlb	5	; () banked
  3040  002220  6F72               	movwf	_rotateReg& (0+255),b
  3041                           
  3042                           ;Labs/Lab03_Rotate/Rotate.c: 62:         labState = 1;
  3043  002222  0E01               	movlw	1
  3044  002224  6E5E               	movwf	_labState^(0+1280),c
  3045  002226                     l3634:
  3046                           
  3047                           ;Labs/Lab03_Rotate/Rotate.c: 65:     if (labState == 1) {
  3048  002226  045E               	decf	_labState^(0+1280),w,c
  3049  002228  A4D8               	btfss	status,2,c
  3050  00222A  EF19  F011         	goto	u1951
  3051  00222E  EF1B  F011         	goto	u1950
  3052  002232                     u1951:
  3053  002232  EF67  F011         	goto	l90
  3054  002236                     u1950:
  3055  002236                     
  3056                           ;Labs/Lab03_Rotate/Rotate.c: 66:         _delay((unsigned long)((500)*(500000/4000.0)));
  3057  002236  0E52               	movlw	82
  3058  002238  6E02               	movwf	??_Rotate^(0+1280),c
  3059  00223A  0E2A               	movlw	42
  3060  00223C                     u2777:
  3061  00223C  2EE8               	decfsz	wreg,f,c
  3062  00223E  D7FE               	bra	u2777
  3063  002240  2E02               	decfsz	??_Rotate^(0+1280),f,c
  3064  002242  D7FC               	bra	u2777
  3065  002244                     
  3066                           ;Labs/Lab03_Rotate/Rotate.c: 68:         rotateReg <<= 1;
  3067  002244  0105               	movlb	5	; () banked
  3068  002246  90D8               	bcf	status,0,c
  3069  002248  3772               	rlcf	_rotateReg& (0+255),f,b
  3070  00224A                     
  3071                           ; BSR set to: 5
  3072                           ;Labs/Lab03_Rotate/Rotate.c: 71:         if (rotateReg == 16)
  3073  00224A  0E10               	movlw	16
  3074  00224C  1972               	xorwf	_rotateReg& (0+255),w,b
  3075  00224E  A4D8               	btfss	status,2,c
  3076  002250  EF2C  F011         	goto	u1961
  3077  002254  EF2E  F011         	goto	u1960
  3078  002258                     u1961:
  3079  002258  EF30  F011         	goto	l3644
  3080  00225C                     u1960:
  3081  00225C                     
  3082                           ; BSR set to: 5
  3083                           ;Labs/Lab03_Rotate/Rotate.c: 72:             rotateReg = 1;
  3084  00225C  0E01               	movlw	1
  3085  00225E  6F72               	movwf	_rotateReg& (0+255),b
  3086  002260                     l3644:
  3087                           
  3088                           ; BSR set to: 5
  3089                           ;Labs/Lab03_Rotate/Rotate.c: 76:         LATAbits.LATA5 = rotateReg & 1;
  3090  002260  C572  F502         	movff	_rotateReg,??_Rotate
  3091  002264  0E01               	movlw	1
  3092  002266  1602               	andwf	??_Rotate^(0+1280),f,c
  3093  002268  3A02               	swapf	??_Rotate^(0+1280),f,c
  3094  00226A  4602               	rlncf	??_Rotate^(0+1280),f,c
  3095  00226C  50BE               	movf	190,w,c	;volatile
  3096  00226E  1802               	xorwf	??_Rotate^(0+1280),w,c
  3097  002270  0BDF               	andlw	-33
  3098  002272  1802               	xorwf	??_Rotate^(0+1280),w,c
  3099  002274  6EBE               	movwf	190,c	;volatile
  3100  002276                     
  3101                           ; BSR set to: 5
  3102                           ;Labs/Lab03_Rotate/Rotate.c: 77:         LATAbits.LATA1 = (rotateReg & 2) >> 1;
  3103  002276  C572  F502         	movff	_rotateReg,??_Rotate
  3104  00227A  90D8               	bcf	status,0,c
  3105  00227C  3202               	rrcf	??_Rotate^(0+1280),f,c
  3106  00227E  0E01               	movlw	1
  3107  002280  1602               	andwf	??_Rotate^(0+1280),f,c
  3108  002282  4602               	rlncf	??_Rotate^(0+1280),f,c
  3109  002284  50BE               	movf	190,w,c	;volatile
  3110  002286  1802               	xorwf	??_Rotate^(0+1280),w,c
  3111  002288  0BFD               	andlw	-3
  3112  00228A  1802               	xorwf	??_Rotate^(0+1280),w,c
  3113  00228C  6EBE               	movwf	190,c	;volatile
  3114  00228E                     
  3115                           ; BSR set to: 5
  3116                           ;Labs/Lab03_Rotate/Rotate.c: 78:         LATAbits.LATA2 = (rotateReg & 4) >> 2;
  3117  00228E  C572  F502         	movff	_rotateReg,??_Rotate
  3118  002292  90D8               	bcf	status,0,c
  3119  002294  3202               	rrcf	??_Rotate^(0+1280),f,c
  3120  002296  90D8               	bcf	status,0,c
  3121  002298  3202               	rrcf	??_Rotate^(0+1280),f,c
  3122  00229A  0E01               	movlw	1
  3123  00229C  1602               	andwf	??_Rotate^(0+1280),f,c
  3124  00229E  4602               	rlncf	??_Rotate^(0+1280),f,c
  3125  0022A0  4602               	rlncf	??_Rotate^(0+1280),f,c
  3126  0022A2  50BE               	movf	190,w,c	;volatile
  3127  0022A4  1802               	xorwf	??_Rotate^(0+1280),w,c
  3128  0022A6  0BFB               	andlw	-5
  3129  0022A8  1802               	xorwf	??_Rotate^(0+1280),w,c
  3130  0022AA  6EBE               	movwf	190,c	;volatile
  3131  0022AC                     
  3132                           ; BSR set to: 5
  3133                           ;Labs/Lab03_Rotate/Rotate.c: 79:         LATCbits.LATC5 = (rotateReg & 8) >> 3;
  3134  0022AC  C572  F502         	movff	_rotateReg,??_Rotate
  3135  0022B0  90D8               	bcf	status,0,c
  3136  0022B2  3202               	rrcf	??_Rotate^(0+1280),f,c
  3137  0022B4  90D8               	bcf	status,0,c
  3138  0022B6  3202               	rrcf	??_Rotate^(0+1280),f,c
  3139  0022B8  90D8               	bcf	status,0,c
  3140  0022BA  3202               	rrcf	??_Rotate^(0+1280),f,c
  3141  0022BC  0E01               	movlw	1
  3142  0022BE  1602               	andwf	??_Rotate^(0+1280),f,c
  3143  0022C0  3A02               	swapf	??_Rotate^(0+1280),f,c
  3144  0022C2  4602               	rlncf	??_Rotate^(0+1280),f,c
  3145  0022C4  50C0               	movf	192,w,c	;volatile
  3146  0022C6  1802               	xorwf	??_Rotate^(0+1280),w,c
  3147  0022C8  0BDF               	andlw	-33
  3148  0022CA  1802               	xorwf	??_Rotate^(0+1280),w,c
  3149  0022CC  6EC0               	movwf	192,c	;volatile
  3150  0022CE                     l90:
  3151                           
  3152                           ;Labs/Lab03_Rotate/Rotate.c: 82:     if (switchEvent) {
  3153  0022CE  0105               	movlb	5	; () banked
  3154  0022D0  5175               	movf	_switchEvent& (0+255),w,b
  3155  0022D2  B4D8               	btfsc	status,2,c
  3156  0022D4  EF6E  F011         	goto	u1971
  3157  0022D8  EF70  F011         	goto	u1970
  3158  0022DC                     u1971:
  3159  0022DC  EF72  F011         	goto	l93
  3160  0022E0                     u1970:
  3161  0022E0                     
  3162                           ; BSR set to: 5
  3163                           ;Labs/Lab03_Rotate/Rotate.c: 83:         labState = 0;
  3164  0022E0  0E00               	movlw	0
  3165  0022E2  6E5E               	movwf	_labState^(0+1280),c
  3166  0022E4                     l93:
  3167                           
  3168                           ; BSR set to: 5
  3169  0022E4  0012               	return		;funcret
  3170  0022E6                     __end_of_Rotate:
  3171                           	callstack 0
  3172                           
  3173 ;; *************** function _PWM *****************
  3174 ;; Defined at:
  3175 ;;		line 60 in file "Labs/Lab06_PulseWidthModulation/PWM.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;		None
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;		None
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3191 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;Total ram usage:        1 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:   12
  3196 ;; This function calls:
  3197 ;;		_ADCC_GetSingleConversion
  3198 ;;		_PWM1_16BIT_LoadBufferRegisters
  3199 ;;		_PWM1_16BIT_SetSlice1Output1DutyCycleRegister
  3200 ;;		_PWM_Output_D7_Disable
  3201 ;;		_PWM_Output_D7_Enable
  3202 ;;		_TMR2_StartTimer
  3203 ;;		_TMR2_StopTimer
  3204 ;;		_printf
  3205 ;; This function is called by:
  3206 ;;		_main
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210                           	psect	text25
  3211  00244E                     __ptext25:
  3212                           	callstack 0
  3213  00244E                     _PWM:
  3214                           	callstack 115
  3215  00244E                     
  3216                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 61:     if (labState == 0) {
  3217  00244E  505E               	movf	_labState^(0+1280),w,c
  3218  002450  A4D8               	btfss	status,2,c
  3219  002452  EF2D  F012         	goto	u2651
  3220  002456  EF2F  F012         	goto	u2650
  3221  00245A                     u2651:
  3222  00245A  EF38  F012         	goto	l4068
  3223  00245E                     u2650:
  3224  00245E  0E00               	movlw	0
  3225  002460  6EBE               	movwf	190,c	;volatile
  3226  002462  9AC0               	bcf	192,5,c	;volatile
  3227  002464                     
  3228                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 63:         PWM_Output_D7_Enable();
  3229  002464  EC8F  F016         	call	_PWM_Output_D7_Enable	;wreg free
  3230                           
  3231                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 64:         TMR2_StartTimer();
  3232  002468  EC9D  F016         	call	_TMR2_StartTimer	;wreg free
  3233  00246C                     
  3234                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 66:         labState = 1;
  3235  00246C  0E01               	movlw	1
  3236  00246E  6E5E               	movwf	_labState^(0+1280),c
  3237  002470                     l4068:
  3238                           
  3239                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 69:     if (labState == 1) {
  3240  002470  045E               	decf	_labState^(0+1280),w,c
  3241  002472  A4D8               	btfss	status,2,c
  3242  002474  EF3E  F012         	goto	u2661
  3243  002478  EF40  F012         	goto	u2660
  3244  00247C                     u2661:
  3245  00247C  EF62  F012         	goto	l4078
  3246  002480                     u2660:
  3247  002480                     
  3248                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 70:         adcResult = ADCC_GetSingleConversion
      +                          (POT_CHANNEL) >> 4;
  3249  002480  0E10               	movlw	16
  3250  002482  EC49  F015         	call	_ADCC_GetSingleConversion
  3251  002486  0E04               	movlw	4
  3252  002488  6E5B               	movwf	??_PWM^(0+1280),c
  3253  00248A                     u2675:
  3254  00248A  90D8               	bcf	status,0,c
  3255  00248C  3203               	rrcf	(?_ADCC_GetSingleConversion+1)^(0+1280),f,c
  3256  00248E  3202               	rrcf	?_ADCC_GetSingleConversion^(0+1280),f,c
  3257  002490  2E5B               	decfsz	??_PWM^(0+1280),f,c
  3258  002492  EF45  F012         	goto	u2675
  3259  002496  C502  F568         	movff	?_ADCC_GetSingleConversion,_adcResult@PWM$F309
  3260  00249A  C503  F569         	movff	?_ADCC_GetSingleConversion+1,_adcResult@PWM$F309+1
  3261  00249E                     
  3262                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 72:         printf("ADC Result: %d\n\r", adcResu
      +                          lt);
  3263  00249E  0E01               	movlw	low STR_1
  3264  0024A0  0105               	movlb	5	; () banked
  3265  0024A2  6FA7               	movwf	printf@fmt& (0+255),b
  3266  0024A4  0E15               	movlw	high STR_1
  3267  0024A6  6FA8               	movwf	(printf@fmt+1)& (0+255),b
  3268  0024A8  C568  F5A9         	movff	_adcResult@PWM$F309,?_printf+2
  3269  0024AC  C569  F5AA         	movff	_adcResult@PWM$F309+1,?_printf+3
  3270  0024B0  ECAC  F015         	call	_printf	;wreg free
  3271  0024B4                     
  3272                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 73:         PWM1_16BIT_SetSlice1Output1DutyCycle
      +                          Register(adcResult);
  3273  0024B4  C568  F502         	movff	_adcResult@PWM$F309,PWM1_16BIT_SetSlice1Output1DutyCycleRegister@registerValue
  3274  0024B8  C569  F503         	movff	_adcResult@PWM$F309+1,PWM1_16BIT_SetSlice1Output1DutyCycleRegister@registerValue+
      +                          1
  3275  0024BC  EC61  F016         	call	_PWM1_16BIT_SetSlice1Output1DutyCycleRegister	;wreg free
  3276  0024C0                     
  3277                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 74:         PWM1_16BIT_LoadBufferRegisters();
  3278  0024C0  ECAB  F016         	call	_PWM1_16BIT_LoadBufferRegisters	;wreg free
  3279  0024C4                     l4078:
  3280                           
  3281                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 77:     if (switchEvent) {
  3282  0024C4  0105               	movlb	5	; () banked
  3283  0024C6  5175               	movf	_switchEvent& (0+255),w,b
  3284  0024C8  B4D8               	btfsc	status,2,c
  3285  0024CA  EF69  F012         	goto	u2681
  3286  0024CE  EF6B  F012         	goto	u2680
  3287  0024D2                     u2681:
  3288  0024D2  EF71  F012         	goto	l201
  3289  0024D6                     u2680:
  3290  0024D6                     
  3291                           ; BSR set to: 5
  3292                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 78:         TMR2_StopTimer();
  3293  0024D6  EC97  F016         	call	_TMR2_StopTimer	;wreg free
  3294  0024DA                     
  3295                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 79:         PWM_Output_D7_Disable();
  3296  0024DA  EC93  F016         	call	_PWM_Output_D7_Disable	;wreg free
  3297                           
  3298                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 80:         labState = 0;
  3299  0024DE  0E00               	movlw	0
  3300  0024E0  6E5E               	movwf	_labState^(0+1280),c
  3301  0024E2                     l201:
  3302  0024E2  0012               	return		;funcret
  3303  0024E4                     __end_of_PWM:
  3304                           	callstack 0
  3305                           
  3306 ;; *************** function _TMR2_StopTimer *****************
  3307 ;; Defined at:
  3308 ;;		line 117 in file "mcc_generated_files/tmr2.c"
  3309 ;; Parameters:    Size  Location     Type
  3310 ;;		None
  3311 ;; Auto vars:     Size  Location     Type
  3312 ;;		None
  3313 ;; Return value:  Size  Location     Type
  3314 ;;                  1    wreg      void 
  3315 ;; Registers used:
  3316 ;;		cstack
  3317 ;; Tracked objects:
  3318 ;;		On entry : 0/0
  3319 ;;		On exit  : 0/0
  3320 ;;		Unchanged: 0/0
  3321 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3326 ;;Total ram usage:        0 bytes
  3327 ;; Hardware stack levels used:    1
  3328 ;; Hardware stack levels required when called:    4
  3329 ;; This function calls:
  3330 ;;		_TMR2_Stop
  3331 ;; This function is called by:
  3332 ;;		_PWM
  3333 ;; This function uses a non-reentrant model
  3334 ;;
  3335                           
  3336                           	psect	text26
  3337  002D2E                     __ptext26:
  3338                           	callstack 0
  3339  002D2E                     _TMR2_StopTimer:
  3340                           	callstack 122
  3341  002D2E                     
  3342                           ;mcc_generated_files/tmr2.c: 119:     TMR2_Stop();
  3343  002D2E  EC9A  F016         	call	_TMR2_Stop	;wreg free
  3344  002D32  0012               	return		;funcret
  3345  002D34                     __end_of_TMR2_StopTimer:
  3346                           	callstack 0
  3347                           
  3348 ;; *************** function _TMR2_Stop *****************
  3349 ;; Defined at:
  3350 ;;		line 111 in file "mcc_generated_files/tmr2.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		None
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3368 ;;Total ram usage:        0 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    3
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_TMR2_StopTimer
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text27
  3379  002D34                     __ptext27:
  3380                           	callstack 0
  3381  002D34                     _TMR2_Stop:
  3382                           	callstack 122
  3383  002D34                     
  3384                           ;mcc_generated_files/tmr2.c: 114:     T2CONbits.TMR2ON = 0;
  3385  002D34  0103               	movlb	3	; () banked
  3386  002D36  9F1E               	bcf	30,7,b	;volatile
  3387  002D38                     
  3388                           ; BSR set to: 3
  3389  002D38  0012               	return		;funcret
  3390  002D3A                     __end_of_TMR2_Stop:
  3391                           	callstack 0
  3392                           
  3393 ;; *************** function _TMR2_StartTimer *****************
  3394 ;; Defined at:
  3395 ;;		line 106 in file "mcc_generated_files/tmr2.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;		None
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;		None
  3400 ;; Return value:  Size  Location     Type
  3401 ;;                  1    wreg      void 
  3402 ;; Registers used:
  3403 ;;		cstack
  3404 ;; Tracked objects:
  3405 ;;		On entry : 0/0
  3406 ;;		On exit  : 0/0
  3407 ;;		Unchanged: 0/0
  3408 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;Total ram usage:        0 bytes
  3414 ;; Hardware stack levels used:    1
  3415 ;; Hardware stack levels required when called:    4
  3416 ;; This function calls:
  3417 ;;		_TMR2_Start
  3418 ;; This function is called by:
  3419 ;;		_PWM
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text28
  3424  002D3A                     __ptext28:
  3425                           	callstack 0
  3426  002D3A                     _TMR2_StartTimer:
  3427                           	callstack 122
  3428  002D3A                     
  3429                           ;mcc_generated_files/tmr2.c: 108:     TMR2_Start();
  3430  002D3A  ECA0  F016         	call	_TMR2_Start	;wreg free
  3431  002D3E  0012               	return		;funcret
  3432  002D40                     __end_of_TMR2_StartTimer:
  3433                           	callstack 0
  3434                           
  3435 ;; *************** function _TMR2_Start *****************
  3436 ;; Defined at:
  3437 ;;		line 100 in file "mcc_generated_files/tmr2.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      void 
  3444 ;; Registers used:
  3445 ;;		None
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3455 ;;Total ram usage:        0 bytes
  3456 ;; Hardware stack levels used:    1
  3457 ;; Hardware stack levels required when called:    3
  3458 ;; This function calls:
  3459 ;;		Nothing
  3460 ;; This function is called by:
  3461 ;;		_TMR2_StartTimer
  3462 ;; This function uses a non-reentrant model
  3463 ;;
  3464                           
  3465                           	psect	text29
  3466  002D40                     __ptext29:
  3467                           	callstack 0
  3468  002D40                     _TMR2_Start:
  3469                           	callstack 122
  3470  002D40                     
  3471                           ;mcc_generated_files/tmr2.c: 103:     T2CONbits.TMR2ON = 1;
  3472  002D40  0103               	movlb	3	; () banked
  3473  002D42  8F1E               	bsf	30,7,b	;volatile
  3474  002D44                     
  3475                           ; BSR set to: 3
  3476  002D44  0012               	return		;funcret
  3477  002D46                     __end_of_TMR2_Start:
  3478                           	callstack 0
  3479                           
  3480 ;; *************** function _PWM_Output_D7_Enable *****************
  3481 ;; Defined at:
  3482 ;;		line 84 in file "Labs/Lab06_PulseWidthModulation/PWM.c"
  3483 ;; Parameters:    Size  Location     Type
  3484 ;;		None
  3485 ;; Auto vars:     Size  Location     Type
  3486 ;;		None
  3487 ;; Return value:  Size  Location     Type
  3488 ;;                  1    wreg      void 
  3489 ;; Registers used:
  3490 ;;		wreg, status,2
  3491 ;; Tracked objects:
  3492 ;;		On entry : 0/0
  3493 ;;		On exit  : 0/0
  3494 ;;		Unchanged: 0/0
  3495 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3500 ;;Total ram usage:        0 bytes
  3501 ;; Hardware stack levels used:    1
  3502 ;; Hardware stack levels required when called:    3
  3503 ;; This function calls:
  3504 ;;		Nothing
  3505 ;; This function is called by:
  3506 ;;		_PWM
  3507 ;; This function uses a non-reentrant model
  3508 ;;
  3509                           
  3510                           	psect	text30
  3511  002D1E                     __ptext30:
  3512                           	callstack 0
  3513  002D1E                     _PWM_Output_D7_Enable:
  3514                           	callstack 123
  3515  002D1E                     
  3516                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 87:     RC5PPS = 0x0A;
  3517  002D1E  0E0A               	movlw	10
  3518  002D20  0102               	movlb	2	; () banked
  3519  002D22  6F16               	movwf	22,b	;volatile
  3520  002D24                     
  3521                           ; BSR set to: 2
  3522  002D24  0012               	return		;funcret
  3523  002D26                     __end_of_PWM_Output_D7_Enable:
  3524                           	callstack 0
  3525                           
  3526 ;; *************** function _PWM_Output_D7_Disable *****************
  3527 ;; Defined at:
  3528 ;;		line 90 in file "Labs/Lab06_PulseWidthModulation/PWM.c"
  3529 ;; Parameters:    Size  Location     Type
  3530 ;;		None
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;		None
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      void 
  3535 ;; Registers used:
  3536 ;;		wreg, status,2
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3546 ;;Total ram usage:        0 bytes
  3547 ;; Hardware stack levels used:    1
  3548 ;; Hardware stack levels required when called:    3
  3549 ;; This function calls:
  3550 ;;		Nothing
  3551 ;; This function is called by:
  3552 ;;		_PWM
  3553 ;; This function uses a non-reentrant model
  3554 ;;
  3555                           
  3556                           	psect	text31
  3557  002D26                     __ptext31:
  3558                           	callstack 0
  3559  002D26                     _PWM_Output_D7_Disable:
  3560                           	callstack 123
  3561  002D26                     
  3562                           ;Labs/Lab06_PulseWidthModulation/PWM.c: 93:     RC5PPS = 0x00;
  3563  002D26  0E00               	movlw	0
  3564  002D28  0102               	movlb	2	; () banked
  3565  002D2A  6F16               	movwf	22,b	;volatile
  3566  002D2C                     
  3567                           ; BSR set to: 2
  3568  002D2C  0012               	return		;funcret
  3569  002D2E                     __end_of_PWM_Output_D7_Disable:
  3570                           	callstack 0
  3571                           
  3572 ;; *************** function _PWM1_16BIT_SetSlice1Output1DutyCycleRegister *****************
  3573 ;; Defined at:
  3574 ;;		line 150 in file "mcc_generated_files/pwm1_16bit.c"
  3575 ;; Parameters:    Size  Location     Type
  3576 ;;  registerValu    2    1[COMRAM] unsigned short 
  3577 ;; Auto vars:     Size  Location     Type
  3578 ;;		None
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		wreg, status,2
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3588 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3592 ;;Total ram usage:        2 bytes
  3593 ;; Hardware stack levels used:    1
  3594 ;; Hardware stack levels required when called:    3
  3595 ;; This function calls:
  3596 ;;		Nothing
  3597 ;; This function is called by:
  3598 ;;		_PWM
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text32
  3603  002CC2                     __ptext32:
  3604                           	callstack 0
  3605  002CC2                     _PWM1_16BIT_SetSlice1Output1DutyCycleRegister:
  3606                           	callstack 123
  3607  002CC2                     
  3608                           ;mcc_generated_files/pwm1_16bit.c: 150: void PWM1_16BIT_SetSlice1Output1DutyCycleRegiste
      +                          r(uint16_t registerValue);mcc_generated_files/pwm1_16bit.c: 151: {;mcc_generated_files/p
      +                          wm1_16bit.c: 152:     PWM1S1P1L = (uint8_t)(registerValue);
  3609  002CC2  0061  F408  F46B   	movff	PWM1_16BIT_SetSlice1Output1DutyCycleRegister@registerValue,1131	;volatile
  3610  002CC8                     
  3611                           ;mcc_generated_files/pwm1_16bit.c: 153:     PWM1S1P1H = (uint8_t)(registerValue >> 8);
  3612  002CC8  5003               	movf	(PWM1_16BIT_SetSlice1Output1DutyCycleRegister@registerValue+1)^(0+1280),w,c
  3613  002CCA  6E6C               	movwf	108,c	;volatile
  3614  002CCC  0012               	return		;funcret
  3615  002CCE                     __end_of_PWM1_16BIT_SetSlice1Output1DutyCycleRegister:
  3616                           	callstack 0
  3617                           
  3618 ;; *************** function _PWM1_16BIT_LoadBufferRegisters *****************
  3619 ;; Defined at:
  3620 ;;		line 162 in file "mcc_generated_files/pwm1_16bit.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;		None
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;		None
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  1    wreg      void 
  3627 ;; Registers used:
  3628 ;;		None
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3638 ;;Total ram usage:        0 bytes
  3639 ;; Hardware stack levels used:    1
  3640 ;; Hardware stack levels required when called:    3
  3641 ;; This function calls:
  3642 ;;		Nothing
  3643 ;; This function is called by:
  3644 ;;		_PWM
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           	psect	text33
  3649  002D56                     __ptext33:
  3650                           	callstack 0
  3651  002D56                     _PWM1_16BIT_LoadBufferRegisters:
  3652                           	callstack 123
  3653  002D56                     
  3654                           ;mcc_generated_files/pwm1_16bit.c: 165:     PWM1CONbits.LD = 1;
  3655  002D56  8469               	bsf	105,2,c	;volatile
  3656  002D58  0012               	return		;funcret
  3657  002D5A                     __end_of_PWM1_16BIT_LoadBufferRegisters:
  3658                           	callstack 0
  3659                           
  3660 ;; *************** function _Interrupt *****************
  3661 ;; Defined at:
  3662 ;;		line 59 in file "Labs/Lab08_Interrupts/Interrupt.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;		None
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;		None
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      void 
  3669 ;; Registers used:
  3670 ;;		wreg, status,2, status,0, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3680 ;;Total ram usage:        0 bytes
  3681 ;; Hardware stack levels used:    1
  3682 ;; Hardware stack levels required when called:    4
  3683 ;; This function calls:
  3684 ;;		_TMR0_SetInterruptHandler
  3685 ;; This function is called by:
  3686 ;;		_main
  3687 ;; This function uses a non-reentrant model
  3688 ;;
  3689                           
  3690                           	psect	text34
  3691  002908                     __ptext34:
  3692                           	callstack 0
  3693  002908                     _Interrupt:
  3694                           	callstack 123
  3695  002908                     
  3696                           ;Labs/Lab08_Interrupts/Interrupt.c: 61:     if (labState == 0) {
  3697  002908  505E               	movf	_labState^(0+1280),w,c
  3698  00290A  A4D8               	btfss	status,2,c
  3699  00290C  EF8A  F014         	goto	u2181
  3700  002910  EF8C  F014         	goto	u2180
  3701  002914                     u2181:
  3702  002914  EF9D  F014         	goto	l3784
  3703  002918                     u2180:
  3704  002918  0E00               	movlw	0
  3705  00291A  6EBE               	movwf	190,c	;volatile
  3706  00291C  9AC0               	bcf	192,5,c	;volatile
  3707  00291E  8ABE               	bsf	190,5,c	;volatile
  3708  002920                     
  3709                           ;Labs/Lab08_Interrupts/Interrupt.c: 65:         rotateReg = 1;
  3710  002920  0E01               	movlw	1
  3711  002922  0105               	movlb	5	; () banked
  3712  002924  6F6D               	movwf	_rotateReg@Interrupt$F412& (0+255),b
  3713  002926                     
  3714                           ; BSR set to: 5
  3715                           ;Labs/Lab08_Interrupts/Interrupt.c: 67:         (INTCON0bits.GIE = 1);
  3716  002926  8ED6               	bsf	214,7,c	;volatile
  3717  002928                     
  3718                           ; BSR set to: 5
  3719  002928  8EAB               	bsf	1195,7,c	;volatile
  3720  00292A                     
  3721                           ; BSR set to: 5
  3722                           ;Labs/Lab08_Interrupts/Interrupt.c: 70:         TMR0_SetInterruptHandler(LAB_ISR);
  3723  00292A  0E7A               	movlw	low _LAB_ISR
  3724  00292C  6E02               	movwf	TMR0_SetInterruptHandler@InterruptHandler^(0+1280),c
  3725  00292E  0E25               	movlw	high _LAB_ISR
  3726  002930  6E03               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^(0+1280),c
  3727  002932  EC85  F016         	call	_TMR0_SetInterruptHandler	;wreg free
  3728  002936                     
  3729                           ;Labs/Lab08_Interrupts/Interrupt.c: 72:         labState = 1;
  3730  002936  0E01               	movlw	1
  3731  002938  6E5E               	movwf	_labState^(0+1280),c
  3732  00293A                     l3784:
  3733                           
  3734                           ;Labs/Lab08_Interrupts/Interrupt.c: 79:     if (switchEvent) {
  3735  00293A  0105               	movlb	5	; () banked
  3736  00293C  5175               	movf	_switchEvent& (0+255),w,b
  3737  00293E  B4D8               	btfsc	status,2,c
  3738  002940  EFA4  F014         	goto	u2191
  3739  002944  EFA6  F014         	goto	u2190
  3740  002948                     u2191:
  3741  002948  EFAA  F014         	goto	l285
  3742  00294C                     u2190:
  3743  00294C                     
  3744                           ; BSR set to: 5
  3745  00294C  9EAB               	bcf	1195,7,c	;volatile
  3746  00294E                     
  3747                           ; BSR set to: 5
  3748                           ;Labs/Lab08_Interrupts/Interrupt.c: 82:         (INTCON0bits.GIE = 0);
  3749  00294E  9ED6               	bcf	214,7,c	;volatile
  3750  002950                     
  3751                           ; BSR set to: 5
  3752                           ;Labs/Lab08_Interrupts/Interrupt.c: 84:         labState = 0;
  3753  002950  0E00               	movlw	0
  3754  002952  6E5E               	movwf	_labState^(0+1280),c
  3755  002954                     l285:
  3756                           
  3757                           ; BSR set to: 5
  3758  002954  0012               	return		;funcret
  3759  002956                     __end_of_Interrupt:
  3760                           	callstack 0
  3761                           
  3762 ;; *************** function _TMR0_SetInterruptHandler *****************
  3763 ;; Defined at:
  3764 ;;		line 134 in file "mcc_generated_files/tmr0.c"
  3765 ;; Parameters:    Size  Location     Type
  3766 ;;  InterruptHan    2    1[COMRAM] PTR FTN()void 
  3767 ;;		 -> TMR0_DefaultInterruptHandler(1), LAB_ISR(1), 
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1    wreg      void 
  3772 ;; Registers used:
  3773 ;;		wreg, status,2, status,0
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3780 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3782 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3783 ;;Total ram usage:        2 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; Hardware stack levels required when called:    3
  3786 ;; This function calls:
  3787 ;;		Nothing
  3788 ;; This function is called by:
  3789 ;;		_Interrupt
  3790 ;;		_TMR0_Initialize
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text35
  3795  002D0A                     __ptext35:
  3796                           	callstack 0
  3797  002D0A                     _TMR0_SetInterruptHandler:
  3798                           	callstack 122
  3799  002D0A                     
  3800                           ;mcc_generated_files/tmr0.c: 135:     TMR0_InterruptHandler = InterruptHandler;
  3801  002D0A  C502  F5A5         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  3802  002D0E  C503  F5A6         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  3803  002D12  0012               	return		;funcret
  3804  002D14                     __end_of_TMR0_SetInterruptHandler:
  3805                           	callstack 0
  3806                           
  3807 ;; *************** function _HelloWorld *****************
  3808 ;; Defined at:
  3809 ;;		line 50 in file "Labs/Lab01_HelloWorld/HelloWorld.c"
  3810 ;; Parameters:    Size  Location     Type
  3811 ;;		None
  3812 ;; Auto vars:     Size  Location     Type
  3813 ;;		None
  3814 ;; Return value:  Size  Location     Type
  3815 ;;                  1    wreg      void 
  3816 ;; Registers used:
  3817 ;;		wreg, status,2, status,0
  3818 ;; Tracked objects:
  3819 ;;		On entry : 0/0
  3820 ;;		On exit  : 0/0
  3821 ;;		Unchanged: 0/0
  3822 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;Total ram usage:        0 bytes
  3828 ;; Hardware stack levels used:    1
  3829 ;; Hardware stack levels required when called:    3
  3830 ;; This function calls:
  3831 ;;		Nothing
  3832 ;; This function is called by:
  3833 ;;		_main
  3834 ;; This function uses a non-reentrant model
  3835 ;;
  3836                           
  3837                           	psect	text36
  3838  002956                     __ptext36:
  3839                           	callstack 0
  3840  002956                     _HelloWorld:
  3841                           	callstack 124
  3842  002956                     
  3843                           ;Labs/Lab01_HelloWorld/HelloWorld.c: 51:     if (labState == 0) {
  3844  002956  505E               	movf	_labState^(0+1280),w,c
  3845  002958  A4D8               	btfss	status,2,c
  3846  00295A  EFB1  F014         	goto	u1851
  3847  00295E  EFB3  F014         	goto	u1850
  3848  002962                     u1851:
  3849  002962  EFB8  F014         	goto	l3588
  3850  002966                     u1850:
  3851  002966  0E00               	movlw	0
  3852  002968  6EBE               	movwf	190,c	;volatile
  3853  00296A  9AC0               	bcf	192,5,c	;volatile
  3854  00296C                     
  3855                           ;Labs/Lab01_HelloWorld/HelloWorld.c: 54:         labState = 1;
  3856  00296C  0E01               	movlw	1
  3857  00296E  6E5E               	movwf	_labState^(0+1280),c
  3858  002970                     l3588:
  3859                           
  3860                           ;Labs/Lab01_HelloWorld/HelloWorld.c: 57:     if (labState == 1) {
  3861  002970  045E               	decf	_labState^(0+1280),w,c
  3862  002972  A4D8               	btfss	status,2,c
  3863  002974  EFBE  F014         	goto	u1861
  3864  002978  EFC0  F014         	goto	u1860
  3865  00297C                     u1861:
  3866  00297C  EFC1  F014         	goto	l3590
  3867  002980                     u1860:
  3868  002980  8ABE               	bsf	190,5,c	;volatile
  3869  002982                     l3590:
  3870                           
  3871                           ;Labs/Lab01_HelloWorld/HelloWorld.c: 61:     if (switchEvent) {
  3872  002982  0105               	movlb	5	; () banked
  3873  002984  5175               	movf	_switchEvent& (0+255),w,b
  3874  002986  B4D8               	btfsc	status,2,c
  3875  002988  EFC8  F014         	goto	u1871
  3876  00298C  EFCA  F014         	goto	u1870
  3877  002990                     u1871:
  3878  002990  EFCC  F014         	goto	l24
  3879  002994                     u1870:
  3880  002994                     
  3881                           ; BSR set to: 5
  3882                           ;Labs/Lab01_HelloWorld/HelloWorld.c: 62:         labState = 0;
  3883  002994  0E00               	movlw	0
  3884  002996  6E5E               	movwf	_labState^(0+1280),c
  3885  002998                     l24:
  3886                           
  3887                           ; BSR set to: 5
  3888  002998  0012               	return		;funcret
  3889  00299A                     __end_of_HelloWorld:
  3890                           	callstack 0
  3891                           
  3892 ;; *************** function _EEPROM *****************
  3893 ;; Defined at:
  3894 ;;		line 58 in file "Labs/Lab10_EEPROM/EEPROM.c"
  3895 ;; Parameters:    Size  Location     Type
  3896 ;;		None
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;		None
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  1    wreg      void 
  3901 ;; Registers used:
  3902 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  3908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3912 ;;Total ram usage:        3 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; Hardware stack levels required when called:   12
  3915 ;; This function calls:
  3916 ;;		_ADCC_GetSingleConversion
  3917 ;;		_DATAEE_ReadByte
  3918 ;;		_DATAEE_WriteByte
  3919 ;;		_printf
  3920 ;; This function is called by:
  3921 ;;		_main
  3922 ;; This function uses a non-reentrant model
  3923 ;;
  3924                           
  3925                           	psect	text37
  3926  001E0A                     __ptext37:
  3927                           	callstack 0
  3928  001E0A                     _EEPROM:
  3929                           	callstack 115
  3930  001E0A                     
  3931                           ;Labs/Lab10_EEPROM/EEPROM.c: 60:     if (labState == 0) {
  3932  001E0A  505E               	movf	_labState^(0+1280),w,c
  3933  001E0C  A4D8               	btfss	status,2,c
  3934  001E0E  EF0B  F00F         	goto	u2691
  3935  001E12  EF0D  F00F         	goto	u2690
  3936  001E16                     u2691:
  3937  001E16  EF12  F00F         	goto	l4090
  3938  001E1A                     u2690:
  3939  001E1A  0E00               	movlw	0
  3940  001E1C  6EBE               	movwf	190,c	;volatile
  3941  001E1E  9AC0               	bcf	192,5,c	;volatile
  3942  001E20                     
  3943                           ;Labs/Lab10_EEPROM/EEPROM.c: 63:         labState = 1;
  3944  001E20  0E01               	movlw	1
  3945  001E22  6E5E               	movwf	_labState^(0+1280),c
  3946  001E24                     l4090:
  3947                           
  3948                           ;Labs/Lab10_EEPROM/EEPROM.c: 66:     if (labState == 1) {
  3949  001E24  045E               	decf	_labState^(0+1280),w,c
  3950  001E26  A4D8               	btfss	status,2,c
  3951  001E28  EF18  F00F         	goto	u2701
  3952  001E2C  EF1A  F00F         	goto	u2700
  3953  001E30                     u2701:
  3954  001E30  EF88  F00F         	goto	l4108
  3955  001E34                     u2700:
  3956  001E34                     
  3957                           ;Labs/Lab10_EEPROM/EEPROM.c: 69:         adcResult = ADCC_GetSingleConversion(POT_CHANNE
      +                          L) >> 12;
  3958  001E34  0E10               	movlw	16
  3959  001E36  EC49  F015         	call	_ADCC_GetSingleConversion
  3960  001E3A  0E0C               	movlw	12
  3961  001E3C  6E5B               	movwf	??_EEPROM^(0+1280),c
  3962  001E3E                     u2715:
  3963  001E3E  90D8               	bcf	status,0,c
  3964  001E40  3203               	rrcf	(?_ADCC_GetSingleConversion+1)^(0+1280),f,c
  3965  001E42  3202               	rrcf	?_ADCC_GetSingleConversion^(0+1280),f,c
  3966  001E44  2E5B               	decfsz	??_EEPROM^(0+1280),f,c
  3967  001E46  EF1F  F00F         	goto	u2715
  3968  001E4A  5002               	movf	?_ADCC_GetSingleConversion^(0+1280),w,c
  3969  001E4C  0105               	movlb	5	; () banked
  3970  001E4E  6F6C               	movwf	_adcResult@EEPROM$F550& (0+255),b
  3971  001E50                     
  3972                           ; BSR set to: 5
  3973                           ;Labs/Lab10_EEPROM/EEPROM.c: 70:         DATAEE_WriteByte(0x0000, adcResult);
  3974  001E50  0E00               	movlw	0
  3975  001E52  6E03               	movwf	(DATAEE_WriteByte@bAdd+1)^(0+1280),c
  3976  001E54  0E00               	movlw	0
  3977  001E56  6E02               	movwf	DATAEE_WriteByte@bAdd^(0+1280),c
  3978  001E58  C56C  F504         	movff	_adcResult@EEPROM$F550,DATAEE_WriteByte@bData
  3979  001E5C  EC5B  F014         	call	_DATAEE_WriteByte	;wreg free
  3980  001E60                     
  3981                           ;Labs/Lab10_EEPROM/EEPROM.c: 73:         printf("ADC Result: %d\n\r", ADRES >> 4);
  3982  001E60  0E01               	movlw	low STR_1
  3983  001E62  0105               	movlb	5	; () banked
  3984  001E64  6FA7               	movwf	printf@fmt& (0+255),b
  3985  001E66  0E15               	movlw	high STR_1
  3986  001E68  6FA8               	movwf	(printf@fmt+1)& (0+255),b
  3987  001E6A  0060 FFA8  F55B    	movff	1002,??_EEPROM	;volatile
  3988  001E70  0060 FFAC  F55C    	movff	1003,??_EEPROM+1	;volatile
  3989  001E76  0E04               	movlw	4
  3990  001E78  6E5D               	movwf	(??_EEPROM+2)^(0+1280),c
  3991  001E7A                     u2725:
  3992  001E7A  90D8               	bcf	status,0,c
  3993  001E7C  325C               	rrcf	(??_EEPROM+1)^(0+1280),f,c
  3994  001E7E  325B               	rrcf	??_EEPROM^(0+1280),f,c
  3995  001E80  2E5D               	decfsz	(??_EEPROM+2)^(0+1280),f,c
  3996  001E82  EF3D  F00F         	goto	u2725
  3997  001E86  C55B  F5A9         	movff	??_EEPROM,?_printf+2
  3998  001E8A  C55C  F5AA         	movff	??_EEPROM+1,?_printf+3
  3999  001E8E  ECAC  F015         	call	_printf	;wreg free
  4000  001E92                     
  4001                           ;Labs/Lab10_EEPROM/EEPROM.c: 76:         ledDisplay = DATAEE_ReadByte(0x0000);
  4002  001E92  0E00               	movlw	0
  4003  001E94  6E03               	movwf	(DATAEE_ReadByte@bAdd+1)^(0+1280),c
  4004  001E96  0E00               	movlw	0
  4005  001E98  6E02               	movwf	DATAEE_ReadByte@bAdd^(0+1280),c
  4006  001E9A  EC3D  F016         	call	_DATAEE_ReadByte	;wreg free
  4007  001E9E  0105               	movlb	5	; () banked
  4008  001EA0  6F6B               	movwf	_ledDisplay& (0+255),b
  4009  001EA2                     
  4010                           ; BSR set to: 5
  4011                           ;Labs/Lab10_EEPROM/EEPROM.c: 79:         LATAbits.LATA5 = ledDisplay & 1;
  4012  001EA2  C56B  F55B         	movff	_ledDisplay,??_EEPROM
  4013  001EA6  0E01               	movlw	1
  4014  001EA8  165B               	andwf	??_EEPROM^(0+1280),f,c
  4015  001EAA  3A5B               	swapf	??_EEPROM^(0+1280),f,c
  4016  001EAC  465B               	rlncf	??_EEPROM^(0+1280),f,c
  4017  001EAE  50BE               	movf	190,w,c	;volatile
  4018  001EB0  185B               	xorwf	??_EEPROM^(0+1280),w,c
  4019  001EB2  0BDF               	andlw	-33
  4020  001EB4  185B               	xorwf	??_EEPROM^(0+1280),w,c
  4021  001EB6  6EBE               	movwf	190,c	;volatile
  4022  001EB8                     
  4023                           ; BSR set to: 5
  4024                           ;Labs/Lab10_EEPROM/EEPROM.c: 80:         LATAbits.LATA1 = (ledDisplay & 2) >> 1;
  4025  001EB8  C56B  F55B         	movff	_ledDisplay,??_EEPROM
  4026  001EBC  90D8               	bcf	status,0,c
  4027  001EBE  325B               	rrcf	??_EEPROM^(0+1280),f,c
  4028  001EC0  0E01               	movlw	1
  4029  001EC2  165B               	andwf	??_EEPROM^(0+1280),f,c
  4030  001EC4  465B               	rlncf	??_EEPROM^(0+1280),f,c
  4031  001EC6  50BE               	movf	190,w,c	;volatile
  4032  001EC8  185B               	xorwf	??_EEPROM^(0+1280),w,c
  4033  001ECA  0BFD               	andlw	-3
  4034  001ECC  185B               	xorwf	??_EEPROM^(0+1280),w,c
  4035  001ECE  6EBE               	movwf	190,c	;volatile
  4036  001ED0                     
  4037                           ; BSR set to: 5
  4038                           ;Labs/Lab10_EEPROM/EEPROM.c: 81:         LATAbits.LATA2 = (ledDisplay & 4) >> 2;
  4039  001ED0  C56B  F55B         	movff	_ledDisplay,??_EEPROM
  4040  001ED4  90D8               	bcf	status,0,c
  4041  001ED6  325B               	rrcf	??_EEPROM^(0+1280),f,c
  4042  001ED8  90D8               	bcf	status,0,c
  4043  001EDA  325B               	rrcf	??_EEPROM^(0+1280),f,c
  4044  001EDC  0E01               	movlw	1
  4045  001EDE  165B               	andwf	??_EEPROM^(0+1280),f,c
  4046  001EE0  465B               	rlncf	??_EEPROM^(0+1280),f,c
  4047  001EE2  465B               	rlncf	??_EEPROM^(0+1280),f,c
  4048  001EE4  50BE               	movf	190,w,c	;volatile
  4049  001EE6  185B               	xorwf	??_EEPROM^(0+1280),w,c
  4050  001EE8  0BFB               	andlw	-5
  4051  001EEA  185B               	xorwf	??_EEPROM^(0+1280),w,c
  4052  001EEC  6EBE               	movwf	190,c	;volatile
  4053  001EEE                     
  4054                           ; BSR set to: 5
  4055                           ;Labs/Lab10_EEPROM/EEPROM.c: 82:         LATCbits.LATC5 = (ledDisplay & 8) >> 3;
  4056  001EEE  C56B  F55B         	movff	_ledDisplay,??_EEPROM
  4057  001EF2  90D8               	bcf	status,0,c
  4058  001EF4  325B               	rrcf	??_EEPROM^(0+1280),f,c
  4059  001EF6  90D8               	bcf	status,0,c
  4060  001EF8  325B               	rrcf	??_EEPROM^(0+1280),f,c
  4061  001EFA  90D8               	bcf	status,0,c
  4062  001EFC  325B               	rrcf	??_EEPROM^(0+1280),f,c
  4063  001EFE  0E01               	movlw	1
  4064  001F00  165B               	andwf	??_EEPROM^(0+1280),f,c
  4065  001F02  3A5B               	swapf	??_EEPROM^(0+1280),f,c
  4066  001F04  465B               	rlncf	??_EEPROM^(0+1280),f,c
  4067  001F06  50C0               	movf	192,w,c	;volatile
  4068  001F08  185B               	xorwf	??_EEPROM^(0+1280),w,c
  4069  001F0A  0BDF               	andlw	-33
  4070  001F0C  185B               	xorwf	??_EEPROM^(0+1280),w,c
  4071  001F0E  6EC0               	movwf	192,c	;volatile
  4072  001F10                     l4108:
  4073                           
  4074                           ;Labs/Lab10_EEPROM/EEPROM.c: 86:     if (switchEvent) {
  4075  001F10  0105               	movlb	5	; () banked
  4076  001F12  5175               	movf	_switchEvent& (0+255),w,b
  4077  001F14  B4D8               	btfsc	status,2,c
  4078  001F16  EF8F  F00F         	goto	u2731
  4079  001F1A  EF91  F00F         	goto	u2730
  4080  001F1E                     u2731:
  4081  001F1E  EF93  F00F         	goto	l347
  4082  001F22                     u2730:
  4083  001F22                     
  4084                           ; BSR set to: 5
  4085                           ;Labs/Lab10_EEPROM/EEPROM.c: 87:         labState = 0;
  4086  001F22  0E00               	movlw	0
  4087  001F24  6E5E               	movwf	_labState^(0+1280),c
  4088  001F26                     l347:
  4089                           
  4090                           ; BSR set to: 5
  4091  001F26  0012               	return		;funcret
  4092  001F28                     __end_of_EEPROM:
  4093                           	callstack 0
  4094                           
  4095 ;; *************** function _DATAEE_WriteByte *****************
  4096 ;; Defined at:
  4097 ;;		line 231 in file "mcc_generated_files/memory.c"
  4098 ;; Parameters:    Size  Location     Type
  4099 ;;  bAdd            2    1[COMRAM] unsigned short 
  4100 ;;  bData           1    3[COMRAM] unsigned char 
  4101 ;; Auto vars:     Size  Location     Type
  4102 ;;  GIEBitValue     1    4[COMRAM] unsigned char 
  4103 ;; Return value:  Size  Location     Type
  4104 ;;                  1    wreg      void 
  4105 ;; Registers used:
  4106 ;;		wreg, status,2
  4107 ;; Tracked objects:
  4108 ;;		On entry : 0/0
  4109 ;;		On exit  : 0/0
  4110 ;;		Unchanged: 0/0
  4111 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4112 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;Total ram usage:        4 bytes
  4117 ;; Hardware stack levels used:    1
  4118 ;; Hardware stack levels required when called:    3
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_EEPROM
  4123 ;; This function uses a non-reentrant model
  4124 ;;
  4125                           
  4126                           	psect	text38
  4127  0028B6                     __ptext38:
  4128                           	callstack 0
  4129  0028B6                     _DATAEE_WriteByte:
  4130                           	callstack 123
  4131  0028B6                     
  4132                           ;mcc_generated_files/memory.c: 231: void DATAEE_WriteByte(uint16_t bAdd, uint8_t bData);
      +                          mcc_generated_files/memory.c: 232: {;mcc_generated_files/memory.c: 233:     uint8_t GIEB
      +                          itValue = INTCON0bits.GIE;
  4133  0028B6  0E00               	movlw	0
  4134  0028B8  BED6               	btfsc	214,7,c	;volatile
  4135  0028BA  0E01               	movlw	1
  4136  0028BC  6E05               	movwf	DATAEE_WriteByte@GIEBitValue^(0+1280),c
  4137  0028BE                     
  4138                           ;mcc_generated_files/memory.c: 236:     NVMADRU = 0x38;
  4139  0028BE  0E38               	movlw	56
  4140  0028C0  0100               	movlb	0	; () banked
  4141  0028C2  6F45               	movwf	69,b	;volatile
  4142  0028C4                     
  4143                           ; BSR set to: 0
  4144                           ;mcc_generated_files/memory.c: 237:     NVMADRH = (uint8_t) ((bAdd & 0xFF00) >> 8);
  4145  0028C4  5003               	movf	(DATAEE_WriteByte@bAdd+1)^(0+1280),w,c
  4146  0028C6  6F44               	movwf	68,b	;volatile
  4147  0028C8                     
  4148                           ; BSR set to: 0
  4149                           ;mcc_generated_files/memory.c: 238:     NVMADRL = (uint8_t) (bAdd & 0x00FF);
  4150  0028C8  0061  F408  F043   	movff	DATAEE_WriteByte@bAdd,67	;volatile
  4151  0028CE                     
  4152                           ; BSR set to: 0
  4153                           ;mcc_generated_files/memory.c: 241:     NVMDATL = bData;
  4154  0028CE  0061  F410  F046   	movff	DATAEE_WriteByte@bData,70	;volatile
  4155  0028D4                     
  4156                           ; BSR set to: 0
  4157                           ;mcc_generated_files/memory.c: 244:     NVMCON1bits.NVMCMD = 0b011;
  4158  0028D4  5141               	movf	65,w,b	;volsfr
  4159  0028D6  0BF8               	andlw	-8
  4160  0028D8  0903               	iorlw	3
  4161  0028DA  6F41               	movwf	65,b	;volsfr
  4162  0028DC                     
  4163                           ; BSR set to: 0
  4164                           ;mcc_generated_files/memory.c: 247:     INTCON0bits.GIE = 0;
  4165  0028DC  9ED6               	bcf	214,7,c	;volatile
  4166  0028DE                     
  4167                           ; BSR set to: 0
  4168                           ;mcc_generated_files/memory.c: 250:     NVMLOCK = 0x55;
  4169  0028DE  0E55               	movlw	85
  4170  0028E0  6F42               	movwf	66,b	;volatile
  4171  0028E2                     
  4172                           ; BSR set to: 0
  4173                           ;mcc_generated_files/memory.c: 251:     NVMLOCK = 0xAA;
  4174  0028E2  0EAA               	movlw	170
  4175  0028E4  6F42               	movwf	66,b	;volatile
  4176  0028E6                     
  4177                           ; BSR set to: 0
  4178                           ;mcc_generated_files/memory.c: 254:     NVMCON0bits.GO = 1;
  4179  0028E6  8140               	bsf	64,0,b	;volatile
  4180  0028E8                     l670:
  4181                           
  4182                           ; BSR set to: 0
  4183  0028E8  B140               	btfsc	64,0,b	;volatile
  4184  0028EA  EF79  F014         	goto	u1831
  4185  0028EE  EF7B  F014         	goto	u1830
  4186  0028F2                     u1831:
  4187  0028F2  EF74  F014         	goto	l670
  4188  0028F6                     u1830:
  4189  0028F6                     
  4190                           ; BSR set to: 0
  4191                           ;mcc_generated_files/memory.c: 258:     INTCON0bits.GIE = GIEBitValue;
  4192  0028F6  B005               	btfsc	DATAEE_WriteByte@GIEBitValue^(0+1280),0,c
  4193  0028F8  D002               	bra	u1845
  4194  0028FA  9ED6               	bcf	214,7,c	;volatile
  4195  0028FC  D001               	bra	u1846
  4196  0028FE                     u1845:
  4197  0028FE  8ED6               	bsf	214,7,c	;volatile
  4198  002900                     u1846:
  4199  002900                     
  4200                           ;mcc_generated_files/memory.c: 261:     NVMCON1bits.NVMCMD = 0b000;
  4201  002900  0EF8               	movlw	-8
  4202  002902  0100               	movlb	0	; () banked
  4203  002904  1741               	andwf	65,f,b	;volsfr
  4204  002906                     
  4205                           ; BSR set to: 0
  4206  002906  0012               	return		;funcret
  4207  002908                     __end_of_DATAEE_WriteByte:
  4208                           	callstack 0
  4209                           
  4210 ;; *************** function _DATAEE_ReadByte *****************
  4211 ;; Defined at:
  4212 ;;		line 264 in file "mcc_generated_files/memory.c"
  4213 ;; Parameters:    Size  Location     Type
  4214 ;;  bAdd            2    1[COMRAM] unsigned short 
  4215 ;; Auto vars:     Size  Location     Type
  4216 ;;		None
  4217 ;; Return value:  Size  Location     Type
  4218 ;;                  1    wreg      unsigned char 
  4219 ;; Registers used:
  4220 ;;		wreg, status,2
  4221 ;; Tracked objects:
  4222 ;;		On entry : 0/0
  4223 ;;		On exit  : 0/0
  4224 ;;		Unchanged: 0/0
  4225 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4226 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4229 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4230 ;;Total ram usage:        2 bytes
  4231 ;; Hardware stack levels used:    1
  4232 ;; Hardware stack levels required when called:    3
  4233 ;; This function calls:
  4234 ;;		Nothing
  4235 ;; This function is called by:
  4236 ;;		_EEPROM
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text39
  4241  002C7A                     __ptext39:
  4242                           	callstack 0
  4243  002C7A                     _DATAEE_ReadByte:
  4244                           	callstack 123
  4245  002C7A                     
  4246                           ;mcc_generated_files/memory.c: 264: uint8_t DATAEE_ReadByte(uint16_t bAdd);mcc_generated
      +                          _files/memory.c: 265: {;mcc_generated_files/memory.c: 267:     NVMADRU = 0x38;
  4247  002C7A  0E38               	movlw	56
  4248  002C7C  0100               	movlb	0	; () banked
  4249  002C7E  6F45               	movwf	69,b	;volatile
  4250                           
  4251                           ;mcc_generated_files/memory.c: 268:     NVMADRH = (uint8_t) ((bAdd & 0xFF00) >> 8);
  4252  002C80  5003               	movf	(DATAEE_ReadByte@bAdd+1)^(0+1280),w,c
  4253  002C82  6F44               	movwf	68,b	;volatile
  4254  002C84                     
  4255                           ; BSR set to: 0
  4256                           ;mcc_generated_files/memory.c: 269:     NVMADRL = (uint8_t) (bAdd & 0x00FF);
  4257  002C84  0061  F408  F043   	movff	DATAEE_ReadByte@bAdd,67	;volatile
  4258                           
  4259                           ;mcc_generated_files/memory.c: 272:     NVMCON1bits.NVMCMD = 0b000;
  4260  002C8A  0EF8               	movlw	-8
  4261  002C8C  1741               	andwf	65,f,b	;volsfr
  4262  002C8E                     
  4263                           ; BSR set to: 0
  4264                           ;mcc_generated_files/memory.c: 273:     NVMCON0bits.GO = 1;
  4265  002C8E  8140               	bsf	64,0,b	;volatile
  4266                           
  4267                           ;mcc_generated_files/memory.c: 275:     return NVMDATL;
  4268  002C90  5146               	movf	70,w,b	;volatile
  4269  002C92                     
  4270                           ; BSR set to: 0
  4271  002C92  0012               	return		;funcret
  4272  002C94                     __end_of_DATAEE_ReadByte:
  4273                           	callstack 0
  4274                           
  4275 ;; *************** function _Blink *****************
  4276 ;; Defined at:
  4277 ;;		line 60 in file "Labs/Lab02_Blink/Blink.c"
  4278 ;; Parameters:    Size  Location     Type
  4279 ;;		None
  4280 ;; Auto vars:     Size  Location     Type
  4281 ;;		None
  4282 ;; Return value:  Size  Location     Type
  4283 ;;                  1    wreg      void 
  4284 ;; Registers used:
  4285 ;;		wreg, status,2, status,0, cstack
  4286 ;; Tracked objects:
  4287 ;;		On entry : 0/0
  4288 ;;		On exit  : 0/0
  4289 ;;		Unchanged: 0/0
  4290 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4293 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4294 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4295 ;;Total ram usage:        1 bytes
  4296 ;; Hardware stack levels used:    1
  4297 ;; Hardware stack levels required when called:    5
  4298 ;; This function calls:
  4299 ;;		_TMR1_HasOverflowOccured
  4300 ;;		_TMR1_Reload
  4301 ;;		_TMR1_StartTimer
  4302 ;;		_TMR1_StopTimer
  4303 ;; This function is called by:
  4304 ;;		_main
  4305 ;; This function uses a non-reentrant model
  4306 ;;
  4307                           
  4308                           	psect	text40
  4309  0023AC                     __ptext40:
  4310                           	callstack 0
  4311  0023AC                     _Blink:
  4312                           	callstack 122
  4313  0023AC                     
  4314                           ;Labs/Lab02_Blink/Blink.c: 61:     if (labState == 0) {
  4315  0023AC  505E               	movf	_labState^(0+1280),w,c
  4316  0023AE  A4D8               	btfss	status,2,c
  4317  0023B0  EFDC  F011         	goto	u1881
  4318  0023B4  EFDE  F011         	goto	u1880
  4319  0023B8                     u1881:
  4320  0023B8  EFE5  F011         	goto	l3604
  4321  0023BC                     u1880:
  4322  0023BC  0E00               	movlw	0
  4323  0023BE  6EBE               	movwf	190,c	;volatile
  4324  0023C0  9AC0               	bcf	192,5,c	;volatile
  4325  0023C2                     
  4326                           ;Labs/Lab02_Blink/Blink.c: 63:         TMR1_StartTimer();
  4327  0023C2  ECA6  F016         	call	_TMR1_StartTimer	;wreg free
  4328  0023C6                     
  4329                           ;Labs/Lab02_Blink/Blink.c: 65:         labState = 1;
  4330  0023C6  0E01               	movlw	1
  4331  0023C8  6E5E               	movwf	_labState^(0+1280),c
  4332  0023CA                     l3604:
  4333                           
  4334                           ;Labs/Lab02_Blink/Blink.c: 68:     if (labState == 1) {
  4335  0023CA  045E               	decf	_labState^(0+1280),w,c
  4336  0023CC  A4D8               	btfss	status,2,c
  4337  0023CE  EFEB  F011         	goto	u1891
  4338  0023D2  EFED  F011         	goto	u1890
  4339  0023D6                     u1891:
  4340  0023D6  EF19  F012         	goto	l3620
  4341  0023DA                     u1890:
  4342  0023DA                     l3608:
  4343  0023DA  EC4A  F016         	call	_TMR1_HasOverflowOccured	;wreg free
  4344  0023DE  0900               	iorlw	0
  4345  0023E0  B4D8               	btfsc	status,2,c
  4346  0023E2  EFF5  F011         	goto	u1901
  4347  0023E6  EFF7  F011         	goto	u1900
  4348  0023EA                     u1901:
  4349  0023EA  EFED  F011         	goto	l3608
  4350  0023EE                     u1900:
  4351  0023EE                     
  4352                           ;Labs/Lab02_Blink/Blink.c: 71:         TMR1IF = 0;
  4353  0023EE  98B6               	bcf	1206,4,c	;volatile
  4354  0023F0                     
  4355                           ;Labs/Lab02_Blink/Blink.c: 72:         TMR1_Reload();
  4356  0023F0  EC54  F016         	call	_TMR1_Reload	;wreg free
  4357  0023F4                     
  4358                           ;Labs/Lab02_Blink/Blink.c: 73:         flagCounter++;
  4359  0023F4  0105               	movlb	5	; () banked
  4360  0023F6  2B73               	incf	_flagCounter& (0+255),f,b
  4361  0023F8                     
  4362                           ; BSR set to: 5
  4363                           ;Labs/Lab02_Blink/Blink.c: 75:         if (flagCounter == 3) {
  4364  0023F8  0E03               	movlw	3
  4365  0023FA  1973               	xorwf	_flagCounter& (0+255),w,b
  4366  0023FC  A4D8               	btfss	status,2,c
  4367  0023FE  EF03  F012         	goto	u1911
  4368  002402  EF05  F012         	goto	u1910
  4369  002406                     u1911:
  4370  002406  EF19  F012         	goto	l3620
  4371  00240A                     u1910:
  4372  00240A                     
  4373                           ; BSR set to: 5
  4374  00240A  BABE               	btfsc	190,5,c	;volatile
  4375  00240C  EF0A  F012         	goto	u1921
  4376  002410  EF0D  F012         	goto	u1920
  4377  002414                     u1921:
  4378  002414  0E01               	movlw	1
  4379  002416  EF0E  F012         	goto	u1926
  4380  00241A                     u1920:
  4381  00241A  0E00               	movlw	0
  4382  00241C                     u1926:
  4383  00241C  0AFF               	xorlw	255
  4384  00241E  6E04               	movwf	??_Blink^(0+1280),c
  4385  002420  3A04               	swapf	??_Blink^(0+1280),f,c
  4386  002422  4604               	rlncf	??_Blink^(0+1280),f,c
  4387  002424  50BE               	movf	190,w,c	;volatile
  4388  002426  1804               	xorwf	??_Blink^(0+1280),w,c
  4389  002428  0BDF               	andlw	-33
  4390  00242A  1804               	xorwf	??_Blink^(0+1280),w,c
  4391  00242C  6EBE               	movwf	190,c	;volatile
  4392  00242E                     
  4393                           ; BSR set to: 5
  4394                           ;Labs/Lab02_Blink/Blink.c: 77:             flagCounter = 0;
  4395  00242E  0E00               	movlw	0
  4396  002430  6F73               	movwf	_flagCounter& (0+255),b
  4397  002432                     l3620:
  4398                           
  4399                           ;Labs/Lab02_Blink/Blink.c: 81:     if (switchEvent) {
  4400  002432  0105               	movlb	5	; () banked
  4401  002434  5175               	movf	_switchEvent& (0+255),w,b
  4402  002436  B4D8               	btfsc	status,2,c
  4403  002438  EF20  F012         	goto	u1931
  4404  00243C  EF22  F012         	goto	u1930
  4405  002440                     u1931:
  4406  002440  EF26  F012         	goto	l64
  4407  002444                     u1930:
  4408  002444                     
  4409                           ; BSR set to: 5
  4410                           ;Labs/Lab02_Blink/Blink.c: 82:         TMR1_StopTimer();
  4411  002444  ECA3  F016         	call	_TMR1_StopTimer	;wreg free
  4412  002448                     
  4413                           ;Labs/Lab02_Blink/Blink.c: 83:         labState = 0;
  4414  002448  0E00               	movlw	0
  4415  00244A  6E5E               	movwf	_labState^(0+1280),c
  4416  00244C                     l64:
  4417  00244C  0012               	return		;funcret
  4418  00244E                     __end_of_Blink:
  4419                           	callstack 0
  4420                           
  4421 ;; *************** function _TMR1_StopTimer *****************
  4422 ;; Defined at:
  4423 ;;		line 98 in file "mcc_generated_files/tmr1.c"
  4424 ;; Parameters:    Size  Location     Type
  4425 ;;		None
  4426 ;; Auto vars:     Size  Location     Type
  4427 ;;		None
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  1    wreg      void 
  4430 ;; Registers used:
  4431 ;;		None
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4441 ;;Total ram usage:        0 bytes
  4442 ;; Hardware stack levels used:    1
  4443 ;; Hardware stack levels required when called:    3
  4444 ;; This function calls:
  4445 ;;		Nothing
  4446 ;; This function is called by:
  4447 ;;		_Blink
  4448 ;;		_Timer1
  4449 ;; This function uses a non-reentrant model
  4450 ;;
  4451                           
  4452                           	psect	text41
  4453  002D46                     __ptext41:
  4454                           	callstack 0
  4455  002D46                     _TMR1_StopTimer:
  4456                           	callstack 123
  4457  002D46                     
  4458                           ;mcc_generated_files/tmr1.c: 101:     T1CONbits.TMR1ON = 0;
  4459  002D46  0103               	movlb	3	; () banked
  4460  002D48  9114               	bcf	20,0,b	;volatile
  4461  002D4A                     
  4462                           ; BSR set to: 3
  4463  002D4A  0012               	return		;funcret
  4464  002D4C                     __end_of_TMR1_StopTimer:
  4465                           	callstack 0
  4466                           
  4467 ;; *************** function _TMR1_StartTimer *****************
  4468 ;; Defined at:
  4469 ;;		line 92 in file "mcc_generated_files/tmr1.c"
  4470 ;; Parameters:    Size  Location     Type
  4471 ;;		None
  4472 ;; Auto vars:     Size  Location     Type
  4473 ;;		None
  4474 ;; Return value:  Size  Location     Type
  4475 ;;                  1    wreg      void 
  4476 ;; Registers used:
  4477 ;;		None
  4478 ;; Tracked objects:
  4479 ;;		On entry : 0/0
  4480 ;;		On exit  : 0/0
  4481 ;;		Unchanged: 0/0
  4482 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4487 ;;Total ram usage:        0 bytes
  4488 ;; Hardware stack levels used:    1
  4489 ;; Hardware stack levels required when called:    3
  4490 ;; This function calls:
  4491 ;;		Nothing
  4492 ;; This function is called by:
  4493 ;;		_Blink
  4494 ;;		_Timer1
  4495 ;; This function uses a non-reentrant model
  4496 ;;
  4497                           
  4498                           	psect	text42
  4499  002D4C                     __ptext42:
  4500                           	callstack 0
  4501  002D4C                     _TMR1_StartTimer:
  4502                           	callstack 123
  4503  002D4C                     
  4504                           ;mcc_generated_files/tmr1.c: 95:     T1CONbits.TMR1ON = 1;
  4505  002D4C  0103               	movlb	3	; () banked
  4506  002D4E  8114               	bsf	20,0,b	;volatile
  4507  002D50                     
  4508                           ; BSR set to: 3
  4509  002D50  0012               	return		;funcret
  4510  002D52                     __end_of_TMR1_StartTimer:
  4511                           	callstack 0
  4512                           
  4513 ;; *************** function _TMR1_Reload *****************
  4514 ;; Defined at:
  4515 ;;		line 142 in file "mcc_generated_files/tmr1.c"
  4516 ;; Parameters:    Size  Location     Type
  4517 ;;		None
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;		None
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  1    wreg      void 
  4522 ;; Registers used:
  4523 ;;		wreg, status,2, cstack
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4532 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4533 ;;Total ram usage:        0 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; Hardware stack levels required when called:    4
  4536 ;; This function calls:
  4537 ;;		_TMR1_WriteTimer
  4538 ;; This function is called by:
  4539 ;;		_Blink
  4540 ;;		_Timer1
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text43
  4545  002CA8                     __ptext43:
  4546                           	callstack 0
  4547  002CA8                     _TMR1_Reload:
  4548                           	callstack 122
  4549  002CA8                     
  4550                           ;mcc_generated_files/tmr1.c: 144:     TMR1_WriteTimer(timer1ReloadVal);
  4551  002CA8  C5A3  F502         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  4552  002CAC  C5A4  F503         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  4553  002CB0  EC95  F015         	call	_TMR1_WriteTimer	;wreg free
  4554  002CB4  0012               	return		;funcret
  4555  002CB6                     __end_of_TMR1_Reload:
  4556                           	callstack 0
  4557                           
  4558 ;; *************** function _TMR1_WriteTimer *****************
  4559 ;; Defined at:
  4560 ;;		line 120 in file "mcc_generated_files/tmr1.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;  timerVal        2    1[COMRAM] unsigned short 
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;		None
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4577 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4578 ;;Total ram usage:        2 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    3
  4581 ;; This function calls:
  4582 ;;		Nothing
  4583 ;; This function is called by:
  4584 ;;		_TMR1_Reload
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text44
  4589  002B2A                     __ptext44:
  4590                           	callstack 0
  4591  002B2A                     _TMR1_WriteTimer:
  4592                           	callstack 122
  4593  002B2A                     
  4594                           ;mcc_generated_files/tmr1.c: 120: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 121: {;mcc_generated_files/tmr1.c: 122:     if (T1CONbits.NOT_SYNC == 1)
  4595  002B2A  0103               	movlb	3	; () banked
  4596  002B2C  A514               	btfss	20,2,b	;volatile
  4597  002B2E  EF9B  F015         	goto	u1781
  4598  002B32  EF9D  F015         	goto	u1780
  4599  002B36                     u1781:
  4600  002B36  EFA6  F015         	goto	l3396
  4601  002B3A                     u1780:
  4602  002B3A                     
  4603                           ; BSR set to: 3
  4604                           ;mcc_generated_files/tmr1.c: 123:     {;mcc_generated_files/tmr1.c: 125:         T1CONbi
      +                          ts.TMR1ON = 0;
  4605  002B3A  9114               	bcf	20,0,b	;volatile
  4606  002B3C                     
  4607                           ; BSR set to: 3
  4608                           ;mcc_generated_files/tmr1.c: 128:         TMR1H = (timerVal >> 8);
  4609  002B3C  5003               	movf	(TMR1_WriteTimer@timerVal+1)^(0+1280),w,c
  4610  002B3E  6F13               	movwf	19,b	;volatile
  4611  002B40                     
  4612                           ; BSR set to: 3
  4613                           ;mcc_generated_files/tmr1.c: 129:         TMR1L = timerVal;
  4614  002B40  0061  F408  F312   	movff	TMR1_WriteTimer@timerVal,786	;volatile
  4615  002B46                     
  4616                           ; BSR set to: 3
  4617                           ;mcc_generated_files/tmr1.c: 132:         T1CONbits.TMR1ON =1;
  4618  002B46  8114               	bsf	20,0,b	;volatile
  4619                           
  4620                           ;mcc_generated_files/tmr1.c: 133:     }
  4621  002B48  EFAB  F015         	goto	l592
  4622  002B4C                     l3396:
  4623                           
  4624                           ; BSR set to: 3
  4625                           ;mcc_generated_files/tmr1.c: 135:     {;mcc_generated_files/tmr1.c: 137:         TMR1H =
      +                           (timerVal >> 8);
  4626  002B4C  5003               	movf	(TMR1_WriteTimer@timerVal+1)^(0+1280),w,c
  4627  002B4E  6F13               	movwf	19,b	;volatile
  4628  002B50                     
  4629                           ; BSR set to: 3
  4630                           ;mcc_generated_files/tmr1.c: 138:         TMR1L = timerVal;
  4631  002B50  0061  F408  F312   	movff	TMR1_WriteTimer@timerVal,786	;volatile
  4632  002B56                     l592:
  4633                           
  4634                           ; BSR set to: 3
  4635  002B56  0012               	return		;funcret
  4636  002B58                     __end_of_TMR1_WriteTimer:
  4637                           	callstack 0
  4638                           
  4639 ;; *************** function _TMR1_HasOverflowOccured *****************
  4640 ;; Defined at:
  4641 ;;		line 157 in file "mcc_generated_files/tmr1.c"
  4642 ;; Parameters:    Size  Location     Type
  4643 ;;		None
  4644 ;; Auto vars:     Size  Location     Type
  4645 ;;		None
  4646 ;; Return value:  Size  Location     Type
  4647 ;;                  1    wreg      _Bool 
  4648 ;; Registers used:
  4649 ;;		wreg
  4650 ;; Tracked objects:
  4651 ;;		On entry : 0/0
  4652 ;;		On exit  : 0/0
  4653 ;;		Unchanged: 0/0
  4654 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;Total ram usage:        0 bytes
  4660 ;; Hardware stack levels used:    1
  4661 ;; Hardware stack levels required when called:    3
  4662 ;; This function calls:
  4663 ;;		Nothing
  4664 ;; This function is called by:
  4665 ;;		_Blink
  4666 ;;		_Timer1
  4667 ;; This function uses a non-reentrant model
  4668 ;;
  4669                           
  4670                           	psect	text45
  4671  002C94                     __ptext45:
  4672                           	callstack 0
  4673  002C94                     _TMR1_HasOverflowOccured:
  4674                           	callstack 123
  4675  002C94                     
  4676                           ;mcc_generated_files/tmr1.c: 160:     return(PIR3bits.TMR1IF);
  4677  002C94  B8B6               	btfsc	182,4,c	;volatile
  4678  002C96  EF4F  F016         	goto	u1801
  4679  002C9A  EF52  F016         	goto	u1800
  4680  002C9E                     u1801:
  4681  002C9E  0E01               	movlw	1
  4682  002CA0  EF53  F016         	goto	u1806
  4683  002CA4                     u1800:
  4684  002CA4  0E00               	movlw	0
  4685  002CA6                     u1806:
  4686  002CA6  0012               	return		;funcret
  4687  002CA8                     __end_of_TMR1_HasOverflowOccured:
  4688                           	callstack 0
  4689                           
  4690 ;; *************** function _ADC *****************
  4691 ;; Defined at:
  4692 ;;		line 55 in file "Labs/Lab04_AnalogToDigitalConversion/ADC.c"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;		None
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;		None
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  1    wreg      void 
  4699 ;; Registers used:
  4700 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4707 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4708 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4709 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4710 ;;Total ram usage:        3 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:   12
  4713 ;; This function calls:
  4714 ;;		_ADCC_GetSingleConversion
  4715 ;;		_printf
  4716 ;; This function is called by:
  4717 ;;		_main
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text46
  4722  001F28                     __ptext46:
  4723                           	callstack 0
  4724  001F28                     _ADC:
  4725                           	callstack 115
  4726  001F28                     
  4727                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 57:     if (labState == 0) {
  4728  001F28  505E               	movf	_labState^(0+1280),w,c
  4729  001F2A  A4D8               	btfss	status,2,c
  4730  001F2C  EF9A  F00F         	goto	u2541
  4731  001F30  EF9C  F00F         	goto	u2540
  4732  001F34                     u2541:
  4733  001F34  EFA1  F00F         	goto	l4016
  4734  001F38                     u2540:
  4735  001F38  0E00               	movlw	0
  4736  001F3A  6EBE               	movwf	190,c	;volatile
  4737  001F3C  9AC0               	bcf	192,5,c	;volatile
  4738  001F3E                     
  4739                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 60:         labState = 1;
  4740  001F3E  0E01               	movlw	1
  4741  001F40  6E5E               	movwf	_labState^(0+1280),c
  4742  001F42                     l4016:
  4743                           
  4744                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 63:     if (labState == 1) {
  4745  001F42  045E               	decf	_labState^(0+1280),w,c
  4746  001F44  A4D8               	btfss	status,2,c
  4747  001F46  EFA7  F00F         	goto	u2551
  4748  001F4A  EFA9  F00F         	goto	u2550
  4749  001F4E                     u2551:
  4750  001F4E  EF06  F010         	goto	l4030
  4751  001F52                     u2550:
  4752  001F52                     
  4753                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 65:         adcResult = ADCC_GetSingleConve
      +                          rsion(POT_CHANNEL) >> 12;
  4754  001F52  0E10               	movlw	16
  4755  001F54  EC49  F015         	call	_ADCC_GetSingleConversion
  4756  001F58  0E0C               	movlw	12
  4757  001F5A  6E5B               	movwf	??_ADC^(0+1280),c
  4758  001F5C                     u2565:
  4759  001F5C  90D8               	bcf	status,0,c
  4760  001F5E  3203               	rrcf	(?_ADCC_GetSingleConversion+1)^(0+1280),f,c
  4761  001F60  3202               	rrcf	?_ADCC_GetSingleConversion^(0+1280),f,c
  4762  001F62  2E5B               	decfsz	??_ADC^(0+1280),f,c
  4763  001F64  EFAE  F00F         	goto	u2565
  4764  001F68  5002               	movf	?_ADCC_GetSingleConversion^(0+1280),w,c
  4765  001F6A  0105               	movlb	5	; () banked
  4766  001F6C  6F71               	movwf	_adcResult& (0+255),b
  4767  001F6E                     
  4768                           ; BSR set to: 5
  4769                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 68:         printf("ADC Result: %d\n\r", AD
      +                          RES >> 4);
  4770  001F6E  0E01               	movlw	low STR_1
  4771  001F70  6FA7               	movwf	printf@fmt& (0+255),b
  4772  001F72  0E15               	movlw	high STR_1
  4773  001F74  6FA8               	movwf	(printf@fmt+1)& (0+255),b
  4774  001F76  0060 FFA8  F55B    	movff	1002,??_ADC	;volatile
  4775  001F7C  0060 FFAC  F55C    	movff	1003,??_ADC+1	;volatile
  4776  001F82  0E04               	movlw	4
  4777  001F84  6E5D               	movwf	(??_ADC+2)^(0+1280),c
  4778  001F86                     u2575:
  4779  001F86  90D8               	bcf	status,0,c
  4780  001F88  325C               	rrcf	(??_ADC+1)^(0+1280),f,c
  4781  001F8A  325B               	rrcf	??_ADC^(0+1280),f,c
  4782  001F8C  2E5D               	decfsz	(??_ADC+2)^(0+1280),f,c
  4783  001F8E  EFC3  F00F         	goto	u2575
  4784  001F92  C55B  F5A9         	movff	??_ADC,?_printf+2
  4785  001F96  C55C  F5AA         	movff	??_ADC+1,?_printf+3
  4786  001F9A  ECAC  F015         	call	_printf	;wreg free
  4787  001F9E                     
  4788                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 71:         LATAbits.LATA5 = adcResult & 1;
  4789  001F9E  C571  F55B         	movff	_adcResult,??_ADC
  4790  001FA2  0E01               	movlw	1
  4791  001FA4  165B               	andwf	??_ADC^(0+1280),f,c
  4792  001FA6  3A5B               	swapf	??_ADC^(0+1280),f,c
  4793  001FA8  465B               	rlncf	??_ADC^(0+1280),f,c
  4794  001FAA  50BE               	movf	190,w,c	;volatile
  4795  001FAC  185B               	xorwf	??_ADC^(0+1280),w,c
  4796  001FAE  0BDF               	andlw	-33
  4797  001FB0  185B               	xorwf	??_ADC^(0+1280),w,c
  4798  001FB2  6EBE               	movwf	190,c	;volatile
  4799  001FB4                     
  4800                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 72:         LATAbits.LATA1 = (adcResult & 2
      +                          ) >> 1;
  4801  001FB4  C571  F55B         	movff	_adcResult,??_ADC
  4802  001FB8  90D8               	bcf	status,0,c
  4803  001FBA  325B               	rrcf	??_ADC^(0+1280),f,c
  4804  001FBC  0E01               	movlw	1
  4805  001FBE  165B               	andwf	??_ADC^(0+1280),f,c
  4806  001FC0  465B               	rlncf	??_ADC^(0+1280),f,c
  4807  001FC2  50BE               	movf	190,w,c	;volatile
  4808  001FC4  185B               	xorwf	??_ADC^(0+1280),w,c
  4809  001FC6  0BFD               	andlw	-3
  4810  001FC8  185B               	xorwf	??_ADC^(0+1280),w,c
  4811  001FCA  6EBE               	movwf	190,c	;volatile
  4812  001FCC                     
  4813                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 73:         LATAbits.LATA2 = (adcResult & 4
      +                          ) >> 2;
  4814  001FCC  C571  F55B         	movff	_adcResult,??_ADC
  4815  001FD0  90D8               	bcf	status,0,c
  4816  001FD2  325B               	rrcf	??_ADC^(0+1280),f,c
  4817  001FD4  90D8               	bcf	status,0,c
  4818  001FD6  325B               	rrcf	??_ADC^(0+1280),f,c
  4819  001FD8  0E01               	movlw	1
  4820  001FDA  165B               	andwf	??_ADC^(0+1280),f,c
  4821  001FDC  465B               	rlncf	??_ADC^(0+1280),f,c
  4822  001FDE  465B               	rlncf	??_ADC^(0+1280),f,c
  4823  001FE0  50BE               	movf	190,w,c	;volatile
  4824  001FE2  185B               	xorwf	??_ADC^(0+1280),w,c
  4825  001FE4  0BFB               	andlw	-5
  4826  001FE6  185B               	xorwf	??_ADC^(0+1280),w,c
  4827  001FE8  6EBE               	movwf	190,c	;volatile
  4828  001FEA                     
  4829                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 74:         LATCbits.LATC5 = (adcResult & 8
      +                          ) >> 3;
  4830  001FEA  C571  F55B         	movff	_adcResult,??_ADC
  4831  001FEE  90D8               	bcf	status,0,c
  4832  001FF0  325B               	rrcf	??_ADC^(0+1280),f,c
  4833  001FF2  90D8               	bcf	status,0,c
  4834  001FF4  325B               	rrcf	??_ADC^(0+1280),f,c
  4835  001FF6  90D8               	bcf	status,0,c
  4836  001FF8  325B               	rrcf	??_ADC^(0+1280),f,c
  4837  001FFA  0E01               	movlw	1
  4838  001FFC  165B               	andwf	??_ADC^(0+1280),f,c
  4839  001FFE  3A5B               	swapf	??_ADC^(0+1280),f,c
  4840  002000  465B               	rlncf	??_ADC^(0+1280),f,c
  4841  002002  50C0               	movf	192,w,c	;volatile
  4842  002004  185B               	xorwf	??_ADC^(0+1280),w,c
  4843  002006  0BDF               	andlw	-33
  4844  002008  185B               	xorwf	??_ADC^(0+1280),w,c
  4845  00200A  6EC0               	movwf	192,c	;volatile
  4846  00200C                     l4030:
  4847                           
  4848                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 77:     if (switchEvent) {
  4849  00200C  0105               	movlb	5	; () banked
  4850  00200E  5175               	movf	_switchEvent& (0+255),w,b
  4851  002010  B4D8               	btfsc	status,2,c
  4852  002012  EF0D  F010         	goto	u2581
  4853  002016  EF0F  F010         	goto	u2580
  4854  00201A                     u2581:
  4855  00201A  EF11  F010         	goto	l123
  4856  00201E                     u2580:
  4857  00201E                     
  4858                           ; BSR set to: 5
  4859                           ;Labs/Lab04_AnalogToDigitalConversion/ADC.c: 78:         labState = 0;
  4860  00201E  0E00               	movlw	0
  4861  002020  6E5E               	movwf	_labState^(0+1280),c
  4862  002022                     l123:
  4863                           
  4864                           ; BSR set to: 5
  4865  002022  0012               	return		;funcret
  4866  002024                     __end_of_ADC:
  4867                           	callstack 0
  4868                           
  4869 ;; *************** function _printf *****************
  4870 ;; Defined at:
  4871 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\printf.c"
  4872 ;; Parameters:    Size  Location     Type
  4873 ;;  fmt             2    0[BANK5 ] PTR const unsigned char 
  4874 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  4875 ;; Auto vars:     Size  Location     Type
  4876 ;;  ap              2    6[BANK5 ] PTR void [1]
  4877 ;;		 -> ?_printf(2), 
  4878 ;;  ret             2    0        int 
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  2    0[BANK5 ] int 
  4881 ;; Registers used:
  4882 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4888 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4889 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4892 ;;Total ram usage:        8 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:   11
  4895 ;; This function calls:
  4896 ;;		_vfprintf
  4897 ;; This function is called by:
  4898 ;;		_ADC
  4899 ;;		_VSR
  4900 ;;		_PWM
  4901 ;;		_EEPROM
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	text47
  4906  002B58                     __ptext47:
  4907                           	callstack 0
  4908  002B58                     _printf:
  4909                           	callstack 115
  4910  002B58  0EA9               	movlw	low (?_printf+2)
  4911  002B5A  0105               	movlb	5	; () banked
  4912  002B5C  6FAD               	movwf	printf@ap& (0+255),b
  4913  002B5E  0E05               	movlw	high (?_printf+2)
  4914  002B60  6FAE               	movwf	(printf@ap+1)& (0+255),b
  4915  002B62                     
  4916                           ; BSR set to: 5
  4917  002B62  0E00               	movlw	0
  4918  002B64  6E53               	movwf	vfprintf@fp^(0+1280),c
  4919  002B66  0E00               	movlw	0
  4920  002B68  6E54               	movwf	(vfprintf@fp+1)^(0+1280),c
  4921  002B6A  C5A7  F555         	movff	printf@fmt,vfprintf@fmt
  4922  002B6E  C5A8  F556         	movff	printf@fmt+1,vfprintf@fmt+1
  4923  002B72  0EAD               	movlw	low printf@ap
  4924  002B74  6E57               	movwf	vfprintf@ap^(0+1280),c
  4925  002B76  0E05               	movlw	high printf@ap
  4926  002B78  6E58               	movwf	(vfprintf@ap+1)^(0+1280),c
  4927  002B7A  ECA3  F013         	call	_vfprintf	;wreg free
  4928  002B7E  0012               	return		;funcret
  4929  002B80                     __end_of_printf:
  4930                           	callstack 0
  4931                           
  4932 ;; *************** function _vfprintf *****************
  4933 ;; Defined at:
  4934 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  fp              2   82[COMRAM] PTR struct _IO_FILE
  4937 ;;		 -> NULL(0), 
  4938 ;;  fmt             2   84[COMRAM] PTR const unsigned char 
  4939 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  4940 ;;  ap              2   86[COMRAM] PTR PTR void 
  4941 ;;		 -> printf@ap(2), 
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;  cfmt            2   88[COMRAM] PTR unsigned char 
  4944 ;;		 -> STR_4(17), STR_3(17), STR_2(17), STR_1(17), 
  4945 ;; Return value:  Size  Location     Type
  4946 ;;                  2   82[COMRAM] int 
  4947 ;; Registers used:
  4948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4949 ;; Tracked objects:
  4950 ;;		On entry : 0/0
  4951 ;;		On exit  : 0/0
  4952 ;;		Unchanged: 0/0
  4953 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  4954 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4955 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4957 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4958 ;;Total ram usage:        8 bytes
  4959 ;; Hardware stack levels used:    1
  4960 ;; Hardware stack levels required when called:   10
  4961 ;; This function calls:
  4962 ;;		_vfpfcnvrt
  4963 ;; This function is called by:
  4964 ;;		_printf
  4965 ;; This function uses a non-reentrant model
  4966 ;;
  4967                           
  4968                           	psect	text48
  4969  002746                     __ptext48:
  4970                           	callstack 0
  4971  002746                     _vfprintf:
  4972                           	callstack 115
  4973  002746                     
  4974                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  4975  002746  C555  F559         	movff	vfprintf@fmt,vfprintf@cfmt
  4976  00274A  C556  F55A         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  4977  00274E                     
  4978                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  4979  00274E  0E00               	movlw	0
  4980  002750  0105               	movlb	5	; () banked
  4981  002752  6F61               	movwf	(_nout+1)& (0+255),b
  4982  002754  0E00               	movlw	0
  4983  002756  6F60               	movwf	_nout& (0+255),b
  4984                           
  4985                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  4986  002758  EFC1  F013         	goto	l3422
  4987  00275C                     l3420:
  4988                           
  4989                           ; BSR set to: 5
  4990                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  4991  00275C  C553  F543         	movff	vfprintf@fp,vfpfcnvrt@fp
  4992  002760  C554  F544         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  4993  002764  0E59               	movlw	low vfprintf@cfmt
  4994  002766  6E45               	movwf	vfpfcnvrt@fmt^(0+1280),c
  4995  002768  0E05               	movlw	high vfprintf@cfmt
  4996  00276A  6E46               	movwf	(vfpfcnvrt@fmt+1)^(0+1280),c
  4997  00276C  C557  F547         	movff	vfprintf@ap,vfpfcnvrt@ap
  4998  002770  C558  F548         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  4999  002774  ECFC  F00B         	call	_vfpfcnvrt	;wreg free
  5000  002778  5043               	movf	?_vfpfcnvrt^(0+1280),w,c
  5001  00277A  0105               	movlb	5	; () banked
  5002  00277C  2760               	addwf	_nout& (0+255),f,b
  5003  00277E  5044               	movf	(?_vfpfcnvrt+1)^(0+1280),w,c
  5004  002780  2361               	addwfc	(_nout+1)& (0+255),f,b
  5005  002782                     l3422:
  5006                           
  5007                           ; BSR set to: 5
  5008                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  5009  002782  0061  F564  F4F6   	movff	vfprintf@cfmt,tblptrl
  5010  002788  0061  F568  F4F7   	movff	vfprintf@cfmt+1,tblptrh
  5011  00278E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5012  00278E  6AF8               	clrf	tblptru,c
  5013  002790                     	endif
  5014  002790                     	if	0	;tblptru may be non-zero
  5015  002790                     	endif
  5016  002790  0008               	tblrd		*
  5017  002792  50F5               	movf	tablat,w,c
  5018  002794  0900               	iorlw	0
  5019  002796  A4D8               	btfss	status,2,c
  5020  002798  EFD0  F013         	goto	u1791
  5021  00279C  EFD2  F013         	goto	u1790
  5022  0027A0                     u1791:
  5023  0027A0  EFAE  F013         	goto	l3420
  5024  0027A4                     u1790:
  5025  0027A4                     
  5026                           ; BSR set to: 5
  5027                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  5028  0027A4  C560  F553         	movff	_nout,?_vfprintf
  5029  0027A8  C561  F554         	movff	_nout+1,?_vfprintf+1
  5030  0027AC                     
  5031                           ; BSR set to: 5
  5032  0027AC  0012               	return		;funcret
  5033  0027AE                     __end_of_vfprintf:
  5034                           	callstack 0
  5035                           
  5036 ;; *************** function _vfpfcnvrt *****************
  5037 ;; Defined at:
  5038 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5039 ;; Parameters:    Size  Location     Type
  5040 ;;  fp              2   66[COMRAM] PTR struct _IO_FILE
  5041 ;;		 -> NULL(0), 
  5042 ;;  fmt             2   68[COMRAM] PTR PTR unsigned char 
  5043 ;;		 -> vfprintf@cfmt(2), 
  5044 ;;  ap              2   70[COMRAM] PTR PTR void 
  5045 ;;		 -> printf@ap(2), 
  5046 ;; Auto vars:     Size  Location     Type
  5047 ;;  ll              8   74[COMRAM] long long 
  5048 ;;  llu             8    0        unsigned long long 
  5049 ;;  f               4    0        unsigned long long 
  5050 ;;  vp              3    0        PTR void 
  5051 ;;  ct              3    0        unsigned char [3]
  5052 ;;  cp              3    0        PTR unsigned char 
  5053 ;;  i               2    0        int 
  5054 ;;  done            2    0        int 
  5055 ;;  c               1    0        unsigned char 
  5056 ;; Return value:  Size  Location     Type
  5057 ;;                  2   66[COMRAM] int 
  5058 ;; Registers used:
  5059 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5060 ;; Tracked objects:
  5061 ;;		On entry : 0/0
  5062 ;;		On exit  : 0/0
  5063 ;;		Unchanged: 0/0
  5064 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5065 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5066 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;Total ram usage:       16 bytes
  5070 ;; Hardware stack levels used:    1
  5071 ;; Hardware stack levels required when called:    9
  5072 ;; This function calls:
  5073 ;;		_dtoa
  5074 ;;		_fputc
  5075 ;; This function is called by:
  5076 ;;		_vfprintf
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           	psect	text49
  5081  0017F8                     __ptext49:
  5082                           	callstack 0
  5083  0017F8                     _vfpfcnvrt:
  5084                           	callstack 115
  5085  0017F8                     
  5086                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  5087  0017F8  0061  F514  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  5088  0017FE  0061  F518  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  5089  001804  C4DE F4F6          	movff	postinc2,tblptrl
  5090  001808  C4DD F4F7          	movff	postdec2,tblptrh
  5091  00180C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5092  00180C  6AF8               	clrf	tblptru,c
  5093  00180E                     	endif
  5094  00180E                     	if	0	;tblptru may be non-zero
  5095  00180E                     	endif
  5096  00180E  0008               	tblrd		*
  5097  001810  50F5               	movf	tablat,w,c
  5098  001812  0A25               	xorlw	37
  5099  001814  A4D8               	btfss	status,2,c
  5100  001816  EF0F  F00C         	goto	u1741
  5101  00181A  EF11  F00C         	goto	u1740
  5102  00181E                     u1741:
  5103  00181E  EFD6  F00C         	goto	l3376
  5104  001822                     u1740:
  5105  001822                     
  5106                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  5107  001822  0061  F514  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  5108  001828  0061  F518  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  5109  00182E  2ADE               	incf	postinc2,f,c
  5110  001830  0E00               	movlw	0
  5111  001832  22DD               	addwfc	postdec2,f,c
  5112  001834                     
  5113                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  5114  001834  0E00               	movlw	0
  5115  001836  0105               	movlb	5	; () banked
  5116  001838  6F63               	movwf	(_width+1)& (0+255),b
  5117  00183A  0E00               	movlw	0
  5118  00183C  6F62               	movwf	_width& (0+255),b
  5119  00183E  C562  F566         	movff	_width,_flags
  5120  001842  C563  F567         	movff	_width+1,_flags+1
  5121  001846                     
  5122                           ; BSR set to: 5
  5123                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  5124  001846  6964               	setf	_prec& (0+255),b
  5125  001848  6965               	setf	(_prec+1)& (0+255),b
  5126  00184A                     
  5127                           ; BSR set to: 5
  5128                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  5129  00184A  0061  F514  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  5130  001850  0061  F518  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  5131  001856  C4DE F4F6          	movff	postinc2,tblptrl
  5132  00185A  C4DD F4F7          	movff	postdec2,tblptrh
  5133  00185E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5134  00185E  6AF8               	clrf	tblptru,c
  5135  001860                     	endif
  5136  001860                     	if	0	;tblptru may be non-zero
  5137  001860                     	endif
  5138  001860  0008               	tblrd		*
  5139  001862  50F5               	movf	tablat,w,c
  5140  001864  0A64               	xorlw	100
  5141  001866  B4D8               	btfsc	status,2,c
  5142  001868  EF38  F00C         	goto	u1751
  5143  00186C  EF3A  F00C         	goto	u1750
  5144  001870                     u1751:
  5145  001870  EF4F  F00C         	goto	l3354
  5146  001874                     u1750:
  5147  001874                     
  5148                           ; BSR set to: 5
  5149  001874  0061  F514  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  5150  00187A  0061  F518  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  5151  001880  C4DE F4F6          	movff	postinc2,tblptrl
  5152  001884  C4DD F4F7          	movff	postdec2,tblptrh
  5153  001888                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5154  001888  6AF8               	clrf	tblptru,c
  5155  00188A                     	endif
  5156  00188A                     	if	0	;tblptru may be non-zero
  5157  00188A                     	endif
  5158  00188A  0008               	tblrd		*
  5159  00188C  50F5               	movf	tablat,w,c
  5160  00188E  0A69               	xorlw	105
  5161  001890  A4D8               	btfss	status,2,c
  5162  001892  EF4D  F00C         	goto	u1761
  5163  001896  EF4F  F00C         	goto	u1760
  5164  00189A                     u1761:
  5165  00189A  EF99  F00C         	goto	l3360
  5166  00189E                     u1760:
  5167  00189E                     l3354:
  5168                           
  5169                           ; BSR set to: 5
  5170                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  5171  00189E  0061  F514  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  5172  0018A4  0061  F518  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  5173  0018AA  2ADE               	incf	postinc2,f,c
  5174  0018AC  0E00               	movlw	0
  5175  0018AE  22DD               	addwfc	postdec2,f,c
  5176                           
  5177                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  5178  0018B0  0061  F51C  F4D9   	movff	vfpfcnvrt@ap,fsr2l
  5179  0018B6  0061  F520  F4DA   	movff	vfpfcnvrt@ap+1,fsr2h
  5180  0018BC  0061 F37C  F549    	movff	indf2,??_vfpfcnvrt
  5181  0018C2  0E02               	movlw	2
  5182  0018C4  26DE               	addwf	postinc2,f,c
  5183  0018C6  0061 F37C  F54A    	movff	indf2,??_vfpfcnvrt+1
  5184  0018CC  0E00               	movlw	0
  5185  0018CE  22DD               	addwfc	postdec2,f,c
  5186  0018D0  0061  F524  F4D9   	movff	??_vfpfcnvrt,fsr2l
  5187  0018D6  0061  F528  F4DA   	movff	??_vfpfcnvrt+1,fsr2h
  5188  0018DC  0061 F378  F54B    	movff	postinc2,vfpfcnvrt@ll
  5189  0018E2  0061 F374  F54C    	movff	postdec2,vfpfcnvrt@ll+1
  5190  0018E8  0E00               	movlw	0
  5191  0018EA  BE4C               	btfsc	(vfpfcnvrt@ll+1)^(0+1280),7,c
  5192  0018EC  0EFF               	movlw	-1
  5193  0018EE  6E4D               	movwf	(vfpfcnvrt@ll+2)^(0+1280),c
  5194  0018F0  6E4E               	movwf	(vfpfcnvrt@ll+3)^(0+1280),c
  5195  0018F2  6E4F               	movwf	(vfpfcnvrt@ll+4)^(0+1280),c
  5196  0018F4  6E50               	movwf	(vfpfcnvrt@ll+5)^(0+1280),c
  5197  0018F6  6E51               	movwf	(vfpfcnvrt@ll+6)^(0+1280),c
  5198  0018F8  6E52               	movwf	(vfpfcnvrt@ll+7)^(0+1280),c
  5199  0018FA                     
  5200                           ; BSR set to: 5
  5201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  5202  0018FA  C543  F51F         	movff	vfpfcnvrt@fp,dtoa@fp
  5203  0018FE  C544  F520         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  5204  001902  C54B  F521         	movff	vfpfcnvrt@ll,dtoa@d
  5205  001906  C54C  F522         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  5206  00190A  C54D  F523         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  5207  00190E  C54E  F524         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  5208  001912  C54F  F525         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  5209  001916  C550  F526         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  5210  00191A  C551  F527         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  5211  00191E  C552  F528         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  5212  001922  EC8A  F00A         	call	_dtoa	;wreg free
  5213  001926  C51F  F543         	movff	?_dtoa,?_vfpfcnvrt
  5214  00192A  C520  F544         	movff	?_dtoa+1,?_vfpfcnvrt+1
  5215  00192E  EFF6  F00C         	goto	l1950
  5216  001932                     l3360:
  5217                           
  5218                           ; BSR set to: 5
  5219                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  5220  001932  0061  F514  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  5221  001938  0061  F518  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  5222  00193E  C4DE F4F6          	movff	postinc2,tblptrl
  5223  001942  C4DD F4F7          	movff	postdec2,tblptrh
  5224  001946                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5225  001946  6AF8               	clrf	tblptru,c
  5226  001948                     	endif
  5227  001948                     	if	0	;tblptru may be non-zero
  5228  001948                     	endif
  5229  001948  0008               	tblrd		*
  5230  00194A  50F5               	movf	tablat,w,c
  5231  00194C  0A25               	xorlw	37
  5232  00194E  A4D8               	btfss	status,2,c
  5233  001950  EFAC  F00C         	goto	u1771
  5234  001954  EFAE  F00C         	goto	u1770
  5235  001958                     u1771:
  5236  001958  EFC7  F00C         	goto	l3370
  5237  00195C                     u1770:
  5238  00195C                     
  5239                           ; BSR set to: 5
  5240                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  5241  00195C  0061  F514  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  5242  001962  0061  F518  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  5243  001968  2ADE               	incf	postinc2,f,c
  5244  00196A  0E00               	movlw	0
  5245  00196C  22DD               	addwfc	postdec2,f,c
  5246  00196E                     
  5247                           ; BSR set to: 5
  5248                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  5249  00196E  0E00               	movlw	0
  5250  001970  6E05               	movwf	(fputc@c+1)^(0+1280),c
  5251  001972  0E25               	movlw	37
  5252  001974  6E04               	movwf	fputc@c^(0+1280),c
  5253  001976  C543  F506         	movff	vfpfcnvrt@fp,fputc@fp
  5254  00197A  C544  F507         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5255  00197E  EC72  F012         	call	_fputc	;wreg free
  5256  001982                     l3366:
  5257                           
  5258                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  5259  001982  0E00               	movlw	0
  5260  001984  6E44               	movwf	(?_vfpfcnvrt+1)^(0+1280),c
  5261  001986  0E01               	movlw	1
  5262  001988  6E43               	movwf	?_vfpfcnvrt^(0+1280),c
  5263  00198A  EFF6  F00C         	goto	l1950
  5264  00198E                     l3370:
  5265                           
  5266                           ; BSR set to: 5
  5267                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  5268  00198E  0061  F514  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  5269  001994  0061  F518  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  5270  00199A  2ADE               	incf	postinc2,f,c
  5271  00199C  0E00               	movlw	0
  5272  00199E  22DD               	addwfc	postdec2,f,c
  5273  0019A0                     
  5274                           ; BSR set to: 5
  5275                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  5276  0019A0  0E00               	movlw	0
  5277  0019A2  6E44               	movwf	(?_vfpfcnvrt+1)^(0+1280),c
  5278  0019A4  0E00               	movlw	0
  5279  0019A6  6E43               	movwf	?_vfpfcnvrt^(0+1280),c
  5280  0019A8  EFF6  F00C         	goto	l1950
  5281  0019AC                     l3376:
  5282                           
  5283                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  5284  0019AC  0061  F514  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  5285  0019B2  0061  F518  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  5286  0019B8  C4DE F4F6          	movff	postinc2,tblptrl
  5287  0019BC  C4DD F4F7          	movff	postdec2,tblptrh
  5288  0019C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5289  0019C0  6AF8               	clrf	tblptru,c
  5290  0019C2                     	endif
  5291  0019C2                     	if	0	;tblptru may be non-zero
  5292  0019C2                     	endif
  5293  0019C2  0008               	tblrd		*
  5294  0019C4  50F5               	movf	tablat,w,c
  5295  0019C6  6E04               	movwf	fputc@c^(0+1280),c
  5296  0019C8  6A05               	clrf	(fputc@c+1)^(0+1280),c
  5297  0019CA  C543  F506         	movff	vfpfcnvrt@fp,fputc@fp
  5298  0019CE  C544  F507         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  5299  0019D2  EC72  F012         	call	_fputc	;wreg free
  5300  0019D6                     
  5301                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  5302  0019D6  0061  F514  F4D9   	movff	vfpfcnvrt@fmt,fsr2l
  5303  0019DC  0061  F518  F4DA   	movff	vfpfcnvrt@fmt+1,fsr2h
  5304  0019E2  2ADE               	incf	postinc2,f,c
  5305  0019E4  0E00               	movlw	0
  5306  0019E6  22DD               	addwfc	postdec2,f,c
  5307  0019E8  EFC1  F00C         	goto	l3366
  5308  0019EC                     l1950:
  5309  0019EC  0012               	return		;funcret
  5310  0019EE                     __end_of_vfpfcnvrt:
  5311                           	callstack 0
  5312                           
  5313 ;; *************** function _dtoa *****************
  5314 ;; Defined at:
  5315 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;  fp              2   30[COMRAM] PTR struct _IO_FILE
  5318 ;;		 -> NULL(0), 
  5319 ;;  d               8   32[COMRAM] long long 
  5320 ;; Auto vars:     Size  Location     Type
  5321 ;;  n               8   56[COMRAM] long long 
  5322 ;;  i               2   64[COMRAM] int 
  5323 ;;  s               2   54[COMRAM] int 
  5324 ;;  w               2   52[COMRAM] int 
  5325 ;;  p               2   50[COMRAM] int 
  5326 ;; Return value:  Size  Location     Type
  5327 ;;                  2   30[COMRAM] int 
  5328 ;; Registers used:
  5329 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5330 ;; Tracked objects:
  5331 ;;		On entry : 0/0
  5332 ;;		On exit  : 0/0
  5333 ;;		Unchanged: 0/0
  5334 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5335 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5336 ;;      Locals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5337 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5338 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5339 ;;Total ram usage:       36 bytes
  5340 ;; Hardware stack levels used:    1
  5341 ;; Hardware stack levels required when called:    8
  5342 ;; This function calls:
  5343 ;;		___aodiv
  5344 ;;		___aomod
  5345 ;;		_abs
  5346 ;;		_pad
  5347 ;; This function is called by:
  5348 ;;		_vfpfcnvrt
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           	psect	text50
  5353  001514                     __ptext50:
  5354                           	callstack 0
  5355  001514                     _dtoa:
  5356                           	callstack 115
  5357  001514                     
  5358                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  5359  001514  C521  F539         	movff	dtoa@d,dtoa@n
  5360  001518  C522  F53A         	movff	dtoa@d+1,dtoa@n+1
  5361  00151C  C523  F53B         	movff	dtoa@d+2,dtoa@n+2
  5362  001520  C524  F53C         	movff	dtoa@d+3,dtoa@n+3
  5363  001524  C525  F53D         	movff	dtoa@d+4,dtoa@n+4
  5364  001528  C526  F53E         	movff	dtoa@d+5,dtoa@n+5
  5365  00152C  C527  F53F         	movff	dtoa@d+6,dtoa@n+6
  5366  001530  C528  F540         	movff	dtoa@d+7,dtoa@n+7
  5367  001534                     
  5368                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  5369  001534  BE40               	btfsc	(dtoa@n+7)^(0+1280),7,c
  5370  001536  EF9F  F00A         	goto	u1591
  5371  00153A  EFA2  F00A         	goto	u1590
  5372  00153E                     u1591:
  5373  00153E  0E01               	movlw	1
  5374  001540  EFA3  F00A         	goto	u1600
  5375  001544                     u1590:
  5376  001544  0E00               	movlw	0
  5377  001546                     u1600:
  5378  001546  6E37               	movwf	dtoa@s^(0+1280),c
  5379  001548  6A38               	clrf	(dtoa@s+1)^(0+1280),c
  5380                           
  5381                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  5382  00154A  5037               	movf	dtoa@s^(0+1280),w,c
  5383  00154C  1038               	iorwf	(dtoa@s+1)^(0+1280),w,c
  5384  00154E  B4D8               	btfsc	status,2,c
  5385  001550  EFAC  F00A         	goto	u1611
  5386  001554  EFAE  F00A         	goto	u1610
  5387  001558                     u1611:
  5388  001558  EFBE  F00A         	goto	l3286
  5389  00155C                     u1610:
  5390  00155C                     
  5391                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  5392  00155C  1E40               	comf	(dtoa@n+7)^(0+1280),f,c
  5393  00155E  1E3F               	comf	(dtoa@n+6)^(0+1280),f,c
  5394  001560  1E3E               	comf	(dtoa@n+5)^(0+1280),f,c
  5395  001562  1E3D               	comf	(dtoa@n+4)^(0+1280),f,c
  5396  001564  1E3C               	comf	(dtoa@n+3)^(0+1280),f,c
  5397  001566  1E3B               	comf	(dtoa@n+2)^(0+1280),f,c
  5398  001568  1E3A               	comf	(dtoa@n+1)^(0+1280),f,c
  5399  00156A  6C39               	negf	dtoa@n^(0+1280),c
  5400  00156C  0E00               	movlw	0
  5401  00156E  223A               	addwfc	(dtoa@n+1)^(0+1280),f,c
  5402  001570  223B               	addwfc	(dtoa@n+2)^(0+1280),f,c
  5403  001572  223C               	addwfc	(dtoa@n+3)^(0+1280),f,c
  5404  001574  223D               	addwfc	(dtoa@n+4)^(0+1280),f,c
  5405  001576  223E               	addwfc	(dtoa@n+5)^(0+1280),f,c
  5406  001578  223F               	addwfc	(dtoa@n+6)^(0+1280),f,c
  5407  00157A  2240               	addwfc	(dtoa@n+7)^(0+1280),f,c
  5408  00157C                     l3286:
  5409                           
  5410                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  5411  00157C  0105               	movlb	5	; () banked
  5412  00157E  BF65               	btfsc	(_prec+1)& (0+255),7,b
  5413  001580  EFC4  F00A         	goto	u1621
  5414  001584  EFC6  F00A         	goto	u1620
  5415  001588                     u1621:
  5416  001588  EFC7  F00A         	goto	l3290
  5417  00158C                     u1620:
  5418  00158C                     
  5419                           ; BSR set to: 5
  5420                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  5421  00158C  9366               	bcf	_flags& (0+255),1,b
  5422  00158E                     l3290:
  5423                           
  5424                           ; BSR set to: 5
  5425                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  5426  00158E  BF65               	btfsc	(_prec+1)& (0+255),7,b
  5427  001590  EFD4  F00A         	goto	u1630
  5428  001594  5165               	movf	(_prec+1)& (0+255),w,b
  5429  001596  E106               	bnz	u1631
  5430  001598  0564               	decf	_prec& (0+255),w,b
  5431  00159A  B0D8               	btfsc	status,0,c
  5432  00159C  EFD2  F00A         	goto	u1631
  5433  0015A0  EFD4  F00A         	goto	u1630
  5434  0015A4                     u1631:
  5435  0015A4  EFDA  F00A         	goto	l1923
  5436  0015A8                     u1630:
  5437  0015A8                     
  5438                           ; BSR set to: 5
  5439  0015A8  0E00               	movlw	0
  5440  0015AA  6E34               	movwf	(dtoa@p+1)^(0+1280),c
  5441  0015AC  0E01               	movlw	1
  5442  0015AE  6E33               	movwf	dtoa@p^(0+1280),c
  5443  0015B0  EFDE  F00A         	goto	l1925
  5444  0015B4                     l1923:
  5445                           
  5446                           ; BSR set to: 5
  5447  0015B4  C564  F533         	movff	_prec,dtoa@p
  5448  0015B8  C565  F534         	movff	_prec+1,dtoa@p+1
  5449  0015BC                     l1925:
  5450                           
  5451                           ; BSR set to: 5
  5452                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  5453  0015BC  C562  F535         	movff	_width,dtoa@w
  5454  0015C0  C563  F536         	movff	_width+1,dtoa@w+1
  5455  0015C4                     
  5456                           ; BSR set to: 5
  5457                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  5458  0015C4  5037               	movf	dtoa@s^(0+1280),w,c
  5459  0015C6  1038               	iorwf	(dtoa@s+1)^(0+1280),w,c
  5460  0015C8  A4D8               	btfss	status,2,c
  5461  0015CA  EFE9  F00A         	goto	u1641
  5462  0015CE  EFEB  F00A         	goto	u1640
  5463  0015D2                     u1641:
  5464  0015D2  EFF2  F00A         	goto	l3298
  5465  0015D6                     u1640:
  5466  0015D6                     
  5467                           ; BSR set to: 5
  5468  0015D6  A566               	btfss	_flags& (0+255),2,b
  5469  0015D8  EFF0  F00A         	goto	u1651
  5470  0015DC  EFF2  F00A         	goto	u1650
  5471  0015E0                     u1651:
  5472  0015E0  EFF5  F00A         	goto	l3300
  5473  0015E4                     u1650:
  5474  0015E4                     l3298:
  5475                           
  5476                           ; BSR set to: 5
  5477                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  5478  0015E4  0635               	decf	dtoa@w^(0+1280),f,c
  5479  0015E6  A0D8               	btfss	status,0,c
  5480  0015E8  0636               	decf	(dtoa@w+1)^(0+1280),f,c
  5481  0015EA                     l3300:
  5482                           
  5483                           ; BSR set to: 5
  5484                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  5485  0015EA  0E00               	movlw	0
  5486  0015EC  6E42               	movwf	(dtoa@i+1)^(0+1280),c
  5487  0015EE  0E1F               	movlw	31
  5488  0015F0  6E41               	movwf	dtoa@i^(0+1280),c
  5489  0015F2                     
  5490                           ; BSR set to: 5
  5491                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  5492  0015F2  0E00               	movlw	0
  5493  0015F4  6F96               	movwf	(_dbuf+31)& (0+255),b
  5494                           
  5495                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5496  0015F6  EF79  F00B         	goto	l3314
  5497  0015FA                     l3304:
  5498                           
  5499                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  5500  0015FA  0641               	decf	dtoa@i^(0+1280),f,c
  5501  0015FC  A0D8               	btfss	status,0,c
  5502  0015FE  0642               	decf	(dtoa@i+1)^(0+1280),f,c
  5503  001600                     
  5504                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  5505  001600  0E77               	movlw	low _dbuf
  5506  001602  2441               	addwf	dtoa@i^(0+1280),w,c
  5507  001604  6ED9               	movwf	fsr2l,c
  5508  001606  0E05               	movlw	high _dbuf
  5509  001608  2042               	addwfc	(dtoa@i+1)^(0+1280),w,c
  5510  00160A  6EDA               	movwf	fsr2h,c
  5511  00160C  C539  F502         	movff	dtoa@n,___aomod@dividend
  5512  001610  C53A  F503         	movff	dtoa@n+1,___aomod@dividend+1
  5513  001614  C53B  F504         	movff	dtoa@n+2,___aomod@dividend+2
  5514  001618  C53C  F505         	movff	dtoa@n+3,___aomod@dividend+3
  5515  00161C  C53D  F506         	movff	dtoa@n+4,___aomod@dividend+4
  5516  001620  C53E  F507         	movff	dtoa@n+5,___aomod@dividend+5
  5517  001624  C53F  F508         	movff	dtoa@n+6,___aomod@dividend+6
  5518  001628  C540  F509         	movff	dtoa@n+7,___aomod@dividend+7
  5519  00162C  0E0A               	movlw	10
  5520  00162E  6E0A               	movwf	___aomod@divisor^(0+1280),c
  5521  001630  0E00               	movlw	0
  5522  001632  6E0B               	movwf	(___aomod@divisor+1)^(0+1280),c
  5523  001634  0E00               	movlw	0
  5524  001636  6E0C               	movwf	(___aomod@divisor+2)^(0+1280),c
  5525  001638  0E00               	movlw	0
  5526  00163A  6E0D               	movwf	(___aomod@divisor+3)^(0+1280),c
  5527  00163C  0E00               	movlw	0
  5528  00163E  6E0E               	movwf	(___aomod@divisor+4)^(0+1280),c
  5529  001640  0E00               	movlw	0
  5530  001642  6E0F               	movwf	(___aomod@divisor+5)^(0+1280),c
  5531  001644  0E00               	movlw	0
  5532  001646  6E10               	movwf	(___aomod@divisor+6)^(0+1280),c
  5533  001648  0E00               	movlw	0
  5534  00164A  6E11               	movwf	(___aomod@divisor+7)^(0+1280),c
  5535  00164C  ECBB  F00D         	call	___aomod	;wreg free
  5536  001650  C502  F529         	movff	?___aomod,??_dtoa
  5537  001654  C503  F52A         	movff	?___aomod+1,??_dtoa+1
  5538  001658  C504  F52B         	movff	?___aomod+2,??_dtoa+2
  5539  00165C  C505  F52C         	movff	?___aomod+3,??_dtoa+3
  5540  001660  C506  F52D         	movff	?___aomod+4,??_dtoa+4
  5541  001664  C507  F52E         	movff	?___aomod+5,??_dtoa+5
  5542  001668  C508  F52F         	movff	?___aomod+6,??_dtoa+6
  5543  00166C  C509  F530         	movff	?___aomod+7,??_dtoa+7
  5544  001670  C529  F514         	movff	??_dtoa,abs@a
  5545  001674  C52B  F515         	movff	??_dtoa+2,abs@a+1
  5546  001678  ECEF  F014         	call	_abs	;wreg free
  5547  00167C  5014               	movf	?_abs^(0+1280),w,c
  5548  00167E  0F30               	addlw	48
  5549  001680  6EDF               	movwf	indf2,c
  5550  001682                     
  5551                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  5552  001682  0633               	decf	dtoa@p^(0+1280),f,c
  5553  001684  A0D8               	btfss	status,0,c
  5554  001686  0634               	decf	(dtoa@p+1)^(0+1280),f,c
  5555  001688                     
  5556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  5557  001688  0635               	decf	dtoa@w^(0+1280),f,c
  5558  00168A  A0D8               	btfss	status,0,c
  5559  00168C  0636               	decf	(dtoa@w+1)^(0+1280),f,c
  5560  00168E                     
  5561                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  5562  00168E  C539  F502         	movff	dtoa@n,___aodiv@dividend
  5563  001692  C53A  F503         	movff	dtoa@n+1,___aodiv@dividend+1
  5564  001696  C53B  F504         	movff	dtoa@n+2,___aodiv@dividend+2
  5565  00169A  C53C  F505         	movff	dtoa@n+3,___aodiv@dividend+3
  5566  00169E  C53D  F506         	movff	dtoa@n+4,___aodiv@dividend+4
  5567  0016A2  C53E  F507         	movff	dtoa@n+5,___aodiv@dividend+5
  5568  0016A6  C53F  F508         	movff	dtoa@n+6,___aodiv@dividend+6
  5569  0016AA  C540  F509         	movff	dtoa@n+7,___aodiv@dividend+7
  5570  0016AE  0E0A               	movlw	10
  5571  0016B0  6E0A               	movwf	___aodiv@divisor^(0+1280),c
  5572  0016B2  0E00               	movlw	0
  5573  0016B4  6E0B               	movwf	(___aodiv@divisor+1)^(0+1280),c
  5574  0016B6  0E00               	movlw	0
  5575  0016B8  6E0C               	movwf	(___aodiv@divisor+2)^(0+1280),c
  5576  0016BA  0E00               	movlw	0
  5577  0016BC  6E0D               	movwf	(___aodiv@divisor+3)^(0+1280),c
  5578  0016BE  0E00               	movlw	0
  5579  0016C0  6E0E               	movwf	(___aodiv@divisor+4)^(0+1280),c
  5580  0016C2  0E00               	movlw	0
  5581  0016C4  6E0F               	movwf	(___aodiv@divisor+5)^(0+1280),c
  5582  0016C6  0E00               	movlw	0
  5583  0016C8  6E10               	movwf	(___aodiv@divisor+6)^(0+1280),c
  5584  0016CA  0E00               	movlw	0
  5585  0016CC  6E11               	movwf	(___aodiv@divisor+7)^(0+1280),c
  5586  0016CE  ECF7  F00C         	call	___aodiv	;wreg free
  5587  0016D2  C502  F539         	movff	?___aodiv,dtoa@n
  5588  0016D6  C503  F53A         	movff	?___aodiv+1,dtoa@n+1
  5589  0016DA  C504  F53B         	movff	?___aodiv+2,dtoa@n+2
  5590  0016DE  C505  F53C         	movff	?___aodiv+3,dtoa@n+3
  5591  0016E2  C506  F53D         	movff	?___aodiv+4,dtoa@n+4
  5592  0016E6  C507  F53E         	movff	?___aodiv+5,dtoa@n+5
  5593  0016EA  C508  F53F         	movff	?___aodiv+6,dtoa@n+6
  5594  0016EE  C509  F540         	movff	?___aodiv+7,dtoa@n+7
  5595  0016F2                     l3314:
  5596                           
  5597                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  5598  0016F2  BE42               	btfsc	(dtoa@i+1)^(0+1280),7,c
  5599  0016F4  EF84  F00B         	goto	u1661
  5600  0016F8  5042               	movf	(dtoa@i+1)^(0+1280),w,c
  5601  0016FA  E108               	bnz	u1660
  5602  0016FC  0441               	decf	dtoa@i^(0+1280),w,c
  5603  0016FE  A0D8               	btfss	status,0,c
  5604  001700  EF84  F00B         	goto	u1661
  5605  001704  EF86  F00B         	goto	u1660
  5606  001708                     u1661:
  5607  001708  EFB7  F00B         	goto	l3324
  5608  00170C                     u1660:
  5609  00170C  5039               	movf	dtoa@n^(0+1280),w,c
  5610  00170E  103A               	iorwf	(dtoa@n+1)^(0+1280),w,c
  5611  001710  103B               	iorwf	(dtoa@n+2)^(0+1280),w,c
  5612  001712  103C               	iorwf	(dtoa@n+3)^(0+1280),w,c
  5613  001714  103D               	iorwf	(dtoa@n+4)^(0+1280),w,c
  5614  001716  103E               	iorwf	(dtoa@n+5)^(0+1280),w,c
  5615  001718  103F               	iorwf	(dtoa@n+6)^(0+1280),w,c
  5616  00171A  1040               	iorwf	(dtoa@n+7)^(0+1280),w,c
  5617  00171C  A4D8               	btfss	status,2,c
  5618  00171E  EF93  F00B         	goto	u1671
  5619  001722  EF95  F00B         	goto	u1670
  5620  001726                     u1671:
  5621  001726  EFFD  F00A         	goto	l3304
  5622  00172A                     u1670:
  5623  00172A  BE34               	btfsc	(dtoa@p+1)^(0+1280),7,c
  5624  00172C  EFA2  F00B         	goto	u1680
  5625  001730  5034               	movf	(dtoa@p+1)^(0+1280),w,c
  5626  001732  E106               	bnz	u1681
  5627  001734  0433               	decf	dtoa@p^(0+1280),w,c
  5628  001736  B0D8               	btfsc	status,0,c
  5629  001738  EFA0  F00B         	goto	u1681
  5630  00173C  EFA2  F00B         	goto	u1680
  5631  001740                     u1681:
  5632  001740  EFFD  F00A         	goto	l3304
  5633  001744                     u1680:
  5634  001744  BE36               	btfsc	(dtoa@w+1)^(0+1280),7,c
  5635  001746  EFAD  F00B         	goto	u1691
  5636  00174A  5036               	movf	(dtoa@w+1)^(0+1280),w,c
  5637  00174C  E108               	bnz	u1690
  5638  00174E  0435               	decf	dtoa@w^(0+1280),w,c
  5639  001750  A0D8               	btfss	status,0,c
  5640  001752  EFAD  F00B         	goto	u1691
  5641  001756  EFAF  F00B         	goto	u1690
  5642  00175A                     u1691:
  5643  00175A  EFB7  F00B         	goto	l3324
  5644  00175E                     u1690:
  5645  00175E  0105               	movlb	5	; () banked
  5646  001760  B366               	btfsc	_flags& (0+255),1,b
  5647  001762  EFB5  F00B         	goto	u1701
  5648  001766  EFB7  F00B         	goto	u1700
  5649  00176A                     u1701:
  5650  00176A  EFFD  F00A         	goto	l3304
  5651  00176E                     u1700:
  5652  00176E                     l3324:
  5653                           
  5654                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  5655  00176E  5037               	movf	dtoa@s^(0+1280),w,c
  5656  001770  1038               	iorwf	(dtoa@s+1)^(0+1280),w,c
  5657  001772  A4D8               	btfss	status,2,c
  5658  001774  EFBE  F00B         	goto	u1711
  5659  001778  EFC0  F00B         	goto	u1710
  5660  00177C                     u1711:
  5661  00177C  EFC8  F00B         	goto	l3328
  5662  001780                     u1710:
  5663  001780  0105               	movlb	5	; () banked
  5664  001782  A566               	btfss	_flags& (0+255),2,b
  5665  001784  EFC6  F00B         	goto	u1721
  5666  001788  EFC8  F00B         	goto	u1720
  5667  00178C                     u1721:
  5668  00178C  EFE7  F00B         	goto	l3338
  5669  001790                     u1720:
  5670  001790                     l3328:
  5671                           
  5672                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  5673  001790  0641               	decf	dtoa@i^(0+1280),f,c
  5674  001792  A0D8               	btfss	status,0,c
  5675  001794  0642               	decf	(dtoa@i+1)^(0+1280),f,c
  5676  001796                     
  5677                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  5678  001796  5037               	movf	dtoa@s^(0+1280),w,c
  5679  001798  1038               	iorwf	(dtoa@s+1)^(0+1280),w,c
  5680  00179A  A4D8               	btfss	status,2,c
  5681  00179C  EFD2  F00B         	goto	u1731
  5682  0017A0  EFD4  F00B         	goto	u1730
  5683  0017A4                     u1731:
  5684  0017A4  EFDA  F00B         	goto	l3334
  5685  0017A8                     u1730:
  5686  0017A8  0E00               	movlw	0
  5687  0017AA  6E32               	movwf	(_dtoa$2841+1)^(0+1280),c
  5688  0017AC  0E2B               	movlw	43
  5689  0017AE  6E31               	movwf	_dtoa$2841^(0+1280),c
  5690  0017B0  EFDE  F00B         	goto	l3336
  5691  0017B4                     l3334:
  5692  0017B4  0E00               	movlw	0
  5693  0017B6  6E32               	movwf	(_dtoa$2841+1)^(0+1280),c
  5694  0017B8  0E2D               	movlw	45
  5695  0017BA  6E31               	movwf	_dtoa$2841^(0+1280),c
  5696  0017BC                     l3336:
  5697  0017BC  0E77               	movlw	low _dbuf
  5698  0017BE  2441               	addwf	dtoa@i^(0+1280),w,c
  5699  0017C0  6ED9               	movwf	fsr2l,c
  5700  0017C2  0E05               	movlw	high _dbuf
  5701  0017C4  2042               	addwfc	(dtoa@i+1)^(0+1280),w,c
  5702  0017C6  6EDA               	movwf	fsr2h,c
  5703  0017C8  0061  F4C4  F4DF   	movff	_dtoa$2841,indf2
  5704  0017CE                     l3338:
  5705                           
  5706                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  5707  0017CE  C51F  F514         	movff	dtoa@fp,pad@fp
  5708  0017D2  C520  F515         	movff	dtoa@fp+1,pad@fp+1
  5709  0017D6  0E77               	movlw	low _dbuf
  5710  0017D8  2441               	addwf	dtoa@i^(0+1280),w,c
  5711  0017DA  6E16               	movwf	pad@buf^(0+1280),c
  5712  0017DC  0E05               	movlw	high _dbuf
  5713  0017DE  2042               	addwfc	(dtoa@i+1)^(0+1280),w,c
  5714  0017E0  6E17               	movwf	(pad@buf+1)^(0+1280),c
  5715  0017E2  C535  F518         	movff	dtoa@w,pad@p
  5716  0017E6  C536  F519         	movff	dtoa@w+1,pad@p+1
  5717  0017EA  EC73  F011         	call	_pad	;wreg free
  5718  0017EE  C514  F51F         	movff	?_pad,?_dtoa
  5719  0017F2  C515  F520         	movff	?_pad+1,?_dtoa+1
  5720  0017F6  0012               	return		;funcret
  5721  0017F8                     __end_of_dtoa:
  5722                           	callstack 0
  5723                           
  5724 ;; *************** function _pad *****************
  5725 ;; Defined at:
  5726 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5727 ;; Parameters:    Size  Location     Type
  5728 ;;  fp              2   19[COMRAM] PTR struct _IO_FILE
  5729 ;;		 -> NULL(0), 
  5730 ;;  buf             2   21[COMRAM] PTR unsigned char 
  5731 ;;		 -> dbuf(32), 
  5732 ;;  p               2   23[COMRAM] int 
  5733 ;; Auto vars:     Size  Location     Type
  5734 ;;  w               2   28[COMRAM] int 
  5735 ;;  i               2   26[COMRAM] int 
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  2   19[COMRAM] int 
  5738 ;; Registers used:
  5739 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5745 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5746 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5747 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5748 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5749 ;;Total ram usage:       11 bytes
  5750 ;; Hardware stack levels used:    1
  5751 ;; Hardware stack levels required when called:    7
  5752 ;; This function calls:
  5753 ;;		_fputc
  5754 ;;		_fputs
  5755 ;;		_strlen
  5756 ;; This function is called by:
  5757 ;;		_dtoa
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           	psect	text51
  5762  0022E6                     __ptext51:
  5763                           	callstack 0
  5764  0022E6                     _pad:
  5765                           	callstack 115
  5766  0022E6                     
  5767                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5768  0022E6  0105               	movlb	5	; () banked
  5769  0022E8  A166               	btfss	_flags& (0+255),0,b
  5770  0022EA  EF79  F011         	goto	u1541
  5771  0022EE  EF7B  F011         	goto	u1540
  5772  0022F2                     u1541:
  5773  0022F2  EF85  F011         	goto	l3258
  5774  0022F6                     u1540:
  5775  0022F6                     
  5776                           ; BSR set to: 5
  5777                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5778  0022F6  C516  F50D         	movff	pad@buf,fputs@s
  5779  0022FA  C517  F50E         	movff	pad@buf+1,fputs@s+1
  5780  0022FE  C514  F50F         	movff	pad@fp,fputs@fp
  5781  002302  C515  F510         	movff	pad@fp+1,fputs@fp+1
  5782  002306  ECCD  F014         	call	_fputs	;wreg free
  5783  00230A                     l3258:
  5784                           
  5785                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5786  00230A  BE19               	btfsc	(pad@p+1)^(0+1280),7,c
  5787  00230C  EF8A  F011         	goto	u1551
  5788  002310  EF8C  F011         	goto	u1550
  5789  002314                     u1551:
  5790  002314  EF92  F011         	goto	l3262
  5791  002318                     u1550:
  5792  002318  C518  F51D         	movff	pad@p,pad@w
  5793  00231C  C519  F51E         	movff	pad@p+1,pad@w+1
  5794  002320  EF96  F011         	goto	l1912
  5795  002324                     l3262:
  5796  002324  0E00               	movlw	0
  5797  002326  6E1E               	movwf	(pad@w+1)^(0+1280),c
  5798  002328  0E00               	movlw	0
  5799  00232A  6E1D               	movwf	pad@w^(0+1280),c
  5800  00232C                     l1912:
  5801                           
  5802                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5803  00232C  0E00               	movlw	0
  5804  00232E  6E1C               	movwf	(pad@i+1)^(0+1280),c
  5805  002330  0E00               	movlw	0
  5806  002332  6E1B               	movwf	pad@i^(0+1280),c
  5807                           
  5808                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5809  002334  EFA8  F011         	goto	l3268
  5810  002338                     l3264:
  5811                           
  5812                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5813  002338  0E00               	movlw	0
  5814  00233A  6E05               	movwf	(fputc@c+1)^(0+1280),c
  5815  00233C  0E20               	movlw	32
  5816  00233E  6E04               	movwf	fputc@c^(0+1280),c
  5817  002340  C514  F506         	movff	pad@fp,fputc@fp
  5818  002344  C515  F507         	movff	pad@fp+1,fputc@fp+1
  5819  002348  EC72  F012         	call	_fputc	;wreg free
  5820  00234C                     
  5821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5822  00234C  4A1B               	infsnz	pad@i^(0+1280),f,c
  5823  00234E  2A1C               	incf	(pad@i+1)^(0+1280),f,c
  5824  002350                     l3268:
  5825                           
  5826                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5827  002350  501D               	movf	pad@w^(0+1280),w,c
  5828  002352  5C1B               	subwf	pad@i^(0+1280),w,c
  5829  002354  501C               	movf	(pad@i+1)^(0+1280),w,c
  5830  002356  0A80               	xorlw	128
  5831  002358  6E1A               	movwf	??_pad^(0+1280),c
  5832  00235A  501E               	movf	(pad@w+1)^(0+1280),w,c
  5833  00235C  0A80               	xorlw	128
  5834  00235E  581A               	subwfb	??_pad^(0+1280),w,c
  5835  002360  A0D8               	btfss	status,0,c
  5836  002362  EFB5  F011         	goto	u1561
  5837  002366  EFB7  F011         	goto	u1560
  5838  00236A                     u1561:
  5839  00236A  EF9C  F011         	goto	l3264
  5840  00236E                     u1560:
  5841  00236E                     
  5842                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5843  00236E  0105               	movlb	5	; () banked
  5844  002370  B166               	btfsc	_flags& (0+255),0,b
  5845  002372  EFBD  F011         	goto	u1571
  5846  002376  EFBF  F011         	goto	u1570
  5847  00237A                     u1571:
  5848  00237A  EFC9  F011         	goto	l3272
  5849  00237E                     u1570:
  5850  00237E                     
  5851                           ; BSR set to: 5
  5852                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5853  00237E  C516  F50D         	movff	pad@buf,fputs@s
  5854  002382  C517  F50E         	movff	pad@buf+1,fputs@s+1
  5855  002386  C514  F50F         	movff	pad@fp,fputs@fp
  5856  00238A  C515  F510         	movff	pad@fp+1,fputs@fp+1
  5857  00238E  ECCD  F014         	call	_fputs	;wreg free
  5858  002392                     l3272:
  5859                           
  5860                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  5861  002392  C516  F502         	movff	pad@buf,strlen@s
  5862  002396  C517  F503         	movff	pad@buf+1,strlen@s+1
  5863  00239A  EC2C  F015         	call	_strlen	;wreg free
  5864  00239E  501D               	movf	pad@w^(0+1280),w,c
  5865  0023A0  2402               	addwf	?_strlen^(0+1280),w,c
  5866  0023A2  6E14               	movwf	?_pad^(0+1280),c
  5867  0023A4  501E               	movf	(pad@w+1)^(0+1280),w,c
  5868  0023A6  2003               	addwfc	(?_strlen+1)^(0+1280),w,c
  5869  0023A8  6E15               	movwf	(?_pad+1)^(0+1280),c
  5870  0023AA  0012               	return		;funcret
  5871  0023AC                     __end_of_pad:
  5872                           	callstack 0
  5873                           
  5874 ;; *************** function _strlen *****************
  5875 ;; Defined at:
  5876 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  s               2    1[COMRAM] PTR const unsigned char 
  5879 ;;		 -> dbuf(32), 
  5880 ;; Auto vars:     Size  Location     Type
  5881 ;;  a               2    3[COMRAM] PTR const unsigned char 
  5882 ;;		 -> dbuf(32), 
  5883 ;; Return value:  Size  Location     Type
  5884 ;;                  2    1[COMRAM] unsigned int 
  5885 ;; Registers used:
  5886 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5887 ;; Tracked objects:
  5888 ;;		On entry : 0/0
  5889 ;;		On exit  : 0/0
  5890 ;;		Unchanged: 0/0
  5891 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5892 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5895 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5896 ;;Total ram usage:        4 bytes
  5897 ;; Hardware stack levels used:    1
  5898 ;; Hardware stack levels required when called:    3
  5899 ;; This function calls:
  5900 ;;		Nothing
  5901 ;; This function is called by:
  5902 ;;		_pad
  5903 ;; This function uses a non-reentrant model
  5904 ;;
  5905                           
  5906                           	psect	text52
  5907  002A58                     __ptext52:
  5908                           	callstack 0
  5909  002A58                     _strlen:
  5910                           	callstack 118
  5911  002A58  C502  F504         	movff	strlen@s,strlen@a
  5912  002A5C  C503  F505         	movff	strlen@s+1,strlen@a+1
  5913  002A60  EF34  F015         	goto	l3168
  5914  002A64                     l3166:
  5915  002A64  4A02               	infsnz	strlen@s^(0+1280),f,c
  5916  002A66  2A03               	incf	(strlen@s+1)^(0+1280),f,c
  5917  002A68                     l3168:
  5918  002A68  0061  F408  F4D9   	movff	strlen@s,fsr2l
  5919  002A6E  0061  F40C  F4DA   	movff	strlen@s+1,fsr2h
  5920  002A74  50DF               	movf	indf2,w,c
  5921  002A76  A4D8               	btfss	status,2,c
  5922  002A78  EF40  F015         	goto	u1401
  5923  002A7C  EF42  F015         	goto	u1400
  5924  002A80                     u1401:
  5925  002A80  EF32  F015         	goto	l3166
  5926  002A84                     u1400:
  5927  002A84  5004               	movf	strlen@a^(0+1280),w,c
  5928  002A86  5C02               	subwf	strlen@s^(0+1280),w,c
  5929  002A88  6E02               	movwf	?_strlen^(0+1280),c
  5930  002A8A  5005               	movf	(strlen@a+1)^(0+1280),w,c
  5931  002A8C  5803               	subwfb	(strlen@s+1)^(0+1280),w,c
  5932  002A8E  6E03               	movwf	(?_strlen+1)^(0+1280),c
  5933  002A90  0012               	return		;funcret
  5934  002A92                     __end_of_strlen:
  5935                           	callstack 0
  5936                           
  5937 ;; *************** function _fputs *****************
  5938 ;; Defined at:
  5939 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;  s               2   12[COMRAM] PTR const unsigned char 
  5942 ;;		 -> dbuf(32), 
  5943 ;;  fp              2   14[COMRAM] PTR struct _IO_FILE
  5944 ;;		 -> NULL(0), 
  5945 ;; Auto vars:     Size  Location     Type
  5946 ;;  i               2   17[COMRAM] int 
  5947 ;;  c               1   16[COMRAM] unsigned char 
  5948 ;; Return value:  Size  Location     Type
  5949 ;;                  2   12[COMRAM] int 
  5950 ;; Registers used:
  5951 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5952 ;; Tracked objects:
  5953 ;;		On entry : 0/0
  5954 ;;		On exit  : 0/0
  5955 ;;		Unchanged: 0/0
  5956 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  5957 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5958 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5960 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5961 ;;Total ram usage:        7 bytes
  5962 ;; Hardware stack levels used:    1
  5963 ;; Hardware stack levels required when called:    6
  5964 ;; This function calls:
  5965 ;;		_fputc
  5966 ;; This function is called by:
  5967 ;;		_pad
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text53
  5972  00299A                     __ptext53:
  5973                           	callstack 0
  5974  00299A                     _fputs:
  5975                           	callstack 115
  5976  00299A  0E00               	movlw	0
  5977  00299C  6E13               	movwf	(fputs@i+1)^(0+1280),c
  5978  00299E  0E00               	movlw	0
  5979  0029A0  6E12               	movwf	fputs@i^(0+1280),c
  5980  0029A2  EFDE  F014         	goto	l3162
  5981  0029A6                     l3158:
  5982  0029A6  C511  F504         	movff	fputs@c,fputc@c
  5983  0029AA  6A05               	clrf	(fputc@c+1)^(0+1280),c
  5984  0029AC  C50F  F506         	movff	fputs@fp,fputc@fp
  5985  0029B0  C510  F507         	movff	fputs@fp+1,fputc@fp+1
  5986  0029B4  EC72  F012         	call	_fputc	;wreg free
  5987  0029B8  4A12               	infsnz	fputs@i^(0+1280),f,c
  5988  0029BA  2A13               	incf	(fputs@i+1)^(0+1280),f,c
  5989  0029BC                     l3162:
  5990  0029BC  5012               	movf	fputs@i^(0+1280),w,c
  5991  0029BE  240D               	addwf	fputs@s^(0+1280),w,c
  5992  0029C0  6ED9               	movwf	fsr2l,c
  5993  0029C2  5013               	movf	(fputs@i+1)^(0+1280),w,c
  5994  0029C4  200E               	addwfc	(fputs@s+1)^(0+1280),w,c
  5995  0029C6  6EDA               	movwf	fsr2h,c
  5996  0029C8  50DF               	movf	indf2,w,c
  5997  0029CA  6E11               	movwf	fputs@c^(0+1280),c
  5998  0029CC  5011               	movf	fputs@c^(0+1280),w,c
  5999  0029CE  A4D8               	btfss	status,2,c
  6000  0029D0  EFEC  F014         	goto	u1391
  6001  0029D4  EFEE  F014         	goto	u1390
  6002  0029D8                     u1391:
  6003  0029D8  EFD3  F014         	goto	l3158
  6004  0029DC                     u1390:
  6005  0029DC  0012               	return		;funcret
  6006  0029DE                     __end_of_fputs:
  6007                           	callstack 0
  6008                           
  6009 ;; *************** function _fputc *****************
  6010 ;; Defined at:
  6011 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  6012 ;; Parameters:    Size  Location     Type
  6013 ;;  c               2    3[COMRAM] int 
  6014 ;;  fp              2    5[COMRAM] PTR struct _IO_FILE
  6015 ;;		 -> NULL(0), 
  6016 ;; Auto vars:     Size  Location     Type
  6017 ;;		None
  6018 ;; Return value:  Size  Location     Type
  6019 ;;                  2    3[COMRAM] int 
  6020 ;; Registers used:
  6021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6022 ;; Tracked objects:
  6023 ;;		On entry : 0/0
  6024 ;;		On exit  : 0/0
  6025 ;;		Unchanged: 0/0
  6026 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6027 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6029 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6030 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6031 ;;Total ram usage:        9 bytes
  6032 ;; Hardware stack levels used:    1
  6033 ;; Hardware stack levels required when called:    5
  6034 ;; This function calls:
  6035 ;;		_putch
  6036 ;; This function is called by:
  6037 ;;		_pad
  6038 ;;		_vfpfcnvrt
  6039 ;;		_fputs
  6040 ;; This function uses a non-reentrant model
  6041 ;;
  6042                           
  6043                           	psect	text54
  6044  0024E4                     __ptext54:
  6045                           	callstack 0
  6046  0024E4                     _fputc:
  6047                           	callstack 118
  6048  0024E4  5006               	movf	fputc@fp^(0+1280),w,c
  6049  0024E6  1007               	iorwf	(fputc@fp+1)^(0+1280),w,c
  6050  0024E8  B4D8               	btfsc	status,2,c
  6051  0024EA  EF79  F012         	goto	u1351
  6052  0024EE  EF7B  F012         	goto	u1350
  6053  0024F2                     u1351:
  6054  0024F2  EF84  F012         	goto	l3146
  6055  0024F6                     u1350:
  6056  0024F6  5006               	movf	fputc@fp^(0+1280),w,c
  6057  0024F8  1007               	iorwf	(fputc@fp+1)^(0+1280),w,c
  6058  0024FA  A4D8               	btfss	status,2,c
  6059  0024FC  EF82  F012         	goto	u1361
  6060  002500  EF84  F012         	goto	u1360
  6061  002504                     u1361:
  6062  002504  EF89  F012         	goto	l3148
  6063  002508                     u1360:
  6064  002508                     l3146:
  6065  002508  5004               	movf	fputc@c^(0+1280),w,c
  6066  00250A  EC8A  F016         	call	_putch
  6067  00250E  EFBC  F012         	goto	l1976
  6068  002512                     l3148:
  6069  002512  EE20 F004          	lfsr	2,4
  6070  002516  5006               	movf	fputc@fp^(0+1280),w,c
  6071  002518  26D9               	addwf	fsr2l,f,c
  6072  00251A  5007               	movf	(fputc@fp+1)^(0+1280),w,c
  6073  00251C  22DA               	addwfc	fsr2h,f,c
  6074  00251E  50DE               	movf	postinc2,w,c
  6075  002520  10DE               	iorwf	postinc2,w,c
  6076  002522  B4D8               	btfsc	status,2,c
  6077  002524  EF96  F012         	goto	u1371
  6078  002528  EF98  F012         	goto	u1370
  6079  00252C                     u1371:
  6080  00252C  EFB3  F012         	goto	l3152
  6081  002530                     u1370:
  6082  002530  EE20 F004          	lfsr	2,4
  6083  002534  5006               	movf	fputc@fp^(0+1280),w,c
  6084  002536  26D9               	addwf	fsr2l,f,c
  6085  002538  5007               	movf	(fputc@fp+1)^(0+1280),w,c
  6086  00253A  22DA               	addwfc	fsr2h,f,c
  6087  00253C  EE10 F002          	lfsr	1,2
  6088  002540  5006               	movf	fputc@fp^(0+1280),w,c
  6089  002542  26E1               	addwf	fsr1l,f,c
  6090  002544  5007               	movf	(fputc@fp+1)^(0+1280),w,c
  6091  002546  22E2               	addwfc	fsr1h,f,c
  6092  002548  50DE               	movf	postinc2,w,c
  6093  00254A  5CE6               	subwf	postinc1,w,c
  6094  00254C  50E6               	movf	postinc1,w,c
  6095  00254E  0A80               	xorlw	128
  6096  002550  6E0C               	movwf	(??_fputc+4)^(0+1280),c
  6097  002552  50DE               	movf	postinc2,w,c
  6098  002554  0A80               	xorlw	128
  6099  002556  580C               	subwfb	(??_fputc+4)^(0+1280),w,c
  6100  002558  B0D8               	btfsc	status,0,c
  6101  00255A  EFB1  F012         	goto	u1381
  6102  00255E  EFB3  F012         	goto	u1380
  6103  002562                     u1381:
  6104  002562  EFBC  F012         	goto	l1976
  6105  002566                     u1380:
  6106  002566                     l3152:
  6107  002566  EE20 F002          	lfsr	2,2
  6108  00256A  5006               	movf	fputc@fp^(0+1280),w,c
  6109  00256C  26D9               	addwf	fsr2l,f,c
  6110  00256E  5007               	movf	(fputc@fp+1)^(0+1280),w,c
  6111  002570  22DA               	addwfc	fsr2h,f,c
  6112  002572  2ADE               	incf	postinc2,f,c
  6113  002574  0E00               	movlw	0
  6114  002576  22DD               	addwfc	postdec2,f,c
  6115  002578                     l1976:
  6116  002578  0012               	return		;funcret
  6117  00257A                     __end_of_fputc:
  6118                           	callstack 0
  6119                           
  6120 ;; *************** function _putch *****************
  6121 ;; Defined at:
  6122 ;;		line 186 in file "mcc_generated_files/uart1.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;  txData          1    wreg     unsigned char 
  6125 ;; Auto vars:     Size  Location     Type
  6126 ;;  txData          1    2[COMRAM] unsigned char 
  6127 ;; Return value:  Size  Location     Type
  6128 ;;                  1    wreg      void 
  6129 ;; Registers used:
  6130 ;;		wreg, status,2, cstack
  6131 ;; Tracked objects:
  6132 ;;		On entry : 0/0
  6133 ;;		On exit  : 0/0
  6134 ;;		Unchanged: 0/0
  6135 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6137 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6139 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6140 ;;Total ram usage:        1 bytes
  6141 ;; Hardware stack levels used:    1
  6142 ;; Hardware stack levels required when called:    4
  6143 ;; This function calls:
  6144 ;;		_UART1_Write
  6145 ;; This function is called by:
  6146 ;;		_fputc
  6147 ;; This function uses a non-reentrant model
  6148 ;;
  6149                           
  6150                           	psect	text55
  6151  002D14                     __ptext55:
  6152                           	callstack 0
  6153  002D14                     _putch:
  6154                           	callstack 118
  6155                           
  6156                           ;incstack = 0
  6157                           ;putch@txData stored from wreg
  6158  002D14  6E03               	movwf	putch@txData^(0+1280),c
  6159  002D16                     
  6160                           ;mcc_generated_files/uart1.c: 186: void putch(char txData);mcc_generated_files/uart1.c: 
      +                          187: {;mcc_generated_files/uart1.c: 188:     UART1_Write(txData);
  6161  002D16  5003               	movf	putch@txData^(0+1280),w,c
  6162  002D18  EC04  F016         	call	_UART1_Write
  6163  002D1C  0012               	return		;funcret
  6164  002D1E                     __end_of_putch:
  6165                           	callstack 0
  6166                           
  6167 ;; *************** function _UART1_Write *****************
  6168 ;; Defined at:
  6169 ;;		line 171 in file "mcc_generated_files/uart1.c"
  6170 ;; Parameters:    Size  Location     Type
  6171 ;;  txData          1    wreg     unsigned char 
  6172 ;; Auto vars:     Size  Location     Type
  6173 ;;  txData          1    1[COMRAM] unsigned char 
  6174 ;; Return value:  Size  Location     Type
  6175 ;;                  1    wreg      void 
  6176 ;; Registers used:
  6177 ;;		wreg
  6178 ;; Tracked objects:
  6179 ;;		On entry : 0/0
  6180 ;;		On exit  : 0/0
  6181 ;;		Unchanged: 0/0
  6182 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6184 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6186 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6187 ;;Total ram usage:        1 bytes
  6188 ;; Hardware stack levels used:    1
  6189 ;; Hardware stack levels required when called:    3
  6190 ;; This function calls:
  6191 ;;		Nothing
  6192 ;; This function is called by:
  6193 ;;		_putch
  6194 ;; This function uses a non-reentrant model
  6195 ;;
  6196                           
  6197                           	psect	text56
  6198  002C08                     __ptext56:
  6199                           	callstack 0
  6200  002C08                     _UART1_Write:
  6201                           	callstack 118
  6202                           
  6203                           ;incstack = 0
  6204                           ;UART1_Write@txData stored from wreg
  6205  002C08  6E02               	movwf	UART1_Write@txData^(0+1280),c
  6206  002C0A                     
  6207                           ;mcc_generated_files/uart1.c: 171: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 172: {;mcc_generated_files/uart1.c: 173:     while(0 == PIR4bits.U1TXIF)
  6208  002C0A  EF08  F016         	goto	l936
  6209  002C0E                     l937:
  6210  002C0E  0004               	clrwdt		;# 
  6211  002C10                     l936:
  6212                           
  6213                           ;mcc_generated_files/uart1.c: 173:     while(0 == PIR4bits.U1TXIF)
  6214  002C10  A2B7               	btfss	183,1,c	;volatile
  6215  002C12  EF0D  F016         	goto	u1341
  6216  002C16  EF0F  F016         	goto	u1340
  6217  002C1A                     u1341:
  6218  002C1A  EF07  F016         	goto	l937
  6219  002C1E                     u1340:
  6220  002C1E                     
  6221                           ;mcc_generated_files/uart1.c: 178:     U1TXB = txData;
  6222  002C1E  0061  F408  F2A3   	movff	UART1_Write@txData,675	;volatile
  6223  002C24  0012               	return		;funcret
  6224  002C26                     __end_of_UART1_Write:
  6225                           	callstack 0
  6226                           
  6227 ;; *************** function _abs *****************
  6228 ;; Defined at:
  6229 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
  6230 ;; Parameters:    Size  Location     Type
  6231 ;;  a               2   19[COMRAM] int 
  6232 ;; Auto vars:     Size  Location     Type
  6233 ;;		None
  6234 ;; Return value:  Size  Location     Type
  6235 ;;                  2   19[COMRAM] int 
  6236 ;; Registers used:
  6237 ;;		wreg, status,2, status,0
  6238 ;; Tracked objects:
  6239 ;;		On entry : 0/0
  6240 ;;		On exit  : 0/0
  6241 ;;		Unchanged: 0/0
  6242 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6243 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6245 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6246 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6247 ;;Total ram usage:        4 bytes
  6248 ;; Hardware stack levels used:    1
  6249 ;; Hardware stack levels required when called:    3
  6250 ;; This function calls:
  6251 ;;		Nothing
  6252 ;; This function is called by:
  6253 ;;		_dtoa
  6254 ;; This function uses a non-reentrant model
  6255 ;;
  6256                           
  6257                           	psect	text57
  6258  0029DE                     __ptext57:
  6259                           	callstack 0
  6260  0029DE                     _abs:
  6261                           	callstack 119
  6262  0029DE  BE15               	btfsc	(abs@a+1)^(0+1280),7,c
  6263  0029E0  EFFC  F014         	goto	u1580
  6264  0029E4  5015               	movf	(abs@a+1)^(0+1280),w,c
  6265  0029E6  E106               	bnz	u1581
  6266  0029E8  0414               	decf	abs@a^(0+1280),w,c
  6267  0029EA  B0D8               	btfsc	status,0,c
  6268  0029EC  EFFA  F014         	goto	u1581
  6269  0029F0  EFFC  F014         	goto	u1580
  6270  0029F4                     u1581:
  6271  0029F4  EF0A  F015         	goto	l1961
  6272  0029F8                     u1580:
  6273  0029F8  C514  F516         	movff	abs@a,??_abs
  6274  0029FC  C515  F517         	movff	abs@a+1,??_abs+1
  6275  002A00  1E16               	comf	??_abs^(0+1280),f,c
  6276  002A02  1E17               	comf	(??_abs+1)^(0+1280),f,c
  6277  002A04  4A16               	infsnz	??_abs^(0+1280),f,c
  6278  002A06  2A17               	incf	(??_abs+1)^(0+1280),f,c
  6279  002A08  C516  F514         	movff	??_abs,?_abs
  6280  002A0C  C517  F515         	movff	??_abs+1,?_abs+1
  6281  002A10  EF0E  F015         	goto	l1964
  6282  002A14                     l1961:
  6283  002A14  C514  F514         	movff	abs@a,?_abs
  6284  002A18  C515  F515         	movff	abs@a+1,?_abs+1
  6285  002A1C                     l1964:
  6286  002A1C  0012               	return		;funcret
  6287  002A1E                     __end_of_abs:
  6288                           	callstack 0
  6289                           
  6290 ;; *************** function ___aomod *****************
  6291 ;; Defined at:
  6292 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
  6293 ;; Parameters:    Size  Location     Type
  6294 ;;  dividend        8    1[COMRAM] long long 
  6295 ;;  divisor         8    9[COMRAM] long long 
  6296 ;; Auto vars:     Size  Location     Type
  6297 ;;  sign            1   18[COMRAM] unsigned char 
  6298 ;;  counter         1   17[COMRAM] unsigned char 
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  8    1[COMRAM] long long 
  6301 ;; Registers used:
  6302 ;;		wreg, status,2, status,0
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6308 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6309 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6311 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6312 ;;Total ram usage:       18 bytes
  6313 ;; Hardware stack levels used:    1
  6314 ;; Hardware stack levels required when called:    3
  6315 ;; This function calls:
  6316 ;;		Nothing
  6317 ;; This function is called by:
  6318 ;;		_dtoa
  6319 ;; This function uses a non-reentrant model
  6320 ;;
  6321                           
  6322                           	psect	text58
  6323  001B76                     __ptext58:
  6324                           	callstack 0
  6325  001B76                     ___aomod:
  6326                           	callstack 119
  6327  001B76  0E00               	movlw	0
  6328  001B78  6E13               	movwf	___aomod@sign^(0+1280),c
  6329  001B7A  BE09               	btfsc	(___aomod@dividend+7)^(0+1280),7,c
  6330  001B7C  EFC4  F00D         	goto	u1480
  6331  001B80  EFC2  F00D         	goto	u1481
  6332  001B84                     u1481:
  6333  001B84  EFD6  F00D         	goto	l3226
  6334  001B88                     u1480:
  6335  001B88  1E09               	comf	(___aomod@dividend+7)^(0+1280),f,c
  6336  001B8A  1E08               	comf	(___aomod@dividend+6)^(0+1280),f,c
  6337  001B8C  1E07               	comf	(___aomod@dividend+5)^(0+1280),f,c
  6338  001B8E  1E06               	comf	(___aomod@dividend+4)^(0+1280),f,c
  6339  001B90  1E05               	comf	(___aomod@dividend+3)^(0+1280),f,c
  6340  001B92  1E04               	comf	(___aomod@dividend+2)^(0+1280),f,c
  6341  001B94  1E03               	comf	(___aomod@dividend+1)^(0+1280),f,c
  6342  001B96  6C02               	negf	___aomod@dividend^(0+1280),c
  6343  001B98  0E00               	movlw	0
  6344  001B9A  2203               	addwfc	(___aomod@dividend+1)^(0+1280),f,c
  6345  001B9C  2204               	addwfc	(___aomod@dividend+2)^(0+1280),f,c
  6346  001B9E  2205               	addwfc	(___aomod@dividend+3)^(0+1280),f,c
  6347  001BA0  2206               	addwfc	(___aomod@dividend+4)^(0+1280),f,c
  6348  001BA2  2207               	addwfc	(___aomod@dividend+5)^(0+1280),f,c
  6349  001BA4  2208               	addwfc	(___aomod@dividend+6)^(0+1280),f,c
  6350  001BA6  2209               	addwfc	(___aomod@dividend+7)^(0+1280),f,c
  6351  001BA8  0E01               	movlw	1
  6352  001BAA  6E13               	movwf	___aomod@sign^(0+1280),c
  6353  001BAC                     l3226:
  6354  001BAC  BE11               	btfsc	(___aomod@divisor+7)^(0+1280),7,c
  6355  001BAE  EFDD  F00D         	goto	u1490
  6356  001BB2  EFDB  F00D         	goto	u1491
  6357  001BB6                     u1491:
  6358  001BB6  EFED  F00D         	goto	l3230
  6359  001BBA                     u1490:
  6360  001BBA  1E11               	comf	(___aomod@divisor+7)^(0+1280),f,c
  6361  001BBC  1E10               	comf	(___aomod@divisor+6)^(0+1280),f,c
  6362  001BBE  1E0F               	comf	(___aomod@divisor+5)^(0+1280),f,c
  6363  001BC0  1E0E               	comf	(___aomod@divisor+4)^(0+1280),f,c
  6364  001BC2  1E0D               	comf	(___aomod@divisor+3)^(0+1280),f,c
  6365  001BC4  1E0C               	comf	(___aomod@divisor+2)^(0+1280),f,c
  6366  001BC6  1E0B               	comf	(___aomod@divisor+1)^(0+1280),f,c
  6367  001BC8  6C0A               	negf	___aomod@divisor^(0+1280),c
  6368  001BCA  0E00               	movlw	0
  6369  001BCC  220B               	addwfc	(___aomod@divisor+1)^(0+1280),f,c
  6370  001BCE  220C               	addwfc	(___aomod@divisor+2)^(0+1280),f,c
  6371  001BD0  220D               	addwfc	(___aomod@divisor+3)^(0+1280),f,c
  6372  001BD2  220E               	addwfc	(___aomod@divisor+4)^(0+1280),f,c
  6373  001BD4  220F               	addwfc	(___aomod@divisor+5)^(0+1280),f,c
  6374  001BD6  2210               	addwfc	(___aomod@divisor+6)^(0+1280),f,c
  6375  001BD8  2211               	addwfc	(___aomod@divisor+7)^(0+1280),f,c
  6376  001BDA                     l3230:
  6377  001BDA  500A               	movf	___aomod@divisor^(0+1280),w,c
  6378  001BDC  100B               	iorwf	(___aomod@divisor+1)^(0+1280),w,c
  6379  001BDE  100C               	iorwf	(___aomod@divisor+2)^(0+1280),w,c
  6380  001BE0  100D               	iorwf	(___aomod@divisor+3)^(0+1280),w,c
  6381  001BE2  100E               	iorwf	(___aomod@divisor+4)^(0+1280),w,c
  6382  001BE4  100F               	iorwf	(___aomod@divisor+5)^(0+1280),w,c
  6383  001BE6  1010               	iorwf	(___aomod@divisor+6)^(0+1280),w,c
  6384  001BE8  1011               	iorwf	(___aomod@divisor+7)^(0+1280),w,c
  6385  001BEA  B4D8               	btfsc	status,2,c
  6386  001BEC  EFFA  F00D         	goto	u1501
  6387  001BF0  EFFC  F00D         	goto	u1500
  6388  001BF4                     u1501:
  6389  001BF4  EF44  F00E         	goto	l3246
  6390  001BF8                     u1500:
  6391  001BF8  0E01               	movlw	1
  6392  001BFA  6E12               	movwf	___aomod@counter^(0+1280),c
  6393  001BFC  EF0A  F00E         	goto	l3236
  6394  001C00                     l3234:
  6395  001C00  90D8               	bcf	status,0,c
  6396  001C02  360A               	rlcf	___aomod@divisor^(0+1280),f,c
  6397  001C04  360B               	rlcf	(___aomod@divisor+1)^(0+1280),f,c
  6398  001C06  360C               	rlcf	(___aomod@divisor+2)^(0+1280),f,c
  6399  001C08  360D               	rlcf	(___aomod@divisor+3)^(0+1280),f,c
  6400  001C0A  360E               	rlcf	(___aomod@divisor+4)^(0+1280),f,c
  6401  001C0C  360F               	rlcf	(___aomod@divisor+5)^(0+1280),f,c
  6402  001C0E  3610               	rlcf	(___aomod@divisor+6)^(0+1280),f,c
  6403  001C10  3611               	rlcf	(___aomod@divisor+7)^(0+1280),f,c
  6404  001C12  2A12               	incf	___aomod@counter^(0+1280),f,c
  6405  001C14                     l3236:
  6406  001C14  AE11               	btfss	(___aomod@divisor+7)^(0+1280),7,c
  6407  001C16  EF0F  F00E         	goto	u1511
  6408  001C1A  EF11  F00E         	goto	u1510
  6409  001C1E                     u1511:
  6410  001C1E  EF00  F00E         	goto	l3234
  6411  001C22                     u1510:
  6412  001C22                     l3238:
  6413  001C22  500A               	movf	___aomod@divisor^(0+1280),w,c
  6414  001C24  5C02               	subwf	___aomod@dividend^(0+1280),w,c
  6415  001C26  500B               	movf	(___aomod@divisor+1)^(0+1280),w,c
  6416  001C28  5803               	subwfb	(___aomod@dividend+1)^(0+1280),w,c
  6417  001C2A  500C               	movf	(___aomod@divisor+2)^(0+1280),w,c
  6418  001C2C  5804               	subwfb	(___aomod@dividend+2)^(0+1280),w,c
  6419  001C2E  500D               	movf	(___aomod@divisor+3)^(0+1280),w,c
  6420  001C30  5805               	subwfb	(___aomod@dividend+3)^(0+1280),w,c
  6421  001C32  500E               	movf	(___aomod@divisor+4)^(0+1280),w,c
  6422  001C34  5806               	subwfb	(___aomod@dividend+4)^(0+1280),w,c
  6423  001C36  500F               	movf	(___aomod@divisor+5)^(0+1280),w,c
  6424  001C38  5807               	subwfb	(___aomod@dividend+5)^(0+1280),w,c
  6425  001C3A  5010               	movf	(___aomod@divisor+6)^(0+1280),w,c
  6426  001C3C  5808               	subwfb	(___aomod@dividend+6)^(0+1280),w,c
  6427  001C3E  5011               	movf	(___aomod@divisor+7)^(0+1280),w,c
  6428  001C40  5809               	subwfb	(___aomod@dividend+7)^(0+1280),w,c
  6429  001C42  A0D8               	btfss	status,0,c
  6430  001C44  EF26  F00E         	goto	u1521
  6431  001C48  EF28  F00E         	goto	u1520
  6432  001C4C                     u1521:
  6433  001C4C  EF38  F00E         	goto	l3242
  6434  001C50                     u1520:
  6435  001C50  500A               	movf	___aomod@divisor^(0+1280),w,c
  6436  001C52  5E02               	subwf	___aomod@dividend^(0+1280),f,c
  6437  001C54  500B               	movf	(___aomod@divisor+1)^(0+1280),w,c
  6438  001C56  5A03               	subwfb	(___aomod@dividend+1)^(0+1280),f,c
  6439  001C58  500C               	movf	(___aomod@divisor+2)^(0+1280),w,c
  6440  001C5A  5A04               	subwfb	(___aomod@dividend+2)^(0+1280),f,c
  6441  001C5C  500D               	movf	(___aomod@divisor+3)^(0+1280),w,c
  6442  001C5E  5A05               	subwfb	(___aomod@dividend+3)^(0+1280),f,c
  6443  001C60  500E               	movf	(___aomod@divisor+4)^(0+1280),w,c
  6444  001C62  5A06               	subwfb	(___aomod@dividend+4)^(0+1280),f,c
  6445  001C64  500F               	movf	(___aomod@divisor+5)^(0+1280),w,c
  6446  001C66  5A07               	subwfb	(___aomod@dividend+5)^(0+1280),f,c
  6447  001C68  5010               	movf	(___aomod@divisor+6)^(0+1280),w,c
  6448  001C6A  5A08               	subwfb	(___aomod@dividend+6)^(0+1280),f,c
  6449  001C6C  5011               	movf	(___aomod@divisor+7)^(0+1280),w,c
  6450  001C6E  5A09               	subwfb	(___aomod@dividend+7)^(0+1280),f,c
  6451  001C70                     l3242:
  6452  001C70  90D8               	bcf	status,0,c
  6453  001C72  3211               	rrcf	(___aomod@divisor+7)^(0+1280),f,c
  6454  001C74  3210               	rrcf	(___aomod@divisor+6)^(0+1280),f,c
  6455  001C76  320F               	rrcf	(___aomod@divisor+5)^(0+1280),f,c
  6456  001C78  320E               	rrcf	(___aomod@divisor+4)^(0+1280),f,c
  6457  001C7A  320D               	rrcf	(___aomod@divisor+3)^(0+1280),f,c
  6458  001C7C  320C               	rrcf	(___aomod@divisor+2)^(0+1280),f,c
  6459  001C7E  320B               	rrcf	(___aomod@divisor+1)^(0+1280),f,c
  6460  001C80  320A               	rrcf	___aomod@divisor^(0+1280),f,c
  6461  001C82  2E12               	decfsz	___aomod@counter^(0+1280),f,c
  6462  001C84  EF11  F00E         	goto	l3238
  6463  001C88                     l3246:
  6464  001C88  5013               	movf	___aomod@sign^(0+1280),w,c
  6465  001C8A  B4D8               	btfsc	status,2,c
  6466  001C8C  EF4A  F00E         	goto	u1531
  6467  001C90  EF4C  F00E         	goto	u1530
  6468  001C94                     u1531:
  6469  001C94  EF5C  F00E         	goto	l3250
  6470  001C98                     u1530:
  6471  001C98  1E09               	comf	(___aomod@dividend+7)^(0+1280),f,c
  6472  001C9A  1E08               	comf	(___aomod@dividend+6)^(0+1280),f,c
  6473  001C9C  1E07               	comf	(___aomod@dividend+5)^(0+1280),f,c
  6474  001C9E  1E06               	comf	(___aomod@dividend+4)^(0+1280),f,c
  6475  001CA0  1E05               	comf	(___aomod@dividend+3)^(0+1280),f,c
  6476  001CA2  1E04               	comf	(___aomod@dividend+2)^(0+1280),f,c
  6477  001CA4  1E03               	comf	(___aomod@dividend+1)^(0+1280),f,c
  6478  001CA6  6C02               	negf	___aomod@dividend^(0+1280),c
  6479  001CA8  0E00               	movlw	0
  6480  001CAA  2203               	addwfc	(___aomod@dividend+1)^(0+1280),f,c
  6481  001CAC  2204               	addwfc	(___aomod@dividend+2)^(0+1280),f,c
  6482  001CAE  2205               	addwfc	(___aomod@dividend+3)^(0+1280),f,c
  6483  001CB0  2206               	addwfc	(___aomod@dividend+4)^(0+1280),f,c
  6484  001CB2  2207               	addwfc	(___aomod@dividend+5)^(0+1280),f,c
  6485  001CB4  2208               	addwfc	(___aomod@dividend+6)^(0+1280),f,c
  6486  001CB6  2209               	addwfc	(___aomod@dividend+7)^(0+1280),f,c
  6487  001CB8                     l3250:
  6488  001CB8  C502  F502         	movff	___aomod@dividend,?___aomod
  6489  001CBC  C503  F503         	movff	___aomod@dividend+1,?___aomod+1
  6490  001CC0  C504  F504         	movff	___aomod@dividend+2,?___aomod+2
  6491  001CC4  C505  F505         	movff	___aomod@dividend+3,?___aomod+3
  6492  001CC8  C506  F506         	movff	___aomod@dividend+4,?___aomod+4
  6493  001CCC  C507  F507         	movff	___aomod@dividend+5,?___aomod+5
  6494  001CD0  C508  F508         	movff	___aomod@dividend+6,?___aomod+6
  6495  001CD4  C509  F509         	movff	___aomod@dividend+7,?___aomod+7
  6496  001CD8  0012               	return		;funcret
  6497  001CDA                     __end_of___aomod:
  6498                           	callstack 0
  6499                           
  6500 ;; *************** function ___aodiv *****************
  6501 ;; Defined at:
  6502 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;  dividend        8    1[COMRAM] long long 
  6505 ;;  divisor         8    9[COMRAM] long long 
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;  quotient        8   19[COMRAM] long long 
  6508 ;;  sign            1   18[COMRAM] unsigned char 
  6509 ;;  counter         1   17[COMRAM] unsigned char 
  6510 ;; Return value:  Size  Location     Type
  6511 ;;                  8    1[COMRAM] long long 
  6512 ;; Registers used:
  6513 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6514 ;; Tracked objects:
  6515 ;;		On entry : 0/0
  6516 ;;		On exit  : 0/0
  6517 ;;		Unchanged: 0/0
  6518 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6519 ;;      Params:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6522 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6523 ;;Total ram usage:       26 bytes
  6524 ;; Hardware stack levels used:    1
  6525 ;; Hardware stack levels required when called:    3
  6526 ;; This function calls:
  6527 ;;		Nothing
  6528 ;; This function is called by:
  6529 ;;		_dtoa
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533                           	psect	text59
  6534  0019EE                     __ptext59:
  6535                           	callstack 0
  6536  0019EE                     ___aodiv:
  6537                           	callstack 119
  6538  0019EE  0E00               	movlw	0
  6539  0019F0  6E13               	movwf	___aodiv@sign^(0+1280),c
  6540  0019F2  BE11               	btfsc	(___aodiv@divisor+7)^(0+1280),7,c
  6541  0019F4  EF00  F00D         	goto	u1410
  6542  0019F8  EFFE  F00C         	goto	u1411
  6543  0019FC                     u1411:
  6544  0019FC  EF12  F00D         	goto	l3182
  6545  001A00                     u1410:
  6546  001A00  1E11               	comf	(___aodiv@divisor+7)^(0+1280),f,c
  6547  001A02  1E10               	comf	(___aodiv@divisor+6)^(0+1280),f,c
  6548  001A04  1E0F               	comf	(___aodiv@divisor+5)^(0+1280),f,c
  6549  001A06  1E0E               	comf	(___aodiv@divisor+4)^(0+1280),f,c
  6550  001A08  1E0D               	comf	(___aodiv@divisor+3)^(0+1280),f,c
  6551  001A0A  1E0C               	comf	(___aodiv@divisor+2)^(0+1280),f,c
  6552  001A0C  1E0B               	comf	(___aodiv@divisor+1)^(0+1280),f,c
  6553  001A0E  6C0A               	negf	___aodiv@divisor^(0+1280),c
  6554  001A10  0E00               	movlw	0
  6555  001A12  220B               	addwfc	(___aodiv@divisor+1)^(0+1280),f,c
  6556  001A14  220C               	addwfc	(___aodiv@divisor+2)^(0+1280),f,c
  6557  001A16  220D               	addwfc	(___aodiv@divisor+3)^(0+1280),f,c
  6558  001A18  220E               	addwfc	(___aodiv@divisor+4)^(0+1280),f,c
  6559  001A1A  220F               	addwfc	(___aodiv@divisor+5)^(0+1280),f,c
  6560  001A1C  2210               	addwfc	(___aodiv@divisor+6)^(0+1280),f,c
  6561  001A1E  2211               	addwfc	(___aodiv@divisor+7)^(0+1280),f,c
  6562  001A20  0E01               	movlw	1
  6563  001A22  6E13               	movwf	___aodiv@sign^(0+1280),c
  6564  001A24                     l3182:
  6565  001A24  BE09               	btfsc	(___aodiv@dividend+7)^(0+1280),7,c
  6566  001A26  EF19  F00D         	goto	u1420
  6567  001A2A  EF17  F00D         	goto	u1421
  6568  001A2E                     u1421:
  6569  001A2E  EF2B  F00D         	goto	l3188
  6570  001A32                     u1420:
  6571  001A32  1E09               	comf	(___aodiv@dividend+7)^(0+1280),f,c
  6572  001A34  1E08               	comf	(___aodiv@dividend+6)^(0+1280),f,c
  6573  001A36  1E07               	comf	(___aodiv@dividend+5)^(0+1280),f,c
  6574  001A38  1E06               	comf	(___aodiv@dividend+4)^(0+1280),f,c
  6575  001A3A  1E05               	comf	(___aodiv@dividend+3)^(0+1280),f,c
  6576  001A3C  1E04               	comf	(___aodiv@dividend+2)^(0+1280),f,c
  6577  001A3E  1E03               	comf	(___aodiv@dividend+1)^(0+1280),f,c
  6578  001A40  6C02               	negf	___aodiv@dividend^(0+1280),c
  6579  001A42  0E00               	movlw	0
  6580  001A44  2203               	addwfc	(___aodiv@dividend+1)^(0+1280),f,c
  6581  001A46  2204               	addwfc	(___aodiv@dividend+2)^(0+1280),f,c
  6582  001A48  2205               	addwfc	(___aodiv@dividend+3)^(0+1280),f,c
  6583  001A4A  2206               	addwfc	(___aodiv@dividend+4)^(0+1280),f,c
  6584  001A4C  2207               	addwfc	(___aodiv@dividend+5)^(0+1280),f,c
  6585  001A4E  2208               	addwfc	(___aodiv@dividend+6)^(0+1280),f,c
  6586  001A50  2209               	addwfc	(___aodiv@dividend+7)^(0+1280),f,c
  6587  001A52  0E01               	movlw	1
  6588  001A54  1A13               	xorwf	___aodiv@sign^(0+1280),f,c
  6589  001A56                     l3188:
  6590  001A56  EE21  F114         	lfsr	2,___aodiv@quotient
  6591  001A5A  0E07               	movlw	7
  6592  001A5C                     u1431:
  6593  001A5C  6ADE               	clrf	postinc2,c
  6594  001A5E  06E8               	decf	wreg,f,c
  6595  001A60  E2FD               	bc	u1431
  6596  001A62  500A               	movf	___aodiv@divisor^(0+1280),w,c
  6597  001A64  100B               	iorwf	(___aodiv@divisor+1)^(0+1280),w,c
  6598  001A66  100C               	iorwf	(___aodiv@divisor+2)^(0+1280),w,c
  6599  001A68  100D               	iorwf	(___aodiv@divisor+3)^(0+1280),w,c
  6600  001A6A  100E               	iorwf	(___aodiv@divisor+4)^(0+1280),w,c
  6601  001A6C  100F               	iorwf	(___aodiv@divisor+5)^(0+1280),w,c
  6602  001A6E  1010               	iorwf	(___aodiv@divisor+6)^(0+1280),w,c
  6603  001A70  1011               	iorwf	(___aodiv@divisor+7)^(0+1280),w,c
  6604  001A72  B4D8               	btfsc	status,2,c
  6605  001A74  EF3E  F00D         	goto	u1441
  6606  001A78  EF40  F00D         	goto	u1440
  6607  001A7C                     u1441:
  6608  001A7C  EF92  F00D         	goto	l3210
  6609  001A80                     u1440:
  6610  001A80  0E01               	movlw	1
  6611  001A82  6E12               	movwf	___aodiv@counter^(0+1280),c
  6612  001A84  EF4E  F00D         	goto	l3196
  6613  001A88                     l3194:
  6614  001A88  90D8               	bcf	status,0,c
  6615  001A8A  360A               	rlcf	___aodiv@divisor^(0+1280),f,c
  6616  001A8C  360B               	rlcf	(___aodiv@divisor+1)^(0+1280),f,c
  6617  001A8E  360C               	rlcf	(___aodiv@divisor+2)^(0+1280),f,c
  6618  001A90  360D               	rlcf	(___aodiv@divisor+3)^(0+1280),f,c
  6619  001A92  360E               	rlcf	(___aodiv@divisor+4)^(0+1280),f,c
  6620  001A94  360F               	rlcf	(___aodiv@divisor+5)^(0+1280),f,c
  6621  001A96  3610               	rlcf	(___aodiv@divisor+6)^(0+1280),f,c
  6622  001A98  3611               	rlcf	(___aodiv@divisor+7)^(0+1280),f,c
  6623  001A9A  2A12               	incf	___aodiv@counter^(0+1280),f,c
  6624  001A9C                     l3196:
  6625  001A9C  AE11               	btfss	(___aodiv@divisor+7)^(0+1280),7,c
  6626  001A9E  EF53  F00D         	goto	u1451
  6627  001AA2  EF55  F00D         	goto	u1450
  6628  001AA6                     u1451:
  6629  001AA6  EF44  F00D         	goto	l3194
  6630  001AAA                     u1450:
  6631  001AAA                     l3198:
  6632  001AAA  90D8               	bcf	status,0,c
  6633  001AAC  3614               	rlcf	___aodiv@quotient^(0+1280),f,c
  6634  001AAE  3615               	rlcf	(___aodiv@quotient+1)^(0+1280),f,c
  6635  001AB0  3616               	rlcf	(___aodiv@quotient+2)^(0+1280),f,c
  6636  001AB2  3617               	rlcf	(___aodiv@quotient+3)^(0+1280),f,c
  6637  001AB4  3618               	rlcf	(___aodiv@quotient+4)^(0+1280),f,c
  6638  001AB6  3619               	rlcf	(___aodiv@quotient+5)^(0+1280),f,c
  6639  001AB8  361A               	rlcf	(___aodiv@quotient+6)^(0+1280),f,c
  6640  001ABA  361B               	rlcf	(___aodiv@quotient+7)^(0+1280),f,c
  6641  001ABC  500A               	movf	___aodiv@divisor^(0+1280),w,c
  6642  001ABE  5C02               	subwf	___aodiv@dividend^(0+1280),w,c
  6643  001AC0  500B               	movf	(___aodiv@divisor+1)^(0+1280),w,c
  6644  001AC2  5803               	subwfb	(___aodiv@dividend+1)^(0+1280),w,c
  6645  001AC4  500C               	movf	(___aodiv@divisor+2)^(0+1280),w,c
  6646  001AC6  5804               	subwfb	(___aodiv@dividend+2)^(0+1280),w,c
  6647  001AC8  500D               	movf	(___aodiv@divisor+3)^(0+1280),w,c
  6648  001ACA  5805               	subwfb	(___aodiv@dividend+3)^(0+1280),w,c
  6649  001ACC  500E               	movf	(___aodiv@divisor+4)^(0+1280),w,c
  6650  001ACE  5806               	subwfb	(___aodiv@dividend+4)^(0+1280),w,c
  6651  001AD0  500F               	movf	(___aodiv@divisor+5)^(0+1280),w,c
  6652  001AD2  5807               	subwfb	(___aodiv@dividend+5)^(0+1280),w,c
  6653  001AD4  5010               	movf	(___aodiv@divisor+6)^(0+1280),w,c
  6654  001AD6  5808               	subwfb	(___aodiv@dividend+6)^(0+1280),w,c
  6655  001AD8  5011               	movf	(___aodiv@divisor+7)^(0+1280),w,c
  6656  001ADA  5809               	subwfb	(___aodiv@dividend+7)^(0+1280),w,c
  6657  001ADC  A0D8               	btfss	status,0,c
  6658  001ADE  EF73  F00D         	goto	u1461
  6659  001AE2  EF75  F00D         	goto	u1460
  6660  001AE6                     u1461:
  6661  001AE6  EF86  F00D         	goto	l3206
  6662  001AEA                     u1460:
  6663  001AEA  500A               	movf	___aodiv@divisor^(0+1280),w,c
  6664  001AEC  5E02               	subwf	___aodiv@dividend^(0+1280),f,c
  6665  001AEE  500B               	movf	(___aodiv@divisor+1)^(0+1280),w,c
  6666  001AF0  5A03               	subwfb	(___aodiv@dividend+1)^(0+1280),f,c
  6667  001AF2  500C               	movf	(___aodiv@divisor+2)^(0+1280),w,c
  6668  001AF4  5A04               	subwfb	(___aodiv@dividend+2)^(0+1280),f,c
  6669  001AF6  500D               	movf	(___aodiv@divisor+3)^(0+1280),w,c
  6670  001AF8  5A05               	subwfb	(___aodiv@dividend+3)^(0+1280),f,c
  6671  001AFA  500E               	movf	(___aodiv@divisor+4)^(0+1280),w,c
  6672  001AFC  5A06               	subwfb	(___aodiv@dividend+4)^(0+1280),f,c
  6673  001AFE  500F               	movf	(___aodiv@divisor+5)^(0+1280),w,c
  6674  001B00  5A07               	subwfb	(___aodiv@dividend+5)^(0+1280),f,c
  6675  001B02  5010               	movf	(___aodiv@divisor+6)^(0+1280),w,c
  6676  001B04  5A08               	subwfb	(___aodiv@dividend+6)^(0+1280),f,c
  6677  001B06  5011               	movf	(___aodiv@divisor+7)^(0+1280),w,c
  6678  001B08  5A09               	subwfb	(___aodiv@dividend+7)^(0+1280),f,c
  6679  001B0A  8014               	bsf	___aodiv@quotient^(0+1280),0,c
  6680  001B0C                     l3206:
  6681  001B0C  90D8               	bcf	status,0,c
  6682  001B0E  3211               	rrcf	(___aodiv@divisor+7)^(0+1280),f,c
  6683  001B10  3210               	rrcf	(___aodiv@divisor+6)^(0+1280),f,c
  6684  001B12  320F               	rrcf	(___aodiv@divisor+5)^(0+1280),f,c
  6685  001B14  320E               	rrcf	(___aodiv@divisor+4)^(0+1280),f,c
  6686  001B16  320D               	rrcf	(___aodiv@divisor+3)^(0+1280),f,c
  6687  001B18  320C               	rrcf	(___aodiv@divisor+2)^(0+1280),f,c
  6688  001B1A  320B               	rrcf	(___aodiv@divisor+1)^(0+1280),f,c
  6689  001B1C  320A               	rrcf	___aodiv@divisor^(0+1280),f,c
  6690  001B1E  2E12               	decfsz	___aodiv@counter^(0+1280),f,c
  6691  001B20  EF55  F00D         	goto	l3198
  6692  001B24                     l3210:
  6693  001B24  5013               	movf	___aodiv@sign^(0+1280),w,c
  6694  001B26  B4D8               	btfsc	status,2,c
  6695  001B28  EF98  F00D         	goto	u1471
  6696  001B2C  EF9A  F00D         	goto	u1470
  6697  001B30                     u1471:
  6698  001B30  EFAA  F00D         	goto	l3214
  6699  001B34                     u1470:
  6700  001B34  1E1B               	comf	(___aodiv@quotient+7)^(0+1280),f,c
  6701  001B36  1E1A               	comf	(___aodiv@quotient+6)^(0+1280),f,c
  6702  001B38  1E19               	comf	(___aodiv@quotient+5)^(0+1280),f,c
  6703  001B3A  1E18               	comf	(___aodiv@quotient+4)^(0+1280),f,c
  6704  001B3C  1E17               	comf	(___aodiv@quotient+3)^(0+1280),f,c
  6705  001B3E  1E16               	comf	(___aodiv@quotient+2)^(0+1280),f,c
  6706  001B40  1E15               	comf	(___aodiv@quotient+1)^(0+1280),f,c
  6707  001B42  6C14               	negf	___aodiv@quotient^(0+1280),c
  6708  001B44  0E00               	movlw	0
  6709  001B46  2215               	addwfc	(___aodiv@quotient+1)^(0+1280),f,c
  6710  001B48  2216               	addwfc	(___aodiv@quotient+2)^(0+1280),f,c
  6711  001B4A  2217               	addwfc	(___aodiv@quotient+3)^(0+1280),f,c
  6712  001B4C  2218               	addwfc	(___aodiv@quotient+4)^(0+1280),f,c
  6713  001B4E  2219               	addwfc	(___aodiv@quotient+5)^(0+1280),f,c
  6714  001B50  221A               	addwfc	(___aodiv@quotient+6)^(0+1280),f,c
  6715  001B52  221B               	addwfc	(___aodiv@quotient+7)^(0+1280),f,c
  6716  001B54                     l3214:
  6717  001B54  C514  F502         	movff	___aodiv@quotient,?___aodiv
  6718  001B58  C515  F503         	movff	___aodiv@quotient+1,?___aodiv+1
  6719  001B5C  C516  F504         	movff	___aodiv@quotient+2,?___aodiv+2
  6720  001B60  C517  F505         	movff	___aodiv@quotient+3,?___aodiv+3
  6721  001B64  C518  F506         	movff	___aodiv@quotient+4,?___aodiv+4
  6722  001B68  C519  F507         	movff	___aodiv@quotient+5,?___aodiv+5
  6723  001B6C  C51A  F508         	movff	___aodiv@quotient+6,?___aodiv+6
  6724  001B70  C51B  F509         	movff	___aodiv@quotient+7,?___aodiv+7
  6725  001B74  0012               	return		;funcret
  6726  001B76                     __end_of___aodiv:
  6727                           	callstack 0
  6728                           
  6729 ;; *************** function _ADCC_GetSingleConversion *****************
  6730 ;; Defined at:
  6731 ;;		line 137 in file "mcc_generated_files/adcc.c"
  6732 ;; Parameters:    Size  Location     Type
  6733 ;;  channel         1    wreg     enum E12866
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;  channel         1    5[COMRAM] enum E12866
  6736 ;; Return value:  Size  Location     Type
  6737 ;;                  2    1[COMRAM] unsigned short 
  6738 ;; Registers used:
  6739 ;;		wreg, status,2, status,0
  6740 ;; Tracked objects:
  6741 ;;		On entry : 0/0
  6742 ;;		On exit  : 0/0
  6743 ;;		Unchanged: 0/0
  6744 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6745 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6746 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6747 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6748 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6749 ;;Total ram usage:        5 bytes
  6750 ;; Hardware stack levels used:    1
  6751 ;; Hardware stack levels required when called:    3
  6752 ;; This function calls:
  6753 ;;		Nothing
  6754 ;; This function is called by:
  6755 ;;		_ADC
  6756 ;;		_VSR
  6757 ;;		_PWM
  6758 ;;		_EEPROM
  6759 ;; This function uses a non-reentrant model
  6760 ;;
  6761                           
  6762                           	psect	text60
  6763  002A92                     __ptext60:
  6764                           	callstack 0
  6765  002A92                     _ADCC_GetSingleConversion:
  6766                           	callstack 123
  6767                           
  6768                           ;incstack = 0
  6769                           ;ADCC_GetSingleConversion@channel stored from wreg
  6770  002A92  6E06               	movwf	ADCC_GetSingleConversion@channel^(0+1280),c
  6771  002A94                     
  6772                           ;mcc_generated_files/adcc.c: 137: adc_result_t ADCC_GetSingleConversion(adcc_channel_t c
      +                          hannel);mcc_generated_files/adcc.c: 138: {;mcc_generated_files/adcc.c: 140:     ADPCH = 
      +                          channel;
  6773  002A94  0061  F418  F3EC   	movff	ADCC_GetSingleConversion@channel,1004	;volatile
  6774  002A9A                     
  6775                           ;mcc_generated_files/adcc.c: 143:     ADCON0bits.ADON = 1;
  6776  002A9A  0103               	movlb	3	; () banked
  6777  002A9C  8FF3               	bsf	243,7,b	;volatile
  6778  002A9E                     
  6779                           ; BSR set to: 3
  6780                           ;mcc_generated_files/adcc.c: 146:     ADCON0bits.ADCONT = 0;
  6781  002A9E  9DF3               	bcf	243,6,b	;volatile
  6782  002AA0                     
  6783                           ; BSR set to: 3
  6784                           ;mcc_generated_files/adcc.c: 149:     ADCON0bits.ADGO = 1;
  6785  002AA0  81F3               	bsf	243,0,b	;volatile
  6786                           
  6787                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  6788  002AA2  EF54  F015         	goto	l438
  6789  002AA6                     l439:
  6790                           
  6791                           ; BSR set to: 3
  6792  002AA6  0004               	clrwdt		;# 
  6793  002AA8                     l438:
  6794                           
  6795                           ;mcc_generated_files/adcc.c: 153:     while (ADCON0bits.ADGO)
  6796  002AA8  0103               	movlb	3	; () banked
  6797  002AAA  B1F3               	btfsc	243,0,b	;volatile
  6798  002AAC  EF5A  F015         	goto	u1811
  6799  002AB0  EF5C  F015         	goto	u1810
  6800  002AB4                     u1811:
  6801  002AB4  EF53  F015         	goto	l439
  6802  002AB8                     u1810:
  6803  002AB8                     
  6804                           ; BSR set to: 3
  6805                           ;mcc_generated_files/adcc.c: 160:     return ((adc_result_t)((ADRESH << 8) + ADRESL));
  6806  002AB8  51EB               	movf	235,w,b	;volatile
  6807  002ABA  6E05               	movwf	(??_ADCC_GetSingleConversion+1)^(0+1280),c
  6808  002ABC  6A04               	clrf	??_ADCC_GetSingleConversion^(0+1280),c
  6809  002ABE  51EA               	movf	234,w,b	;volatile
  6810  002AC0  2404               	addwf	??_ADCC_GetSingleConversion^(0+1280),w,c
  6811  002AC2  6E02               	movwf	?_ADCC_GetSingleConversion^(0+1280),c
  6812  002AC4  0E00               	movlw	0
  6813  002AC6  2005               	addwfc	(??_ADCC_GetSingleConversion+1)^(0+1280),w,c
  6814  002AC8  6E03               	movwf	(?_ADCC_GetSingleConversion+1)^(0+1280),c
  6815  002ACA                     
  6816                           ; BSR set to: 3
  6817  002ACA  0012               	return		;funcret
  6818  002ACC                     __end_of_ADCC_GetSingleConversion:
  6819                           	callstack 0
  6820                           
  6821 ;; *************** function _INTERRUPT_InterruptManager *****************
  6822 ;; Defined at:
  6823 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6824 ;; Parameters:    Size  Location     Type
  6825 ;;		None
  6826 ;; Auto vars:     Size  Location     Type
  6827 ;;		None
  6828 ;; Return value:  Size  Location     Type
  6829 ;;                  1    wreg      void 
  6830 ;; Registers used:
  6831 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6832 ;; Tracked objects:
  6833 ;;		On entry : 0/0
  6834 ;;		On exit  : 0/0
  6835 ;;		Unchanged: 0/0
  6836 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6841 ;;Total ram usage:        0 bytes
  6842 ;; Hardware stack levels used:    1
  6843 ;; Hardware stack levels required when called:    2
  6844 ;; This function calls:
  6845 ;;		_TMR0_ISR
  6846 ;; This function is called by:
  6847 ;;		Interrupt level 2
  6848 ;; This function uses a non-reentrant model
  6849 ;;
  6850                           
  6851                           	psect	text61
  6852  002BC8                     __ptext61:
  6853                           	callstack 0
  6854  002BC8                     _INTERRUPT_InterruptManager:
  6855                           	callstack 115
  6856  002BC8                     
  6857                           ;mcc_generated_files/interrupt_manager.c: 61:     if(PIE3bits.TMR0IE == 1 && PIR3bits.TM
      +                          R0IF == 1)
  6858  002BC8  AEAB               	btfss	171,7,c	;volatile
  6859  002BCA  EFE9  F015         	goto	i2u241_41
  6860  002BCE  EFEB  F015         	goto	i2u241_40
  6861  002BD2                     i2u241_41:
  6862  002BD2  EFF4  F015         	goto	i2l764
  6863  002BD6                     i2u241_40:
  6864  002BD6  AEB6               	btfss	182,7,c	;volatile
  6865  002BD8  EFF0  F015         	goto	i2u242_41
  6866  002BDC  EFF2  F015         	goto	i2u242_40
  6867  002BE0                     i2u242_41:
  6868  002BE0  EFF4  F015         	goto	i2l764
  6869  002BE4                     i2u242_40:
  6870  002BE4                     
  6871                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         TMR0_ISR();
  6872  002BE4  EC66  F015         	call	_TMR0_ISR	;wreg free
  6873  002BE8                     i2l764:
  6874  002BE8  0011               	retfie		f
  6875  002BEA                     __end_of_INTERRUPT_InterruptManager:
  6876                           	callstack 0
  6877                           
  6878 ;; *************** function _TMR0_ISR *****************
  6879 ;; Defined at:
  6880 ;;		line 121 in file "mcc_generated_files/tmr0.c"
  6881 ;; Parameters:    Size  Location     Type
  6882 ;;		None
  6883 ;; Auto vars:     Size  Location     Type
  6884 ;;		None
  6885 ;; Return value:  Size  Location     Type
  6886 ;;                  1    wreg      void 
  6887 ;; Registers used:
  6888 ;;		wreg, status,2, status,0, pclath, tosl, cstack
  6889 ;; Tracked objects:
  6890 ;;		On entry : 0/0
  6891 ;;		On exit  : 0/0
  6892 ;;		Unchanged: 0/0
  6893 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6898 ;;Total ram usage:        0 bytes
  6899 ;; Hardware stack levels used:    1
  6900 ;; Hardware stack levels required when called:    1
  6901 ;; This function calls:
  6902 ;;		Absolute function
  6903 ;;		_LAB_ISR
  6904 ;;		_TMR0_DefaultInterruptHandler
  6905 ;; This function is called by:
  6906 ;;		_INTERRUPT_InterruptManager
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           	psect	text62
  6911  002ACC                     __ptext62:
  6912                           	callstack 0
  6913  002ACC                     _TMR0_ISR:
  6914                           	callstack 115
  6915  002ACC                     
  6916                           ;mcc_generated_files/tmr0.c: 124:     PIR3bits.TMR0IF = 0;
  6917  002ACC  9EB6               	bcf	182,7,c	;volatile
  6918  002ACE                     
  6919                           ;mcc_generated_files/tmr0.c: 125:     if(TMR0_InterruptHandler)
  6920  002ACE  0105               	movlb	5	; () banked
  6921  002AD0  51A5               	movf	_TMR0_InterruptHandler& (0+255),w,b
  6922  002AD2  11A6               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  6923  002AD4  B4D8               	btfsc	status,2,c
  6924  002AD6  EF6F  F015         	goto	i2u228_41
  6925  002ADA  EF71  F015         	goto	i2u228_40
  6926  002ADE                     i2u228_41:
  6927  002ADE  EF7D  F015         	goto	i2l549
  6928  002AE2                     i2u228_40:
  6929  002AE2                     
  6930                           ; BSR set to: 5
  6931                           ;mcc_generated_files/tmr0.c: 126:     {;mcc_generated_files/tmr0.c: 127:         TMR0_In
      +                          terruptHandler();
  6932  002AE2  D802               	call	i2u229_48
  6933  002AE4  EF7D  F015         	goto	i2u229_49
  6934  002AE8                     i2u229_48:
  6935  002AE8  0005               	push	
  6936  002AEA  6EFA               	movwf	pclath,c
  6937  002AEC  51A5               	movf	_TMR0_InterruptHandler& (0+255),w,b
  6938  002AEE  6EFD               	movwf	tosl,c
  6939  002AF0  51A6               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  6940  002AF2  6EFE               	movwf	tosh,c
  6941  002AF4  6AFF               	clrf	tosu,c
  6942  002AF6  50FA               	movf	pclath,w,c
  6943  002AF8  0012               	return		;indir
  6944  002AFA                     i2u229_49:
  6945  002AFA                     i2l549:
  6946  002AFA  0012               	return		;funcret
  6947  002AFC                     __end_of_TMR0_ISR:
  6948                           	callstack 0
  6949                           
  6950 ;; *************** function _LAB_ISR *****************
  6951 ;; Defined at:
  6952 ;;		line 88 in file "Labs/Lab08_Interrupts/Interrupt.c"
  6953 ;; Parameters:    Size  Location     Type
  6954 ;;		None
  6955 ;; Auto vars:     Size  Location     Type
  6956 ;;		None
  6957 ;; Return value:  Size  Location     Type
  6958 ;;                  1    wreg      void 
  6959 ;; Registers used:
  6960 ;;		wreg, status,2, status,0
  6961 ;; Tracked objects:
  6962 ;;		On entry : 0/0
  6963 ;;		On exit  : 0/0
  6964 ;;		Unchanged: 0/0
  6965 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  6966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6968 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6969 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6970 ;;Total ram usage:        1 bytes
  6971 ;; Hardware stack levels used:    1
  6972 ;; This function calls:
  6973 ;;		Nothing
  6974 ;; This function is called by:
  6975 ;;		_Interrupt
  6976 ;;		_TMR0_ISR
  6977 ;; This function uses a non-reentrant model
  6978 ;;
  6979                           
  6980                           	psect	text63
  6981  00257A                     __ptext63:
  6982                           	callstack 0
  6983  00257A                     _LAB_ISR:
  6984                           	callstack 115
  6985  00257A                     
  6986                           ;Labs/Lab08_Interrupts/Interrupt.c: 90:     if (rotateReg == 1) {
  6987  00257A  0105               	movlb	5	; () banked
  6988  00257C  056D               	decf	_rotateReg@Interrupt$F412& (0+255),w,b
  6989  00257E  A4D8               	btfss	status,2,c
  6990  002580  EFC4  F012         	goto	i2u182_41
  6991  002584  EFC6  F012         	goto	i2u182_40
  6992  002588                     i2u182_41:
  6993  002588  EFC8  F012         	goto	i2l3470
  6994  00258C                     i2u182_40:
  6995  00258C                     
  6996                           ; BSR set to: 5
  6997                           ;Labs/Lab08_Interrupts/Interrupt.c: 91:         rotateReg = 16;
  6998  00258C  0E10               	movlw	16
  6999  00258E  6F6D               	movwf	_rotateReg@Interrupt$F412& (0+255),b
  7000  002590                     i2l3470:
  7001                           
  7002                           ; BSR set to: 5
  7003                           ;Labs/Lab08_Interrupts/Interrupt.c: 94:     rotateReg >>= 1;
  7004  002590  90D8               	bcf	status,0,c
  7005  002592  336D               	rrcf	_rotateReg@Interrupt$F412& (0+255),f,b
  7006  002594                     
  7007                           ; BSR set to: 5
  7008                           ;Labs/Lab08_Interrupts/Interrupt.c: 98:     LATAbits.LATA5 = rotateReg & 1;
  7009  002594  C56D  F501         	movff	_rotateReg@Interrupt$F412,??_LAB_ISR
  7010  002598  0E01               	movlw	1
  7011  00259A  1601               	andwf	??_LAB_ISR^(0+1280),f,c
  7012  00259C  3A01               	swapf	??_LAB_ISR^(0+1280),f,c
  7013  00259E  4601               	rlncf	??_LAB_ISR^(0+1280),f,c
  7014  0025A0  50BE               	movf	190,w,c	;volatile
  7015  0025A2  1801               	xorwf	??_LAB_ISR^(0+1280),w,c
  7016  0025A4  0BDF               	andlw	-33
  7017  0025A6  1801               	xorwf	??_LAB_ISR^(0+1280),w,c
  7018  0025A8  6EBE               	movwf	190,c	;volatile
  7019  0025AA                     
  7020                           ; BSR set to: 5
  7021                           ;Labs/Lab08_Interrupts/Interrupt.c: 99:     LATAbits.LATA1 = (rotateReg & 2) >> 1;
  7022  0025AA  C56D  F501         	movff	_rotateReg@Interrupt$F412,??_LAB_ISR
  7023  0025AE  90D8               	bcf	status,0,c
  7024  0025B0  3201               	rrcf	??_LAB_ISR^(0+1280),f,c
  7025  0025B2  0E01               	movlw	1
  7026  0025B4  1601               	andwf	??_LAB_ISR^(0+1280),f,c
  7027  0025B6  4601               	rlncf	??_LAB_ISR^(0+1280),f,c
  7028  0025B8  50BE               	movf	190,w,c	;volatile
  7029  0025BA  1801               	xorwf	??_LAB_ISR^(0+1280),w,c
  7030  0025BC  0BFD               	andlw	-3
  7031  0025BE  1801               	xorwf	??_LAB_ISR^(0+1280),w,c
  7032  0025C0  6EBE               	movwf	190,c	;volatile
  7033  0025C2                     
  7034                           ; BSR set to: 5
  7035                           ;Labs/Lab08_Interrupts/Interrupt.c: 100:     LATAbits.LATA2 = (rotateReg & 4) >> 2;
  7036  0025C2  C56D  F501         	movff	_rotateReg@Interrupt$F412,??_LAB_ISR
  7037  0025C6  90D8               	bcf	status,0,c
  7038  0025C8  3201               	rrcf	??_LAB_ISR^(0+1280),f,c
  7039  0025CA  90D8               	bcf	status,0,c
  7040  0025CC  3201               	rrcf	??_LAB_ISR^(0+1280),f,c
  7041  0025CE  0E01               	movlw	1
  7042  0025D0  1601               	andwf	??_LAB_ISR^(0+1280),f,c
  7043  0025D2  4601               	rlncf	??_LAB_ISR^(0+1280),f,c
  7044  0025D4  4601               	rlncf	??_LAB_ISR^(0+1280),f,c
  7045  0025D6  50BE               	movf	190,w,c	;volatile
  7046  0025D8  1801               	xorwf	??_LAB_ISR^(0+1280),w,c
  7047  0025DA  0BFB               	andlw	-5
  7048  0025DC  1801               	xorwf	??_LAB_ISR^(0+1280),w,c
  7049  0025DE  6EBE               	movwf	190,c	;volatile
  7050  0025E0                     
  7051                           ; BSR set to: 5
  7052                           ;Labs/Lab08_Interrupts/Interrupt.c: 101:     LATCbits.LATC5 = (rotateReg & 8) >> 3;
  7053  0025E0  C56D  F501         	movff	_rotateReg@Interrupt$F412,??_LAB_ISR
  7054  0025E4  90D8               	bcf	status,0,c
  7055  0025E6  3201               	rrcf	??_LAB_ISR^(0+1280),f,c
  7056  0025E8  90D8               	bcf	status,0,c
  7057  0025EA  3201               	rrcf	??_LAB_ISR^(0+1280),f,c
  7058  0025EC  90D8               	bcf	status,0,c
  7059  0025EE  3201               	rrcf	??_LAB_ISR^(0+1280),f,c
  7060  0025F0  0E01               	movlw	1
  7061  0025F2  1601               	andwf	??_LAB_ISR^(0+1280),f,c
  7062  0025F4  3A01               	swapf	??_LAB_ISR^(0+1280),f,c
  7063  0025F6  4601               	rlncf	??_LAB_ISR^(0+1280),f,c
  7064  0025F8  50C0               	movf	192,w,c	;volatile
  7065  0025FA  1801               	xorwf	??_LAB_ISR^(0+1280),w,c
  7066  0025FC  0BDF               	andlw	-33
  7067  0025FE  1801               	xorwf	??_LAB_ISR^(0+1280),w,c
  7068  002600  6EC0               	movwf	192,c	;volatile
  7069  002602                     
  7070                           ; BSR set to: 5
  7071  002602  0012               	return		;funcret
  7072  002604                     __end_of_LAB_ISR:
  7073                           	callstack 0
  7074                           
  7075 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  7076 ;; Defined at:
  7077 ;;		line 138 in file "mcc_generated_files/tmr0.c"
  7078 ;; Parameters:    Size  Location     Type
  7079 ;;		None
  7080 ;; Auto vars:     Size  Location     Type
  7081 ;;		None
  7082 ;; Return value:  Size  Location     Type
  7083 ;;                  1    wreg      void 
  7084 ;; Registers used:
  7085 ;;		None
  7086 ;; Tracked objects:
  7087 ;;		On entry : 0/0
  7088 ;;		On exit  : 0/0
  7089 ;;		Unchanged: 0/0
  7090 ;; Data sizes:     COMRAM   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK11  BANK12  BANK13  BANK14  BANK15  BANK1
      +6  BANK17  BANK18  BANK19  BANK20
  7091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7095 ;;Total ram usage:        0 bytes
  7096 ;; Hardware stack levels used:    1
  7097 ;; This function calls:
  7098 ;;		Nothing
  7099 ;; This function is called by:
  7100 ;;		_TMR0_Initialize
  7101 ;;		_TMR0_ISR
  7102 ;; This function uses a non-reentrant model
  7103 ;;
  7104                           
  7105                           	psect	text64
  7106  002D5A                     __ptext64:
  7107                           	callstack 0
  7108  002D5A                     _TMR0_DefaultInterruptHandler:
  7109                           	callstack 115
  7110  002D5A  0012               	return		;funcret
  7111  002D5C                     __end_of_TMR0_DefaultInterruptHandler:
  7112                           	callstack 0
  7113                           
  7114                           ;
  7115                           ; Interrupt Vector Table @ 0x8
  7116                           ;
  7117                           
  7118                           	psect	ivt0x8
  7119  000008                     __pivt0x8:
  7120                           	callstack 0
  7121  000008                     ivt0x8_base:
  7122                           	callstack 0
  7123                           
  7124                           ; high-priority vector
  7125  000008  EFE4  F015         	goto	_INTERRUPT_InterruptManager
  7126  000018                     	org	16
  7127                           
  7128                           ; low-priority vector
  7129  000018  00FF               	reset	
  7130                           
  7131                           	psect	text65
  7132  000000                     __ptext65:
  7133                           	callstack 0
  7134  000000                     
  7135                           	psect	rparam
  7136  0000                     
  7137                           	psect	idloc
  7138                           
  7139                           ;Config register IDLOC0 @ 0x200000
  7140                           ;	unspecified, using default values
  7141  200000                     	org	2097152
  7142  200000  0FFF               	dw	4095
  7143                           
  7144                           ;Config register IDLOC1 @ 0x200002
  7145                           ;	unspecified, using default values
  7146  200002                     	org	2097154
  7147  200002  0FFF               	dw	4095
  7148                           
  7149                           ;Config register IDLOC2 @ 0x200004
  7150                           ;	unspecified, using default values
  7151  200004                     	org	2097156
  7152  200004  0FFF               	dw	4095
  7153                           
  7154                           ;Config register IDLOC3 @ 0x200006
  7155                           ;	unspecified, using default values
  7156  200006                     	org	2097158
  7157  200006  0FFF               	dw	4095
  7158                           
  7159                           ;Config register IDLOC4 @ 0x200008
  7160                           ;	unspecified, using default values
  7161  200008                     	org	2097160
  7162  200008  0FFF               	dw	4095
  7163                           
  7164                           ;Config register IDLOC5 @ 0x20000A
  7165                           ;	unspecified, using default values
  7166  20000A                     	org	2097162
  7167  20000A  0FFF               	dw	4095
  7168                           
  7169                           ;Config register IDLOC6 @ 0x20000C
  7170                           ;	unspecified, using default values
  7171  20000C                     	org	2097164
  7172  20000C  0FFF               	dw	4095
  7173                           
  7174                           ;Config register IDLOC7 @ 0x20000E
  7175                           ;	unspecified, using default values
  7176  20000E                     	org	2097166
  7177  20000E  0FFF               	dw	4095
  7178                           
  7179                           ;Config register IDLOC8 @ 0x200010
  7180                           ;	unspecified, using default values
  7181  200010                     	org	2097168
  7182  200010  0FFF               	dw	4095
  7183                           
  7184                           ;Config register IDLOC9 @ 0x200012
  7185                           ;	unspecified, using default values
  7186  200012                     	org	2097170
  7187  200012  0FFF               	dw	4095
  7188                           
  7189                           ;Config register IDLOC10 @ 0x200014
  7190                           ;	unspecified, using default values
  7191  200014                     	org	2097172
  7192  200014  0FFF               	dw	4095
  7193                           
  7194                           ;Config register IDLOC11 @ 0x200016
  7195                           ;	unspecified, using default values
  7196  200016                     	org	2097174
  7197  200016  0FFF               	dw	4095
  7198                           
  7199                           ;Config register IDLOC12 @ 0x200018
  7200                           ;	unspecified, using default values
  7201  200018                     	org	2097176
  7202  200018  0FFF               	dw	4095
  7203                           
  7204                           ;Config register IDLOC13 @ 0x20001A
  7205                           ;	unspecified, using default values
  7206  20001A                     	org	2097178
  7207  20001A  0FFF               	dw	4095
  7208                           
  7209                           ;Config register IDLOC14 @ 0x20001C
  7210                           ;	unspecified, using default values
  7211  20001C                     	org	2097180
  7212  20001C  0FFF               	dw	4095
  7213                           
  7214                           ;Config register IDLOC15 @ 0x20001E
  7215                           ;	unspecified, using default values
  7216  20001E                     	org	2097182
  7217  20001E  0FFF               	dw	4095
  7218                           
  7219                           	psect	config
  7220                           
  7221                           ;Config register CONFIG1 @ 0x300000
  7222                           ;	External Oscillator Selection
  7223                           ;	FEXTOSC = OFF, Oscillator not enabled
  7224                           ;	Reset Oscillator Selection
  7225                           ;	RSTOSC = HFINTOSC_1MHZ, HFINTOSC with HFFRQ = 4 MHz and CDIV = 4:1
  7226  300000                     	org	3145728
  7227  300000  EC                 	db	236
  7228                           
  7229                           ;Config register CONFIG2 @ 0x300001
  7230                           ;	Clock out Enable bit
  7231                           ;	CLKOUTEN = OFF, CLKOUT function is disabled
  7232                           ;	PRLOCKED One-Way Set Enable bit
  7233                           ;	PR1WAY = ON, PRLOCKED bit can be cleared and set only once
  7234                           ;	Clock Switch Enable bit
  7235                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  7236                           ;	Fail-Safe Clock Monitor Enable bit
  7237                           ;	FCMEN = ON, Fail-Safe Clock Monitor enabled
  7238                           ;	Fail-Safe Clock Monitor - Primary XTAL Enable bit
  7239                           ;	FCMENP = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on EXTOSC failure.
  7240                           ;	Fail-Safe Clock Monitor - Secondary XTAL Enable bit
  7241                           ;	FCMENS = ON, Fail-Safe Clock Monitor enabled; timer will flag FSCMP bit and OSFIF inte
      +                          rrupt on SOSC failure.
  7242  300001                     	org	3145729
  7243  300001  FF                 	db	255
  7244                           
  7245                           ;Config register CONFIG3 @ 0x300002
  7246                           ;	MCLR Enable bit
  7247                           ;	MCLRE = EXTMCLR, If LVP = 0, MCLR pin is MCLR; If LVP = 1, RE3 pin function is MCLR
  7248                           ;	Power-up timer selection bits
  7249                           ;	PWRTS = PWRT_OFF, PWRT is disabled
  7250                           ;	Multi-vector enable bit
  7251                           ;	MVECEN = OFF, Interrupt contoller does not use vector table to prioritze interrupts
  7252                           ;	IVTLOCK bit One-way set enable bit
  7253                           ;	IVT1WAY = ON, IVTLOCKED bit can be cleared and set only once
  7254                           ;	Low Power BOR Enable bit
  7255                           ;	LPBOREN = OFF, Low-Power BOR disabled
  7256                           ;	Brown-out Reset Enable bits
  7257                           ;	BOREN = SBORDIS, Brown-out Reset enabled , SBOREN bit is ignored
  7258  300002                     	org	3145730
  7259  300002  F7                 	db	247
  7260                           
  7261                           ;Config register CONFIG4 @ 0x300003
  7262                           ;	Brown-out Reset Voltage Selection bits
  7263                           ;	BORV = VBOR_1P9, Brown-out Reset Voltage (VBOR) set to 1.9V
  7264                           ;	ZCD Disable bit
  7265                           ;	ZCD = OFF, ZCD module is disabled. ZCD can be enabled by setting the ZCDSEN bit of ZCD
      +                          CON
  7266                           ;	PPSLOCK bit One-Way Set Enable bit
  7267                           ;	PPS1WAY = OFF, PPSLOCKED bit can be set and cleared repeatedly (subject to the unlock 
      +                          sequence)
  7268                           ;	Stack Full/Underflow Reset Enable bit
  7269                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7270                           ;	Low Voltage Programming Enable bit
  7271                           ;	LVP = ON, Low voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored
  7272                           ;	Extended Instruction Set Enable bit
  7273                           ;	XINST = OFF, Extended Instruction Set and Indexed Addressing Mode disabled
  7274  300003                     	org	3145731
  7275  300003  F7                 	db	247
  7276                           
  7277                           ;Config register CONFIG5 @ 0x300004
  7278                           ;	WDT Period selection bits
  7279                           ;	WDTCPS = WDTCPS_12, Divider ratio 1:131072
  7280                           ;	WDT operating mode
  7281                           ;	WDTE = SWDTEN, WDT enabled/disabled by SWDTEN bit
  7282  300004                     	org	3145732
  7283  300004  AC                 	db	172
  7284                           
  7285                           ;Config register CONFIG6 @ 0x300005
  7286                           ;	WDT Window Select bits
  7287                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  7288                           ;	WDT input clock selector
  7289                           ;	WDTCCS = LFINTOSC, WDT reference clock is the 31.0 kHz LFINTOSC
  7290  300005                     	org	3145733
  7291  300005  C7                 	db	199
  7292                           
  7293                           ;Config register CONFIG7 @ 0x300006
  7294                           ;	Boot Block Size selection bits
  7295                           ;	BBSIZE = BBSIZE_512, Boot Block size is 512 words
  7296                           ;	Boot Block enable bit
  7297                           ;	BBEN = OFF, Boot block disabled
  7298                           ;	Storage Area Flash enable bit
  7299                           ;	SAFEN = OFF, SAF disabled
  7300                           ;	Background Debugger
  7301                           ;	DEBUG = OFF, Background Debugger disabled
  7302  300006                     	org	3145734
  7303  300006  FF                 	db	255
  7304                           
  7305                           ;Config register CONFIG8 @ 0x300007
  7306                           ;	Boot Block Write Protection bit
  7307                           ;	WRTB = OFF, Boot Block not Write protected
  7308                           ;	Configuration Register Write Protection bit
  7309                           ;	WRTC = OFF, Configuration registers not Write protected
  7310                           ;	Data EEPROM Write Protection bit
  7311                           ;	WRTD = OFF, Data EEPROM not Write protected
  7312                           ;	SAF Write protection bit
  7313                           ;	WRTSAF = OFF, SAF not Write Protected
  7314                           ;	Application Block write protection bit
  7315                           ;	WRTAPP = OFF, Application Block not write protected
  7316  300007                     	org	3145735
  7317  300007  FF                 	db	255
  7318                           
  7319                           ;Config register CONFIG9 @ 0x300008
  7320                           ;	PFM and Data EEPROM Code Protection bit
  7321                           ;	CP = OFF, PFM and Data EEPROM code protection disabled
  7322  300008                     	org	3145736
  7323  300008  FF                 	db	255
  7324                           
  7325                           ; Padding undefined space
  7326  300009                     	org	3145737
  7327  300009  FF                 	db	255
  7328                           tosu	equ	0x4FF
  7329                           tosh	equ	0x4FE
  7330                           tosl	equ	0x4FD
  7331                           stkptr	equ	0x4FC
  7332                           pclatu	equ	0x4FB
  7333                           pclath	equ	0x4FA
  7334                           pcl	equ	0x4F9
  7335                           tblptru	equ	0x4F8
  7336                           tblptrh	equ	0x4F7
  7337                           tblptrl	equ	0x4F6
  7338                           tablat	equ	0x4F5
  7339                           prodh	equ	0x4F4
  7340                           prodl	equ	0x4F3
  7341                           indf0	equ	0x4EF
  7342                           postinc0	equ	0x4EE
  7343                           postdec0	equ	0x4ED
  7344                           preinc0	equ	0x4EC
  7345                           plusw0	equ	0x4EB
  7346                           fsr0h	equ	0x4EA
  7347                           fsr0l	equ	0x4E9
  7348                           wreg	equ	0x4E8
  7349                           indf1	equ	0x4E7
  7350                           postinc1	equ	0x4E6
  7351                           postdec1	equ	0x4E5
  7352                           preinc1	equ	0x4E4
  7353                           plusw1	equ	0x4E3
  7354                           fsr1h	equ	0x4E2
  7355                           fsr1l	equ	0x4E1
  7356                           bsr	equ	0x4E0
  7357                           indf2	equ	0x4DF
  7358                           postinc2	equ	0x4DE
  7359                           postdec2	equ	0x4DD
  7360                           preinc2	equ	0x4DC
  7361                           plusw2	equ	0x4DB
  7362                           fsr2h	equ	0x4DA
  7363                           fsr2l	equ	0x4D9
  7364                           status	equ	0x4D8

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         56
    Persistent  16
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     93      94
    BANK5           160     10      81
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2778_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK5[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK5[32]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK5[2]), 

    PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Period_DefaultInterruptHandler(), 

    PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output2_DefaultInterruptHandler(), 

    PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output1_DefaultInterruptHandler(), 

    PWM1_16BIT_Period_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Period_DefaultInterruptHandler(), Absolute function(), 

    PWM1_16BIT_Slice1Output2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output2_DefaultInterruptHandler(), Absolute function(), 

    PWM1_16BIT_Slice1Output1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> PWM1_16BIT_Slice1Output1_DefaultInterruptHandler(), Absolute function(), 

    UART1_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), 

    UART1_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), 

    UART1_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), 

    UART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultErrorHandler(), Absolute function(), 

    UART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultOverrunErrorHandler(), Absolute function(), 

    UART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> UART1_DefaultFramingErrorHandler(), Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), LAB_ISR(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), TMR0_DefaultInterruptHandler(), LAB_ISR(), 


Critical Paths under _main in COMRAM

    _main->_ADC
    _main->_EEPROM
    _main->_VSR
    _SYSTEM_Initialize->_TMR1_Initialize
    _UART1_Initialize->_UART1_SetErrorHandler
    _UART1_Initialize->_UART1_SetFramingErrorHandler
    _UART1_Initialize->_UART1_SetOverrunErrorHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _PWM1_16BIT_Initialize->_PWM1_16BIT_Period_SetInterruptHandler
    _PWM1_16BIT_Initialize->_PWM1_16BIT_Slice1Output1_SetInterruptHandler
    _PWM1_16BIT_Initialize->_PWM1_16BIT_Slice1Output2_SetInterruptHandler
    _Interrupt->_TMR0_SetInterruptHandler
    _TMR1_Reload->_TMR1_WriteTimer
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_UART1_Write
    _abs->___aomod

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR0_ISR->_LAB_ISR

Critical Paths under _main in BANK5

    _VSR->_printf
    _PWM->_printf
    _EEPROM->_printf
    _ADC->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   27753
                                              8 BANK5      2     2      0
                                _ADC
                              _Blink
                             _EEPROM
                         _HelloWorld
                          _Interrupt
                                _PWM
                             _Rotate
                  _SYSTEM_Initialize
                        _SleepWakeUp
                             _Timer1
                                _VSR
                      _checkButtonS1
                            _nextLab
 ---------------------------------------------------------------------------------
 (1) _nextLab                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _checkButtonS1                                        1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _VSR                                                  3     3      0    6502
                                             90 COMRAM     3     3      0
           _ADCC_GetSingleConversion
                             _printf
 ---------------------------------------------------------------------------------
 (1) _Timer1                                               1     1      0     164
                                              3 COMRAM     1     1      0
            _TMR1_HasOverflowOccured
                        _TMR1_Reload
                    _TMR1_StartTimer
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (1) _SleepWakeUp                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     762
                    _ADCC_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
              _PWM1_16BIT_Initialize
                    _TMR0_Initialize
                    _TMR1_Initialize
                    _TMR2_Initialize
                   _UART1_Initialize
                    _WWDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WWDT_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0     294
              _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetOverrunErrorHandler                         2     0      2      98
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetFramingErrorHandler                         2     0      2      98
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _UART1_SetErrorHandler                                2     0      2      98
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      2     2      0       0
                                              1 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _PWM1_16BIT_Initialize                                0     0      0     294
_PWM1_16BIT_Period_SetInterruptHandl
_PWM1_16BIT_Slice1Output1_SetInterru
_PWM1_16BIT_Slice1Output2_SetInterru
 ---------------------------------------------------------------------------------
 (3) _PWM1_16BIT_Slice1Output2_SetInterruptHandler         2     0      2      98
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM1_16BIT_Slice1Output1_SetInterruptHandler         2     0      2      98
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PWM1_16BIT_Period_SetInterruptHandler                2     0      2      98
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Rotate                                               1     1      0       0
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _PWM                                                  1     1      0    6622
                                             90 COMRAM     1     1      0
           _ADCC_GetSingleConversion
     _PWM1_16BIT_LoadBufferRegisters
_PWM1_16BIT_SetSlice1Output1DutyCycl
              _PWM_Output_D7_Disable
               _PWM_Output_D7_Enable
                    _TMR2_StartTimer
                     _TMR2_StopTimer
                             _printf
 ---------------------------------------------------------------------------------
 (2) _TMR2_StopTimer                                       0     0      0       0
                          _TMR2_Stop
 ---------------------------------------------------------------------------------
 (3) _TMR2_Stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
                         _TMR2_Start
 ---------------------------------------------------------------------------------
 (3) _TMR2_Start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Output_D7_Enable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Output_D7_Disable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM1_16BIT_SetSlice1Output1DutyCycleRegister         2     0      2     120
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _PWM1_16BIT_LoadBufferRegisters                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Interrupt                                            0     0      0     174
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     174
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _HelloWorld                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _EEPROM                                               3     3      0    6863
                                             90 COMRAM     3     3      0
           _ADCC_GetSingleConversion
                    _DATAEE_ReadByte
                   _DATAEE_WriteByte
                             _printf
 ---------------------------------------------------------------------------------
 (2) _DATAEE_WriteByte                                     4     1      3     241
                                              1 COMRAM     4     1      3
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      2     0      2     120
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _Blink                                                1     1      0     164
                                              3 COMRAM     1     1      0
            _TMR1_HasOverflowOccured
                        _TMR1_Reload
                    _TMR1_StartTimer
                     _TMR1_StopTimer
 ---------------------------------------------------------------------------------
 (2) _TMR1_StopTimer                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR1_Reload                                          0     0      0     164
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_WriteTimer                                      2     0      2     164
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _TMR1_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  3     3      0    6502
                                             90 COMRAM     3     3      0
           _ADCC_GetSingleConversion
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                               8     4      4    6480
                                              0 BANK5      8     4      4
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6039
                                             82 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5685
                                             66 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4314
                                             30 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2665
                                             19 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              1 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1213
                                             12 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     812
                                              3 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0      44
                                              2 COMRAM     1     1      0
                        _UART1_Write
 ---------------------------------------------------------------------------------
 (7) _UART1_Write                                          1     1      0      22
                                              1 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             19 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              1 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              1 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _ADCC_GetSingleConversion                             5     3      2      22
                                              1 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _INTERRUPT_InterruptManager                          0     0      0       0
                           _TMR0_ISR
 ---------------------------------------------------------------------------------
 (12) _TMR0_ISR                                            0     0      0       0
                   Absolute function *
                            _LAB_ISR *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _TMR0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _LAB_ISR                                             1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (13) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
     _ADCC_GetSingleConversion
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
   _Blink
     _TMR1_HasOverflowOccured
     _TMR1_Reload
       _TMR1_WriteTimer
     _TMR1_StartTimer
     _TMR1_StopTimer
   _EEPROM
     _ADCC_GetSingleConversion
     _DATAEE_ReadByte
     _DATAEE_WriteByte
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
   _HelloWorld
   _Interrupt
     _TMR0_SetInterruptHandler
   _PWM
     _ADCC_GetSingleConversion
     _PWM1_16BIT_LoadBufferRegisters
     _PWM1_16BIT_SetSlice1Output1DutyCycleRegister
     _PWM_Output_D7_Disable
     _PWM_Output_D7_Enable
     _TMR2_StartTimer
       _TMR2_Start
     _TMR2_StopTimer
       _TMR2_Stop
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
   _Rotate
   _SYSTEM_Initialize
     _ADCC_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM1_16BIT_Initialize
       _PWM1_16BIT_Period_SetInterruptHandler
       _PWM1_16BIT_Slice1Output1_SetInterruptHandler
       _PWM1_16BIT_Slice1Output2_SetInterruptHandler
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR1_Initialize
     _TMR2_Initialize
     _UART1_Initialize
       _UART1_SetErrorHandler
       _UART1_SetFramingErrorHandler
       _UART1_SetOverrunErrorHandler
     _WWDT_Initialize
   _SleepWakeUp
   _Timer1
     _TMR1_HasOverflowOccured
     _TMR1_Reload
       _TMR1_WriteTimer
     _TMR1_StartTimer
     _TMR1_StopTimer
   _VSR
     _ADCC_GetSingleConversion
     _printf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
                   _UART1_Write
               _fputs
                 _fputc
                   _putch
                     _UART1_Write
               _strlen
           _fputc
             _putch
               _UART1_Write
   _checkButtonS1
   _nextLab

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _LAB_ISR *
     _TMR0_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             FFF      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK20          100      0       0      35        0.0%
BANK20             100      0       0      36        0.0%
BITBANK19          100      0       0      33        0.0%
BANK19             100      0       0      34        0.0%
BITBANK18          100      0       0      31        0.0%
BANK18             100      0       0      32        0.0%
BITBANK17          100      0       0      29        0.0%
BANK17             100      0       0      30        0.0%
BITBANK16          100      0       0      27        0.0%
BANK16             100      0       0      28        0.0%
BITBANK15          100      0       0      25        0.0%
BANK15             100      0       0      26        0.0%
BITBANK14          100      0       0      23        0.0%
BANK14             100      0       0      24        0.0%
BITBANK13          100      0       0      21        0.0%
BANK13             100      0       0      22        0.0%
BITBANK12          100      0       0      19        0.0%
BANK12             100      0       0      20        0.0%
BITBANK11          100      0       0      17        0.0%
BANK11             100      0       0      18        0.0%
BITBANK10          100      0       0      15        0.0%
BANK10             100      0       0      16        0.0%
BITBANK9           100      0       0      13        0.0%
BANK9              100      0       0      14        0.0%
BITBANK8           100      0       0      11        0.0%
BANK8              100      0       0      12        0.0%
BITBANK7           100      0       0       9        0.0%
BANK7              100      0       0      10        0.0%
BITBANK6           100      0       0       7        0.0%
BANK6              100      0       0       8        0.0%
BITBANK5            A0      0       0       4        0.0%
BANK5               A0      A      51       5       50.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5D      5E       1       98.9%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AF       6        0.0%
DATA                 0      0      AF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Wed Mar 03 23:10:10 2021

                                    __size_of_WWDT_Initialize 000C  
                                                          l21 2980  
                                                          l24 2998  
                                                          l19 296C  
                                                          l64 244C  
                                                          l90 22CE  
                                                          l59 23EE  
                                                          l93 22E4  
                                                          l89 221C  
                                                         l120 1F3E  
                                                         l201 24E2  
                                                         l123 2022  
                                                         l204 2D24  
                                                         l207 2D2C  
                                                         l311 2862  
                                                         l240 203C  
                                                         l241 2100  
                                                         l161 1E08  
                                                         l154 1CF0  
                                                         l155 1DF2  
                                                         l244 206E  
                                                         l247 211A  
                                                         _ADC 1F28  
                                                         l344 1E20  
                                                         l441 2ACA  
                                                         l426 2808  
                                                         l530 2BA4  
                                                         l347 1F26  
                                                         l283 294C  
                                                         l604 2CA6  
                                                         l284 294E  
                                                         l285 2954  
                                                         l438 2AA8  
                                                         l278 2920  
                                                         l439 2AA6  
                                                         l552 2D12  
                                                         l721 2D38  
                                                         l706 2C40  
                                                         l715 2D44  
                                                         l724 2D32  
                                                         l581 2D50  
                                                         l670 28E8  
                                                         l718 2D3E  
                                                         l910 26DA  
                                                         l823 2B28  
                                                         l592 2B56  
                                                         l584 2D4A  
                                                         l672 28F6  
                                                         l832 2CC0  
                                                         l673 2906  
                                                         l826 2C78  
                                                         l578 2A56  
                                                         l595 2CB4  
                                                         l676 2C92  
                                                         l757 2D54  
                                                         l829 2C5C  
                                                         l936 2C10  
                                                         l960 2CD6  
                                                         l937 2C0E  
                                                         l945 2D1C  
                                                         l939 2C24  
                                                         l963 2CEA  
                                                         l957 2CE0  
                                                         _GIE 0026B7  
                                                         _PR2 00031D  
                                                         _PWM 244E  
                                                         _VSR 1CDA  
                                             _timer1ReloadVal 05A3  
                                                         _abs 29DE  
                                                         _pad 22E6  
                                     __size_of_PMD_Initialize 001C  
                                             _TMR2_Initialize 2C26  
                                                         tosl 0004FD  
                                                         wreg 0004E8  
                                             __end_of_LAB_ISR 2604  
                                                        ?_ADC 0501  
                                                        ?_PWM 0501  
                            ??_PWM1_16BIT_LoadBufferRegisters 0502  
                             ?_PWM1_16BIT_LoadBufferRegisters 0501  
                                                        ?_VSR 0501  
                                                        l1100 2D58  
                                                        l1200 28B4  
                                                        l1121 2D08  
                                                        l1018 2744  
                                                        l1115 2CFE  
                                                        ?_abs 0514  
                                                        l1204 2C06  
                                                        l1118 2CF4  
                                                        l1321 1B74  
                                                        l1082 2670  
                                                        l1334 1CD8  
                                                        l1094 2CCC  
                                                        l3200 1ABC  
                                                        l3202 1AEA  
                                                        l3210 1B24  
                                                        l4010 1F28  
                                                        l3212 1B34  
                                                        l3204 1B0A  
                                                        l3220 1B7A  
                                                        l3140 2D16  
                                                        l3300 15EA  
                                                        l4004 2B58  
                                                        l4020 1F6E  
                                                        l4012 1F38  
                                                        l4100 1EA2  
                                                        l1196 289E  
                                                        l3214 1B54  
                                                        l3206 1B0C  
                                                        l3230 1BDA  
                                                        l3222 1B88  
                                                        l3150 2530  
                                                        l3142 24E4  
                                                        l3310 1688  
                                                        l3302 15F2  
                                                        l4006 2B62  
                                                        l4022 1F9E  
                                                        l4030 200C  
                                                        l4014 1F3C  
                                                        l4110 1F22  
                                                        l4102 1EB8  
                                                        l3208 1B1E  
                                                        l3240 1C50  
                                                        l3232 1BF8  
                                                        l3224 1BA8  
                                                        l3136 2C0A  
                                                        l3152 2566  
                                                        l3144 24F6  
                                                        l3160 29B8  
                                                        l3320 1744  
                                                        l3312 168E  
                                                        l3304 15FA  
                                                        l4032 201E  
                                                        l4024 1FB4  
                                                        l4016 1F42  
                                                        l4104 1ED0  
                                                        l3400 2D40  
                                                        l4040 1CFA  
                                                        l4120 2132  
                                                        l4112 211C  
                                                        l3250 1CB8  
                                                        l3242 1C70  
                                                        l3234 1C00  
                                                        l3226 1BAC  
                                                        l3218 1B76  
                                                        l3138 2C1E  
                                                        l3146 2508  
                                                        l3162 29BC  
                                                        l3170 2A84  
                                                        l3330 1796  
                                                        l3322 175E  
                                                        l3306 1600  
                                                        l3314 16F2  
                                                        l4026 1FCC  
                                                        l4018 1F52  
                                                        l4106 1EEE  
                                                        l3402 2D34  
                                                        l3410 2CF6  
                                                        l4050 1D54  
                                                        l4042 1D0A  
                                                        l4034 1CDA  
                                                        l4130 215A  
                                                        l4122 213A  
                                                        l4114 2120  
                                                        l3180 1A20  
                                                        l3244 1C82  
                                                        l3236 1C14  
                                                        l3228 1BBA  
                                                        l3148 2512  
                                                        l3156 299A  
                                                        l3164 2A58  
                                                        l3260 2318  
                                                        l3332 17A8  
                                                        l3316 170C  
                                                        l3324 176E  
                                                        l3308 1682  
                                                        l3420 275C  
                                                        l4028 1FEA  
                                                        l3500 2900  
                                                        l4108 1F10  
                                                        l4060 245E  
                                                        l3412 2CEC  
                                                        l3404 2CD8  
                                                        l4052 1D68  
                                                        l4044 1D1C  
                                                        l4036 1CEA  
                                                        l4132 2162  
                                                        l4124 2142  
                                                        l4140 217A  
                                                        l4116 2122  
                                                        l3190 1A62  
                                                        l3182 1A24  
                                                        l3174 19EE  
                                                        l3238 1C22  
                                                        l3246 1C88  
                                                        l3158 29A6  
                                                        l3166 2A64  
                                                        l3270 237E  
                                                        l3262 2324  
                                                        l3254 22E6  
                                                        l3334 17B4  
                                                        l3326 1780  
                                                        l3318 172A  
                                                        l3350 184A  
                                                        l3342 17F8  
                                                        l3422 2782  
                                                        l3430 2CA8  
                                                        l3502 2C7A  
                                                        l4070 2480  
                                                        l4062 2462  
                                                        l3510 27AE  
                                                        l3414 2D00  
                                                        l3406 2CCE  
                                                        l4054 1DEE  
                                                        l4046 1D4C  
                                                        l4038 1CEE  
                                                        l4134 216A  
                                                        l4126 214A  
                                                        l4142 21E6  
                                                        l4118 212A  
                                                        l3440 2AA0  
                                                        l3192 1A80  
                                                        l3184 1A32  
                                                        l3176 19F2  
                                                        l3248 1C98  
                                                        l3168 2A68  
                                                        l3272 2392  
                                                        l3264 2338  
                                                        l1912 232C  
                                                        l3256 22F6  
                                                        l3336 17BC  
                                                        l3328 1790  
                                                        l3280 1514  
                                                        l3360 1932  
                                                        l3352 1874  
                                                        l3344 1822  
                                                        l3416 2746  
                                                        l3424 2D4C  
                                                        l3432 2D46  
                                                        l3600 23C2  
                                                        l3504 2C84  
                                                        l4080 24D6  
                                                        l4072 249E  
                                                        l4064 2464  
                                                        l3520 2B9E  
                                                        l3512 2B80  
                                                        l3408 2CE2  
                                                        l4056 1E04  
                                                        l4144 21F8  
                                                        l4136 2172  
                                                        l4128 2152  
                                                        l3442 2AB8  
                                                        l3434 2A94  
                                                        l3194 1A88  
                                                        l3186 1A52  
                                                        l3178 1A00  
                                                        l3266 234C  
                                                        l3258 230A  
                                                        l3338 17CE  
                                                        l3290 158E  
                                                        l3282 1534  
                                                        l3362 195C  
                                                        l3370 198E  
                                                        l3354 189E  
                                                        l3346 1834  
                                                        l3418 274E  
                                                        l3426 2C94  
                                                        l3610 23F0  
                                                        l3602 23C6  
                                                        l3506 2C8E  
                                                        l4090 1E24  
                                                        l4082 24DA  
                                                        l4074 24B4  
                                                        l4066 246C  
                                                        l4058 244E  
                                                        l3514 2B8E  
                                                        l3522 2A1E  
                                                        l3530 2C26  
                                                        l1915 236E  
                                                        l1923 15B4  
                                                        l3436 2A9A  
                                                        l3196 1A9C  
                                                        l3188 1A56  
                                                        l3276 29DE  
                                                        l3268 2350  
                                                        l3292 15A8  
                                                        l3284 155C  
                                                        l3372 19A0  
                                                        l3364 196E  
                                                        l3356 18FA  
                                                        l3348 1846  
                                                        l3612 23F4  
                                                        l3620 2432  
                                                        l3604 23CA  
                                                        l4092 1E34  
                                                        l4084 1E0A  
                                                        l3460 2D56  
                                                        l3452 2D1E  
                                                        l4076 24C0  
                                                        l4068 2470  
                                                        l3540 26DC  
                                                        l3516 2B90  
                                                        l3524 2A34  
                                                        l3532 2C34  
                                                        l1917 23AA  
                                                        l1925 15BC  
                                                        l3438 2A9E  
                                                        l3198 1AAA  
                                                        l3278 29F8  
                                                        l3294 15C4  
                                                        l3286 157C  
                                                        l3366 1982  
                                                        l1950 19EC  
                                                        l3390 2B3C  
                                                        l3622 2444  
                                                        l3614 23F8  
                                                        l4094 1E50  
                                                        l4086 1E1A  
                                                        l3454 2D3A  
                                                        l3462 2D2E  
                                                        l4078 24C4  
                                                        l3630 2218  
                                                        l3542 2722  
                                                        l3518 2B92  
                                                        l3526 2A36  
                                                        l3534 2C3A  
                                                        l3550 2672  
                                                        l4182 2190  
                                                        l1943 17F6  
                                                        l3296 15D6  
                                                        l3288 158C  
                                                        l3376 19AC  
                                                        l3392 2B40  
                                                        l3624 2448  
                                                        l3616 240A  
                                                        l3608 23DA  
                                                        l3480 28B6  
                                                        l4096 1E60  
                                                        l4088 1E1E  
                                                        l3384 2D0A  
                                                        l3456 2CC2  
                                                        l3464 2D26  
                                                        l3640 224A  
                                                        l3632 221A  
                                                        l3536 2D52  
                                                        l3544 272C  
                                                        l3560 2604  
                                                        l3528 2A50  
                                                        l3552 26B0  
                                                        l3800 285E  
                                                        l1961 2A14  
                                                        l3298 15E4  
                                                        l3378 19D6  
                                                        l3394 2B46  
                                                        l3386 2B2A  
                                                        l3618 242E  
                                                        l3490 28D4  
                                                        l3482 28BE  
                                                        l4098 1E92  
                                                        l3458 2CC8  
                                                        l3650 22AC  
                                                        l3642 225C  
                                                        l3634 2226  
                                                        l3626 2204  
                                                        l3546 2C5E  
                                                        l3538 2C42  
                                                        l3570 2644  
                                                        l3562 263C  
                                                        l3554 26BC  
                                                        l3730 2034  
                                                        l1964 2A1C  
                                                        l1956 27A4  
                                                        l3388 2B3A  
                                                        l3396 2B4C  
                                                        l3492 28DC  
                                                        l3484 28C4  
                                                        l3652 22E0  
                                                        l3644 2260  
                                                        l3636 2236  
                                                        l3628 2214  
                                                        l3580 266C  
                                                        l3572 2646  
                                                        l3564 263E  
                                                        l3556 26C8  
                                                        l3548 2CB6  
                                                        l3732 2038  
                                                        l3740 204A  
                                                        l1957 27AC  
                                                        l1885 2B7E  
                                                        l1990 2A90  
                                                        l3398 2B50  
                                                        l3494 28DE  
                                                        l3486 28C8  
                                                        l3590 2982  
                                                        l3582 2956  
                                                        l3646 2276  
                                                        l3638 2244  
                                                        l3574 2648  
                                                        l3566 2640  
                                                        l3558 26D4  
                                                        l3750 207C  
                                                        l3734 203A  
                                                        ?_pad 0514  
                                                        l1976 2578  
                                                        l1984 29DC  
                                                        l3496 28E2  
                                                        l3488 28CE  
                                                        l3592 2994  
                                                        l3584 2966  
                                                        l3648 228E  
                                                        l3576 2654  
                                                        l3568 2642  
                                                        l3840 2B04  
                                                        l3760 20DE  
                                                        l3752 208E  
                                                        l3744 205A  
                                                        l3736 2042  
                                                        l3728 2024  
                                                        l3594 23AC  
                                                        l3498 28E6  
                                                        l3586 296A  
                                                        l3770 291C  
                                                        l3578 2660  
                                                        l3850 2B18  
                                                        l3842 2B08  
                                                        l3762 2112  
                                                        l3754 2092  
                                                        l3746 2070  
                                                        l3738 2046  
                                                        l3596 23BC  
                                                        l3588 2970  
                                                        l3780 2936  
                                                        l3772 291E  
                                                        l3852 2B1C  
                                                        l3844 2B0C  
                                                        l3836 2AFC  
                                                        l3764 2116  
                                                        l3756 20A8  
                                                        l3748 2074  
                                                        l3598 23C0  
                                                        l3774 2926  
                                                        l3766 2908  
                                                        l3854 2B20  
                                                        l3846 2B10  
                                                        l3838 2B00  
                                                        l3790 281A  
                                                        l3758 20C0  
                                                        l3776 2928  
                                                        l3768 2918  
                                                        l3784 293A  
                                                        l3856 2B24  
                                                        l3848 2B14  
                                                        l3792 282C  
                                                        l3786 2950  
                                                        l3778 292A  
                                                        l3794 2830  
                                                        l3890 28AC  
                                                        l3882 2864  
                                                        l3796 2840  
                                                        l3788 280A  
                                                        l3884 2876  
                                                        l3892 2BEA  
                                                        l3798 284C  
                                                        l3886 2884  
                                                        l3894 2BF0  
                                                        l3888 2894  
                                                        l3896 2BF2  
                                                        l3898 2C02  
                                                        STR_1 1501  
                                                        STR_2 1501  
                                                        STR_3 1501  
                                                        STR_4 1501  
                                                        u1400 2A84  
                                                        u2200 281A  
                                                        u1401 2A80  
                                                        u2201 2816  
                                                        u1410 1A00  
                                                        u2210 2840  
                                                        u2130 2034  
                                                        u1411 19FC  
                                                        u2211 283C  
                                                        u2131 2030  
                                                        u1420 1A32  
                                                        u1500 1BF8  
                                                        u1340 2C1E  
                                                        u2220 285E  
                                                        u2140 205A  
                                                        u1421 1A2E  
                                                        u1501 1BF4  
                                                        u1341 2C1A  
                                                        u2221 285A  
                                                        u2141 2056  
                                                        _LATA 0004BE  
                                                        u1510 1C22  
                                                        u1350 24F6  
                                                        u2150 206E  
                                                        _LATB 0004BF  
                                                        u1431 1A5C  
                                                        u1511 1C1E  
                                                        u1351 24F2  
                                                        u2151 206A  
                                                        _LATC 0004C0  
                                                        u1440 1A80  
                                                        u1520 1C50  
                                                        u1360 2508  
                                                        u1600 1546  
                                                        u2160 208E  
                                                        u2400 2C02  
                                                        u1441 1A7C  
                                                        u1521 1C4C  
                                                        u1361 2504  
                                                        u2161 208A  
                                                        u2401 2BFE  
                                                        u1450 1AAA  
                                                        u1530 1C98  
                                                        u1370 2530  
                                                        u1610 155C  
                                                        u2170 2112  
                                                        u1451 1AA6  
                                                        u1531 1C94  
                                                        u1371 252C  
                                                        u1611 1558  
                                                        u2171 210E  
                                                        u1460 1AEA  
                                                        u1380 2566  
                                                        u1540 22F6  
                                                        u1700 176E  
                                                        u1620 158C  
                                                        u2180 2918  
                                                        u1461 1AE6  
                                                        u1381 2562  
                                                        u1541 22F2  
                                                        u1701 176A  
                                                        u1621 1588  
                                                        u2181 2914  
                                                        u1470 1B34  
                                                        u1390 29DC  
                                                        u1550 2318  
                                                        u1710 1780  
                                                        u1630 15A8  
                                                        u2190 294C  
                                                        u1471 1B30  
                                                        u1391 29D8  
                                                        u1551 2314  
                                                        u1711 177C  
                                                        u1631 15A4  
                                                        u2191 2948  
                                                        u1480 1B88  
                                                        u1560 236E  
                                                        u1720 1790  
                                                        u1640 15D6  
                                                        u1800 2CA4  
                                                        u2600 1D0A  
                                                        u1481 1B84  
                                                        u1561 236A  
                                                        u1721 178C  
                                                        u1641 15D2  
                                                        u1801 2C9E  
                                                        u2601 1D06  
                                                        u1810 2AB8  
                                                        u1490 1BBA  
                                                        u1570 237E  
                                                        u1730 17A8  
                                                        u1650 15E4  
                                                        u2370 2876  
                                                        _T2PR 00031D  
                                                        u1811 2AB4  
                                                        u1491 1BB6  
                                                        u1571 237A  
                                                        u1731 17A4  
                                                        u1651 15E0  
                                                        u2371 2872  
                                                        u1580 29F8  
                                                        u1660 170C  
                                                        u1740 1822  
                                                        u2540 1F38  
                                                        u1900 23EE  
                                                        u2700 1E34  
                                                        u2620 1D68  
                                                        u2380 2884  
                                                        u1581 29F4  
                                                        u1661 1708  
                                                        u1741 181E  
                                                        u2541 1F34  
                                                        u1901 23EA  
                                                        u2701 1E30  
                                                        u2621 1D64  
                                                        u2381 2880  
                                                        u1670 172A  
                                                        u1590 1544  
                                                        u1750 1874  
                                                        u2550 1F52  
                                                        u1806 2CA6  
                                                        u1910 240A  
                                                        u1830 28F6  
                                                        u2630 1DEE  
                                                        u2390 28AC  
                                                        u1671 1726  
                                                        u1591 153E  
                                                        u1751 1870  
                                                        u2551 1F4E  
                                                        u1911 2406  
                                                        u1831 28F2  
                                                        u2631 1DEA  
                                                        u2615 1D34  
                                                        u2391 28A8  
                                                        u1680 1744  
                                                        u1760 189E  
                                                        u1920 241A  
                                                        u2640 1E04  
                                                        u1681 1740  
                                                        u1761 189A  
                                                        u1921 2414  
                                                        u2641 1E00  
                                                        u1690 175E  
                                                        u1770 195C  
                                                        u1930 2444  
                                                        u2730 1F22  
                                                        u1850 2966  
                                                        u2650 245E  
                                                        u1691 175A  
                                                        u1771 1958  
                                                        u1931 2440  
                                                        u2731 1F1E  
                                                        u2715 1E3E  
                                                        u1851 2962  
                                                        u2651 245A  
                                                        u2580 201E  
                                                        u1780 2B3A  
                                                        u1860 2980  
                                                        u2660 2480  
                                                        u1940 2214  
                                                        u2740 21F8  
                                                        u2581 201A  
                                                        u2565 1F5C  
                                                        u1781 2B36  
                                                        u1845 28FE  
                                                        u2725 1E7A  
                                                        u1861 297C  
                                                        u2661 247C  
                                                        u1941 2210  
                                                        u2741 21F4  
                                                        u1790 27A4  
                                                        u1926 241C  
                                                        u1846 2900  
                                                        u1870 2994  
                                                        u1950 2236  
                                                        u2590 1CEA  
                                                        u1791 27A0  
                                                        u2575 1F86  
                                                        u1871 2990  
                                                        u1951 2232  
                                                        u2591 1CE6  
                                                        u1880 23BC  
                                                        u2680 24D6  
                                                        u1960 225C  
                                                        u1881 23B8  
                                                        u2681 24D2  
                                                        u1961 2258  
                                                        u1890 23DA  
                                                        u2690 1E1A  
                                                        u1970 22E0  
                                                        u1891 23D6  
                                                        u2691 1E16  
                                                        u2675 248A  
                                                        u1971 22DC  
                                                        _PMD0 000063  
                                                        u2757 288A  
                                                        _PMD1 000064  
                                                        _PMD2 000065  
                                                        u2767 1D4E  
                                                        _PMD3 000066  
                                                        _PMD4 000067  
                                                        u2777 223C  
                                                        _PMD5 000068  
                                     _TMR1_HasOverflowOccured 2C94  
                                                        _TMR2 00031C  
                                                        _WPUA 000401  
                                                        _WPUB 000409  
                                                        _WPUC 000411  
                                                        abs@a 0514  
                                                        _dbuf 0577  
                                                        _main 211C  
                                                        _dtoa 1514  
                                                        _prec 0564  
                                                        _nout 0560  
                                                        pad@i 051B  
                                                        pad@p 0518  
                                                        fsr1h 0004E2  
                                                        fsr2h 0004DA  
                                                        indf2 0004DF  
                                                        fsr1l 0004E1  
                                                        pad@w 051D  
                                                        fsr2l 0004D9  
                                                        start 001A  
                                                 _switchEvent 0575  
                                                ___param_bank 000000  
                                                       ??_ADC 055B  
                                                       ??_PWM 055B  
                                                       ??_VSR 055B  
                                                       ??_abs 0516  
                                                       ??_pad 051A  
                                   __size_of_DATAEE_WriteByte 0052  
   PWM1_16BIT_SetSlice1Output1DutyCycleRegister@registerValue 0502  
                                     __end_of_TMR0_Initialize 2BA6  
                              ??_TMR0_DefaultInterruptHandler 0501  
                              __size_of_OSCILLATOR_Initialize 001C  
                               __end_of_OSCILLATOR_Initialize 2C7A  
                                             __end_of___aodiv 1B76  
                                                       _ADCAP 0003F0  
                                                       _ADACT 0003F9  
                                                       ?_main 0501  
                                                       ?_dtoa 051F  
                                                       _ADCLK 0003FA  
                                             __end_of___aomod 1CDA  
                                                       _ADCNT 0003E6  
                                                       _ADPCH 0003EC  
                                                       _ADREF 0003F8  
                                                       _ADRES 0003EA  
                                                       _ADRPT 0003E7  
                                             _TMR1_StartTimer 2D4C  
                                                       _T1CLK 000317  
                                                       _T1CON 000314  
                                                       _U1P1H 0002A6  
                                                       _U1P2H 0002A8  
                                                       _U1P1L 0002A5  
                                                       _U1P3H 0002AA  
                                                       _T2CON 00031E  
                                                       _U1P2L 0002A7  
                                                       _U1P3L 0002A9  
                                                       _T2HLT 00031F  
                                                       _T2TMR 00031C  
                                                       _U1UIR 0002B1  
                                                       _T2RST 000321  
                                                       _U1RXB 0002A1  
                                                       _U1TXB 0002A3  
                                                       i2l289 2602  
                                                       i2l555 2D5A  
                                                       i2l549 2AFA  
                                    _rotateReg@Interrupt$F412 056D  
                                                       i2l764 2BE8  
                                      ?_PWM1_16BIT_Initialize 0501  
                                                       _OSCEN 0000B3  
                                                vfpfcnvrt@fmt 0545  
                                                       _TMR0H 000319  
                                                       _TMR1H 000313  
                                                       _TMR0L 000318  
                                                       _TMR1L 000312  
                                                       _TRISA 0004C6  
                                                       _TRISB 0004C7  
                                                       _TRISC 0004C8  
                           __size_of_TMR0_SetInterruptHandler 000A  
                                                       _Blink 23AC  
                                   ?_TMR0_SetInterruptHandler 0502  
                                                  _HelloWorld 2956  
                                            __end_of_TMR0_ISR 2AFC  
            _PWM1_16BIT_Slice1Output1_DefaultInterruptHandler 000000  
                                             _DATAEE_ReadByte 2C7A  
                                                       _delay 0570  
                                                       _flags 0566  
                                          __size_of_TMR2_Stop 0006  
                                                 ?_TMR2_Start 0501  
                                                       _fputc 24E4  
                                                       _fputs 299A  
                                                       pad@fp 0514  
                                                       _width 0562  
                                             __end_of_nextLab 2C08  
                                                       _putch 2D14  
                                                       dtoa@d 0521  
                                                       dtoa@i 0541  
                                                       dtoa@n 0539  
                                                       dtoa@p 0533  
                                                       dtoa@s 0537  
                                                       dtoa@w 0535  
                                     __end_of_TMR1_Initialize 2A58  
                                                       pclath 0004FA  
                                                       tablat 0004F5  
                                                       status 0004D8  
                                             _TMR2_StartTimer 2D3A  
                            _UART1_DefaultFramingErrorHandler 000000  
                                             _TMR1_WriteTimer 2B2A  
                                      ??_PWM_Output_D7_Enable 0502  
                                             __initialization 2BA6  
                                                __end_of_main 2204  
                                                __end_of_dtoa 17F8  
                                     __end_of_TMR2_Initialize 2C42  
                                 ?_INTERRUPT_InterruptManager 0501  
                                                ?_UART1_Write 0501  
                                                      ??_main 05AF  
                                                      ??_dtoa 0529  
                                           ??_WWDT_Initialize 0502  
                                                   ??_LAB_ISR 0501  
                                               __activetblptr 000003  
               __end_of_PWM1_16BIT_Period_SetInterruptHandler 2D0A  
              __size_of_PWM1_16BIT_Period_SetInterruptHandler 000A  
                     ??_PWM1_16BIT_Period_SetInterruptHandler 0504  
                      ?_PWM1_16BIT_Period_SetInterruptHandler 0502  
                       _PWM1_16BIT_Period_SetInterruptHandler 2D00  
                                                      ?_Blink 0501  
                                            _UART1_Initialize 2672  
                                   ??_TMR1_HasOverflowOccured 0502  
                                                      _ADACCH 0003E4  
                                                      _ADACCL 0003E3  
                                                      _ADACCU 0003E5  
                                                      _ADACQH 0003EF  
                                                      _ADACQL 0003EE  
                                                      _ADCON0 0003F3  
                                                      _ADCON1 0003F4  
                                                      _ADCON2 0003F5  
                                                      _ADCON3 0003F6  
                                                      _ADERRH 0003DE  
                                                      _ADERRL 0003DD  
                                                      ?_fputc 0504  
                                                      _ADLTHH 0003DA  
                                                      _ACTCON 0000AC  
                                                      _ADLTHL 0003D9  
                                                      ?_fputs 050D  
                                                      _ADRESH 0003EB  
                                                      _ADRESL 0003EA  
                                                      _ADPREH 0003F2  
                                                      _ADPREL 0003F1  
                                                      _ADSTAT 0003F7  
                                                      _ADUTHH 0003DC  
                                                      _ADUTHL 0003DB  
                                                      _ANSELA 000400  
                                                      ?_putch 0501  
                                                      _ANSELB 000408  
                                                      _ANSELC 000410  
                                                      _T0CON0 00031A  
                                                      _T0CON1 00031B  
                                                      _EEPROM 1E0A  
                                                      _T1GATE 000316  
                                                      _T1GCON 000315  
                                                      _U1CON0 0002AB  
                                                      _U1CON1 0002AC  
                                                      _U1CON2 0002AD  
                                                      _U1BRGH 0002AF  
                                                      _U1FIFO 0002B0  
                                                      _U1BRGL 0002AE  
                                     TMR1_WriteTimer@timerVal 0502  
                                                      _RC5PPS 000216  
                                                      _ODCONA 000402  
                                                      _ODCONB 00040A  
                                                      _ODCONC 000412  
                                                      _RC6PPS 000217  
                                                      i2l3470 2590  
                                                      i2l3472 2594  
                                                      i2l3474 25AA  
                                                      i2l3466 257A  
                                                      i2l3476 25C2  
                                                      i2l3468 258C  
                                                      i2l3900 2BC8  
                                                      i2l3478 25E0  
                                                      i2l3830 2ACC  
                                                      i2l3902 2BD6  
                                                      i2l3832 2ACE  
                                                      i2l3904 2BE4  
                                                      _INLVLA 000404  
                                                      i2l3834 2AE2  
                                                      _INLVLB 00040C  
                                                      _INLVLC 000414  
                                                      _TABLAT 0004F5  
                                                      _OSCFRQ 0000B1  
                                                      _TMR0IE 00255F  
                                                      _TMR1IF 0025B4  
                                       _UART1_SetErrorHandler 2CE2  
                                               ??_SleepWakeUp 0502  
                                                      _Timer1 2024  
                                          __size_of_Interrupt 004E  
                                                vfprintf@cfmt 0559  
                                                      _Rotate 2204  
                                     __end_of_TMR1_StartTimer 2D52  
                                                ?_TMR1_Reload 0501  
                                                   ??___aodiv 0512  
                                                   ??___aomod 0512  
                                           __end_of_TMR2_Stop 2D3A  
                                         __size_of_TMR2_Start 0006  
                                            ?_TMR0_Initialize 0501  
                                                      clear_0 2BAC  
                                                      _printf 2B58  
                                                      pad@buf 0516  
                                                      dtoa@fp 051F  
                                     __end_of_DATAEE_ReadByte 2C94  
                                                      _strlen 2A58  
                                             _ADCC_Initialize 27AE  
                                                      fputc@c 0504  
                                              _PMD_Initialize 2C42  
                                                      fputs@c 0511  
                                                      fputs@i 0512  
                                                      fputs@s 050D  
                                                   ??_nextLab 0502  
                                                __mediumconst 0000  
                                                 ?_HelloWorld 0501  
                                                      tblptrh 0004F7  
                                                      tblptrl 0004F6  
                                                      tblptru 0004F8  
                           __size_of_ADCC_GetSingleConversion 003A  
                                            __end_of_vfprintf 27AE  
                                   ?_ADCC_GetSingleConversion 0502  
                                     __end_of_TMR2_StartTimer 2D40  
       PWM1_16BIT_Period_SetInterruptHandler@InterruptHandler 0502  
PWM1_16BIT_Slice1Output2_SetInterruptHandler@InterruptHandler 0502  
PWM1_16BIT_Slice1Output1_SetInterruptHandler@InterruptHandler 0502  
                    TMR0_SetInterruptHandler@InterruptHandler 0502  
                        __end_of_UART1_SetOverrunErrorHandler 2CD8  
                       __size_of_UART1_SetOverrunErrorHandler 000A  
                                _UART1_SetOverrunErrorHandler 2CCE  
                                   _UART1_DefaultErrorHandler 000000  
                                     __end_of_TMR1_WriteTimer 2B58  
                               __size_of_INTERRUPT_Initialize 0004  
                                            ?_TMR1_Initialize 0501  
                                           _SYSTEM_Initialize 2AFC  
                                                  __accesstop 0560  
                                     __end_of__initialization 2BC2  
                                     ??_PWM_Output_D7_Disable 0502  
                                          ?_SYSTEM_Initialize 0501  
                                               ___rparam_used 000001  
                                               __end_of_Blink 244E  
                                              __pcstackCOMRAM 0501  
                                         ??_SYSTEM_Initialize 0504  
                                                   ?_TMR0_ISR 0501  
                                            _DATAEE_WriteByte 28B6  
                                         __end_of_SleepWakeUp 2864  
                                               __end_of_fputc 257A  
                                               __end_of_fputs 29DE  
                                               __end_of_putch 2D1E  
                                            ?_TMR2_Initialize 0501  
                                      __end_of_PMD_Initialize 2C5E  
                                                     ??_Blink 0504  
                                   _UART1_FramingErrorHandler 05A1  
                                           __end_of_Interrupt 2956  
                                                     ??_fputc 0508  
                                   __end_of_SYSTEM_Initialize 2B2A  
                                                     ??_fputs 0511  
                                                     ??_putch 0503  
                                                     ?_EEPROM 0501  
                                                  __pbssBANK5 0560  
                               ?_UART1_SetOverrunErrorHandler 0502  
                                      ?_UART1_SetErrorHandler 0502  
                                                     IVTBASEH 00045E  
                                                     IVTBASEL 00045D  
                                                     IVTBASEU 00045F  
                                                     ?_Timer1 0501  
                                                     ?_Rotate 0501  
                                         __size_of_HelloWorld 0044  
                            __end_of_TMR0_SetInterruptHandler 2D14  
                                            ?_TMR1_StartTimer 0501  
                                                  ??_TMR0_ISR 0502  
                                     __end_of_ADCC_Initialize 280A  
                                                     _ADFLTRH 0003E2  
                                                     _ADFLTRL 0003E1  
                                     ??_PWM1_16BIT_Initialize 0504  
                                                  _ledDisplay 056B  
                                                     _ADPREVH 0003E9  
                                                     _ADPREVL 0003E8  
                                                     _ADSTPTH 0003E0  
                                                     _ADSTPTL 0003DF  
                                                     ?_printf 05A7  
                                             ?_PMD_Initialize 0501  
                                                     ?_strlen 0502  
                                     __size_of_TMR1_StopTimer 0006  
                                            ?_DATAEE_ReadByte 0502  
                                                     _LAB_ISR 257A  
                                                     _U1ERRIE 0002B3  
                                                     _U1ERRIR 0002B2  
                                        __size_of_UART1_Write 001E  
                                                     _U1RXPPS 000272  
                                                     _OSCCON1 0000AD  
                                                     _OSCCON3 0000AF  
                                          __size_of_vfpfcnvrt 01F6  
                                                     _TBLPTRH 0004F7  
                                                     _TBLPTRL 0004F6  
                                                     _TBLPTRU 0004F8  
                                                     _NVMADRH 000044  
                                                     _NVMADRL 000043  
                                                     _NVMADRU 000045  
                                                     _OSCTUNE 0000B0  
                                                     _PWM1CLK 000461  
                                                     _NVMDATL 000046  
                                                     _PWM1GIE 000468  
                                                     _PWM1CON 000469  
                                                     _PWM1GIR 000467  
                                                     _PWM1ERS 000460  
                                                     _PWM1LDS 000462  
                                                     _PWM1PRH 000464  
                                                     _PWM1PRL 000463  
                                                     _NVMLOCK 000042  
                                                     _SLRCONA 000403  
                                                     _SLRCONB 00040B  
                                                     _SLRCONC 000413  
                                                     _WDTCON0 000078  
                                                     _WDTCON1 000079  
                                                ??_TMR2_Start 0502  
                                     __size_of_TMR2_StopTimer 0006  
                                      __size_of_checkButtonS1 0052  
                                            ?_TMR2_StartTimer 0501  
                                            ?_TMR1_WriteTimer 0502  
                                             __size_of_EEPROM 011E  
                                        DATAEE_WriteByte@bAdd 0502  
                                                 _SleepWakeUp 280A  
                                                     __Hparam 0000  
                                                     __Lparam 0000  
                                    __end_of_UART1_Initialize 26DC  
                                             _WWDT_Initialize 2CB6  
                                             __size_of_Timer1 00F8  
                                             __size_of_Rotate 00E2  
                                                     ___aodiv 19EE  
                                                     ___aomod 1B76  
                                                   ?_vfprintf 0553  
                                                __psmallconst 1500  
                                          __end_of_TMR2_Start 2D46  
                                        __size_of_TMR1_Reload 000E  
                                                     __pcinit 2BA6  
                                                     __ramtop 1500  
                                                     __ptext0 211C  
                                                     __ptext1 2BEA  
                                                     __ptext2 2864  
                                                     __ptext3 1CDA  
                                                     __ptext4 2024  
                                                     __ptext5 280A  
                                                     __ptext6 2AFC  
                                                     __ptext7 2CB6  
                                                     __ptext8 2672  
                                                     __ptext9 2CCE  
                                             __size_of_printf 0028  
                                                __size_of_ADC 00FC  
                                             __size_of_strlen 003A  
        __end_of_PWM1_16BIT_Slice1Output1_SetInterruptHandler 2D00  
       __size_of_PWM1_16BIT_Slice1Output1_SetInterruptHandler 000A  
              ??_PWM1_16BIT_Slice1Output1_SetInterruptHandler 0504  
               ?_PWM1_16BIT_Slice1Output1_SetInterruptHandler 0502  
                _PWM1_16BIT_Slice1Output1_SetInterruptHandler 2CF6  
                                                   _T1CONbits 000314  
                                                __size_of_PWM 0096  
                                                __size_of_VSR 0130  
                                       _OSCILLATOR_Initialize 2C5E  
                                                   _T2CONbits 00031E  
                                                __size_of_abs 0040  
                                                __size_of_pad 00C6  
                                                     _nextLab 2BEA  
                                    ??_PIN_MANAGER_Initialize 0502  
                                                   _T2HLTbits 00031F  
                                                  fp__LAB_ISR 0000  
                                  __size_of_SYSTEM_Initialize 002E  
                                        end_of_initialization 2BC2  
            _PWM1_16BIT_Slice1Output2_DefaultInterruptHandler 000000  
                                                   _T2RSTbits 000321  
                                                   _PCON0bits 0004F0  
                                                     fputc@fp 0506  
                                                     fputs@fp 050F  
                              ??_UART1_SetOverrunErrorHandler 0504  
                                           __end_of_vfpfcnvrt 19EE  
                               __size_of_PWM_Output_D7_Enable 0008  
                                                     postdec2 0004DD  
                                                   _PWM1S1CFG 00046A  
                                                   _PWM1S1P1H 00046C  
                                               _checkButtonS1 2864  
                                                   _PWM1S1P2H 00046E  
                                                   _PWM1S1P1L 00046B  
                                                   _PWM1S1P2L 00046D  
                                                     postinc0 0004EE  
                                                     postinc1 0004E6  
                                                     postinc2 0004DE  
                                                   _PWM1PIPOS 000466  
                                            ?_ADCC_Initialize 0501  
                                                  ??_vfprintf 0559  
                            __end_of_ADCC_GetSingleConversion 2ACC  
                                           UART1_Write@txData 0502  
                                                     strlen@a 0504  
                                                     strlen@s 0502  
                                                   _PWMIN0PPS 000257  
                                                   _PWMIN1PPS 000258  
                                    _TMR0_SetInterruptHandler 2D0A  
                                                   _PORTCbits 0004D0  
                                                   _TMR2_Stop 2D34  
                                                ??_HelloWorld 0502  
                                    __end_of_DATAEE_WriteByte 2908  
                                     __end_of_WWDT_Initialize 2CC2  
                                              __end_of_EEPROM 1F28  
                              __size_of_PWM_Output_D7_Disable 0008  
                               __end_of_PWM_Output_D7_Disable 2D2E  
                                              ?_checkButtonS1 0501  
                                          __end_of_HelloWorld 299A  
                                              __end_of_Timer1 211C  
                                __end_of_INTERRUPT_Initialize 2D56  
                                              __end_of_Rotate 22E6  
                                                 vfpfcnvrt@ap 0547  
                                                 vfpfcnvrt@fp 0543  
                                                 vfpfcnvrt@ll 054B  
                                           __size_of_TMR0_ISR 0030  
                                              _TMR1_StopTimer 2D46  
                                                  ?_TMR2_Stop 0501  
                                      ?_OSCILLATOR_Initialize 0501  
                                    ?_TMR1_HasOverflowOccured 0501  
                                              __end_of_printf 2B80  
                                              __end_of_strlen 2A92  
                                          _rotateReg@VSR$F253 056F  
                                         start_initialization 2BA6  
                                                 __end_of_ADC 2024  
                                                 __end_of_PWM 24E4  
                                                 __end_of_VSR 1E0A  
                                    __size_of_TMR0_Initialize 0026  
                             __size_of_PIN_MANAGER_Initialize 006A  
                                                 __end_of_abs 2A1E  
                                                 __end_of_pad 23AC  
                                              _TMR2_StopTimer 2D2E  
                                     ??_UART1_SetErrorHandler 0504  
                                                 putch@txData 0503  
                                                    ??_EEPROM 055B  
                                                  ivt0x8_base 0008  
                                                   _Interrupt 2908  
                                         DATAEE_ReadByte@bAdd 0502  
                                                    ??_Timer1 0504  
                                    __size_of_TMR1_Initialize 003A  
                                                 vfprintf@fmt 0555  
                                                    ??_Rotate 0502  
                                            ??_PMD_Initialize 0502  
                                      __end_of_TMR1_StopTimer 2D4C  
                                                    ??_printf 055B  
                              __size_of_PWM1_16BIT_Initialize 006E  
                                                    ??_strlen 0504  
                               __end_of_PWM1_16BIT_Initialize 2672  
                                                    ?_LAB_ISR 0501  
                                    _ADCC_GetSingleConversion 2A92  
                                      __end_of_TMR2_StopTimer 2D34  
                                                 __pbssCOMRAM 055E  
                                                   _adcResult 0571  
                                          _UART1_ErrorHandler 059D  
                                               __pcstackBANK5 05A7  
                                            ___aodiv@dividend 0502  
                                    __size_of_TMR2_Initialize 001C  
                                                  ?_Interrupt 0501  
                                            ?_WWDT_Initialize 0501  
                                       _adcResult@EEPROM$F550 056C  
                                       _TMR0_InterruptHandler 05A5  
                                                   __pnvBANK5 0597  
                                                ?_SleepWakeUp 0501  
                                             ??_checkButtonS1 0502  
                                      _PIN_MANAGER_Initialize 26DC  
                                                   _dtoa$2841 0531  
                                           ?_UART1_Initialize 0501  
                        __end_of_UART1_SetFramingErrorHandler 2CE2  
                       __size_of_UART1_SetFramingErrorHandler 000A  
                                _UART1_SetFramingErrorHandler 2CD8  
                                                   _labNumber 0576  
                             ADCC_GetSingleConversion@channel 0506  
                                                    ?___aodiv 0502  
                                                    ?___aomod 0502  
                                            ___aodiv@quotient 0514  
                                                 _flagCounter 0573  
                                          ??_UART1_Initialize 0504  
                             __end_of_TMR1_HasOverflowOccured 2CA8  
                                             ?_TMR1_StopTimer 0501  
                                                   _bufferRAM 001500  
                                            _uart1RxLastError 056A  
                                               ??_UART1_Write 0502  
                                ??_INTERRUPT_InterruptManager 0502  
                                                 ??_TMR2_Stop 0502  
                                           __size_of_vfprintf 0068  
                                                 __smallconst 1500  
                                    __size_of_TMR1_StartTimer 0006  
                            _UART1_DefaultOverrunErrorHandler 000000  
                                             ?_TMR2_StopTimer 0501  
                                                    ?_nextLab 0501  
                                              __size_of_Blink 00A2  
                                              __size_of_fputc 0096  
                                                    _T2CLKCON 000320  
                                              __size_of_fputs 0044  
                                    __size_of_DATAEE_ReadByte 001A  
                                                 _U1ERRIRbits 0002B2  
                                              __size_of_putch 000A  
                                        _INTERRUPT_Initialize 2D52  
                   _PWM1_16BIT_Period_DefaultInterruptHandler 000000  
                                           ??_TMR0_Initialize 0504  
                                                    _LATAbits 0004BE  
                       UART1_SetErrorHandler@interruptHandler 0502  
                                                    _LATCbits 0004C0  
                                                    _PIE3bits 0004AB  
                                                    _PIE4bits 0004AC  
                                    __size_of_TMR2_StartTimer 0006  
                                    __size_of_TMR1_WriteTimer 002E  
                         __size_of_INTERRUPT_InterruptManager 0022  
                                                    i2u241_40 2BD6  
                                                    i2u241_41 2BD2  
                                                    i2u242_40 2BE4  
                                                    i2u242_41 2BE0  
                                                    i2u228_40 2AE2  
                                                    i2u228_41 2ADE  
                                  ??_TMR0_SetInterruptHandler 0504  
                                                    i2u182_40 258C  
                                                    i2u229_48 2AE8  
                                                    i2u182_41 2588  
                                                    i2u229_49 2AFA  
                                                    _PIR0bits 0004B3  
                                                    _PIR3bits 0004B6  
                                                    _PIR4bits 0004B7  
                                               ??_TMR1_Reload 0504  
                                                    _PWM1CPRE 000465  
        __end_of_PWM1_16BIT_SetSlice1Output1DutyCycleRegister 2CCE  
       __size_of_PWM1_16BIT_SetSlice1Output1DutyCycleRegister 000C  
              ??_PWM1_16BIT_SetSlice1Output1DutyCycleRegister 0504  
               ?_PWM1_16BIT_SetSlice1Output1DutyCycleRegister 0502  
                _PWM1_16BIT_SetSlice1Output1DutyCycleRegister 2CC2  
                                                    _TMR0_ISR 2ACC  
                               ?_UART1_SetFramingErrorHandler 0502  
                      __end_of_PWM1_16BIT_LoadBufferRegisters 2D5A  
                     __size_of_PWM1_16BIT_LoadBufferRegisters 0004  
                              _PWM1_16BIT_LoadBufferRegisters 2D56  
                                                   _vfpfcnvrt 17F8  
                                           ??_TMR1_Initialize 0502  
                                                   _rotateReg 0572  
                                                  _ADCON0bits 0003F3  
                                                  _ADCON1bits 0003F4  
                                                  _ADCON2bits 0003F5  
                                                  _ADCON3bits 0003F6  
        __end_of_PWM1_16BIT_Slice1Output2_SetInterruptHandler 2CF6  
       __size_of_PWM1_16BIT_Slice1Output2_SetInterruptHandler 000A  
              ??_PWM1_16BIT_Slice1Output2_SetInterruptHandler 0504  
               ?_PWM1_16BIT_Slice1Output2_SetInterruptHandler 0502  
                _PWM1_16BIT_Slice1Output2_SetInterruptHandler 2CEC  
                                            __size_of_LAB_ISR 008A  
                                __end_of_PWM_Output_D7_Enable 2D26  
                                         __end_of_UART1_Write 2C26  
                                       DATAEE_WriteByte@bData 0504  
                                                 _INTCON0bits 0004D6  
                   _PWM1_16BIT_Slice1Output1_InterruptHandler 059B  
                                       ?_INTERRUPT_Initialize 0501  
                                           ?_DATAEE_WriteByte 0502  
                                                 ??_Interrupt 0504  
                                           ??_TMR2_Initialize 0502  
                                          ??_DATAEE_WriteByte 0505  
                                                  _ADSTATbits 0003F7  
                                                    __Hrparam 0000  
                                                  vfprintf@ap 0557  
                                                    __Lrparam 0000  
                                                  vfprintf@fp 0553  
                                     ??_OSCILLATOR_Initialize 0502  
                                            __size_of___aodiv 0188  
                                            __size_of___aomod 0164  
                                                  ?_vfpfcnvrt 0543  
                                             ___aodiv@divisor 050A  
                                             ___aodiv@counter 0512  
                                         __end_of_TMR1_Reload 2CB6  
                                                  _T0CON0bits 00031A  
                                    __size_of_ADCC_Initialize 005C  
                                                    __pivt0x8 0008  
                                            __size_of_nextLab 001E  
                                                    _labState 055E  
                                                    __ptext10 2CD8  
                                                    __ptext11 2CE2  
                                                    __ptext20 26DC  
                                                    __ptext12 2C26  
                                                    __ptext21 2C5E  
                                                    __ptext13 2A1E  
                                                  _T1GCONbits 000315  
                                                    __ptext30 2D1E  
                                                    __ptext22 2D52  
                                                    __ptext14 2B80  
                                                    __ptext31 2D26  
                                                    __ptext23 27AE  
                                                    __ptext15 2604  
                                                    __ptext40 23AC  
                                                    __ptext32 2CC2  
                                                    __ptext24 2204  
                                                    __ptext16 2CEC  
                                                    __ptext41 2D46  
                                                    __ptext33 2D56  
                                                    __ptext25 244E  
                                                    __ptext17 2CF6  
                                                    __ptext50 1514  
                                                    __ptext42 2D4C  
                                                    __ptext34 2908  
                                                    __ptext26 2D2E  
                                                    __ptext18 2D00  
                                                    __ptext51 22E6  
                                                    __ptext43 2CA8  
                                                    __ptext35 2D0A  
                                                    __ptext27 2D34  
                                                    __ptext19 2C42  
                                                    __ptext60 2A92  
                                                    __ptext52 2A58  
                                                    __ptext44 2B2A  
                                                    __ptext36 2956  
                                                    __ptext28 2D3A  
                                                    __ptext61 2BC8  
                                                    __ptext53 299A  
                                                    __ptext45 2C94  
                                                    __ptext37 1E0A  
                                                    __ptext29 2D40  
                                                    __ptext62 2ACC  
                                                    __ptext54 24E4  
                                                    __ptext46 1F28  
                                                    __ptext38 28B6  
                                                    __ptext63 257A  
                                                    __ptext55 2D14  
                                                    __ptext47 2B58  
                                                    __ptext39 2C7A  
                                                    __ptext64 2D5A  
                                                    __ptext56 2C08  
                                                    __ptext48 2746  
                                                    __ptext65 0000  
                                                    __ptext57 29DE  
                                                    __ptext49 17F8  
                                                    __ptext58 1B76  
                                                    __ptext59 19EE  
                                                    _btnState 0574  
                                                  _U1CON0bits 0002AB  
                              __size_of_UART1_SetErrorHandler 000A  
                                           ??_TMR1_StartTimer 0502  
                               __end_of_UART1_SetErrorHandler 2CEC  
                                 DATAEE_WriteByte@GIEBitValue 0505  
                            __size_of_TMR1_HasOverflowOccured 0014  
                                               __size_of_main 00E8  
                                               __size_of_dtoa 02E4  
                                          _adcResult@PWM$F309 0568  
                        __end_of_TMR0_DefaultInterruptHandler 2D5C  
                       __size_of_TMR0_DefaultInterruptHandler 0002  
                                _TMR0_DefaultInterruptHandler 2D5A  
                                           ??_DATAEE_ReadByte 0504  
                                   _UART1_OverrunErrorHandler 059F  
                UART1_SetOverrunErrorHandler@interruptHandler 0502  
                                        __size_of_SleepWakeUp 005A  
                                  ??_ADCC_GetSingleConversion 0504  
                          _PWM1_16BIT_Period_InterruptHandler 0597  
                                       _PWM_Output_D7_Disable 2D26  
                                                    _vfprintf 2746  
                                           ??_TMR2_StartTimer 0502  
                          __end_of_INTERRUPT_InterruptManager 2BEA  
                                  _INTERRUPT_InterruptManager 2BC8  
                                                   printf@fmt 05A7  
                                           ??_TMR1_WriteTimer 0504  
                                                 _UART1_Write 2C08  
                                            ___aomod@dividend 0502  
                              ??_UART1_SetFramingErrorHandler 0504  
                                                 _PWM1GIEbits 000468  
                                                 _PWM1CONbits 000469  
                                                 _NVMCON0bits 000040  
                                                 _NVMCON1bits 000041  
                                                 _PWM1GIRbits 000467  
                                      ??_INTERRUPT_Initialize 0502  
                                                    intlevel2 0000  
                                     ?_PIN_MANAGER_Initialize 0501  
                                                 _WDTCON0bits 000078  
                                            ??_TMR1_StopTimer 0502  
                             fp__TMR0_DefaultInterruptHandler 0000  
                               ?_TMR0_DefaultInterruptHandler 0501  
                                       _rotateReg@Timer1$F346 056E  
                                        _PWM_Output_D7_Enable 2D1E  
                                                 _TMR1_Reload 2CA8  
                                                    printf@ap 05AD  
                   _PWM1_16BIT_Slice1Output2_InterruptHandler 0599  
                UART1_SetFramingErrorHandler@interruptHandler 0502  
                                             ___aomod@divisor 050A  
                                                 ??_vfpfcnvrt 0549  
                                            ??_TMR2_StopTimer 0502  
                                             ___aomod@counter 0512  
                                                  _PWM1ERSPPS 000251  
                                             _TMR0_Initialize 2B80  
                                       _PWM1_16BIT_Initialize 2604  
                                   __size_of_UART1_Initialize 006A  
                                                  _TMR2_Start 2D40  
                                                ___aodiv@sign 0513  
                              __end_of_PIN_MANAGER_Initialize 2746  
                                           ??_ADCC_Initialize 0502  
                                                ___aomod@sign 0513  
                                             _TMR1_Initialize 2A1E  
                                       ?_PWM_Output_D7_Enable 0501  
                                      ?_PWM_Output_D7_Disable 0501  
                                       __end_of_checkButtonS1 28B6  
